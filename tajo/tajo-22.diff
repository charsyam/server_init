diff --git tajo-algebra/src/main/java/tajo/algebra/Aggregation.java tajo-algebra/src/main/java/tajo/algebra/Aggregation.java
index 6571414..a70956b 100644
--- tajo-algebra/src/main/java/tajo/algebra/Aggregation.java
+++ tajo-algebra/src/main/java/tajo/algebra/Aggregation.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
-import tajo.util.TUtil;
+import org.apache.tajo.util.TUtil;
 
 public class Aggregation extends UnaryOperator {
   private Target [] targets;
diff --git tajo-algebra/src/main/java/tajo/algebra/BinaryOperator.java tajo-algebra/src/main/java/tajo/algebra/BinaryOperator.java
index eb06402..1883df2 100644
--- tajo-algebra/src/main/java/tajo/algebra/BinaryOperator.java
+++ tajo-algebra/src/main/java/tajo/algebra/BinaryOperator.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 public class BinaryOperator extends Expr {
   Expr left;
diff --git tajo-algebra/src/main/java/tajo/algebra/CaseWhenExpr.java tajo-algebra/src/main/java/tajo/algebra/CaseWhenExpr.java
index 8dd2bed..5e95b8a 100644
--- tajo-algebra/src/main/java/tajo/algebra/CaseWhenExpr.java
+++ tajo-algebra/src/main/java/tajo/algebra/CaseWhenExpr.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 import java.util.ArrayList;
 import java.util.Collection;
diff --git tajo-algebra/src/main/java/tajo/algebra/ColumnReferenceExpr.java tajo-algebra/src/main/java/tajo/algebra/ColumnReferenceExpr.java
index dba02fd..888404d 100644
--- tajo-algebra/src/main/java/tajo/algebra/ColumnReferenceExpr.java
+++ tajo-algebra/src/main/java/tajo/algebra/ColumnReferenceExpr.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
-import tajo.util.TUtil;
+import org.apache.tajo.util.TUtil;
 
 public class ColumnReferenceExpr extends Expr {
   private String rel_name;
diff --git tajo-algebra/src/main/java/tajo/algebra/CreateTable.java tajo-algebra/src/main/java/tajo/algebra/CreateTable.java
index f6e4169..92404ee 100644
--- tajo-algebra/src/main/java/tajo/algebra/CreateTable.java
+++ tajo-algebra/src/main/java/tajo/algebra/CreateTable.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
-import tajo.util.TUtil;
+import org.apache.tajo.util.TUtil;
 
 import java.util.Map;
 
diff --git tajo-algebra/src/main/java/tajo/algebra/Expr.java tajo-algebra/src/main/java/tajo/algebra/Expr.java
index db6e5fd..041ce1d 100644
--- tajo-algebra/src/main/java/tajo/algebra/Expr.java
+++ tajo-algebra/src/main/java/tajo/algebra/Expr.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 import com.google.gson.*;
 
diff --git tajo-algebra/src/main/java/tajo/algebra/ExprType.java tajo-algebra/src/main/java/tajo/algebra/ExprType.java
index 9a29d99..f94e567 100644
--- tajo-algebra/src/main/java/tajo/algebra/ExprType.java
+++ tajo-algebra/src/main/java/tajo/algebra/ExprType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 import com.google.gson.*;
 
@@ -27,7 +27,7 @@ public enum ExprType {
   Relation(Relation.class),
   TableSubQuery(TableSubQuery.class),
   Except(SetOperation.class),
-	Aggregation(tajo.algebra.Aggregation.class),
+	Aggregation(org.apache.tajo.algebra.Aggregation.class),
   Intersect(SetOperation.class),
   Join(Join.class),
   Projection(Projection.class),
diff --git tajo-algebra/src/main/java/tajo/algebra/FunctionExpr.java tajo-algebra/src/main/java/tajo/algebra/FunctionExpr.java
index 5bd5d8d..3bab189 100644
--- tajo-algebra/src/main/java/tajo/algebra/FunctionExpr.java
+++ tajo-algebra/src/main/java/tajo/algebra/FunctionExpr.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
-import tajo.util.TUtil;
+import org.apache.tajo.util.TUtil;
 
 public class FunctionExpr extends Expr {
   private String signature;
diff --git tajo-algebra/src/main/java/tajo/algebra/Join.java tajo-algebra/src/main/java/tajo/algebra/Join.java
index 6af12f9..c2316fd 100644
--- tajo-algebra/src/main/java/tajo/algebra/Join.java
+++ tajo-algebra/src/main/java/tajo/algebra/Join.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
-import tajo.util.TUtil;
+import org.apache.tajo.util.TUtil;
 
 public class Join extends BinaryOperator {
   private JoinType join_type;
diff --git tajo-algebra/src/main/java/tajo/algebra/JoinType.java tajo-algebra/src/main/java/tajo/algebra/JoinType.java
index 5895324..3e0a137 100644
--- tajo-algebra/src/main/java/tajo/algebra/JoinType.java
+++ tajo-algebra/src/main/java/tajo/algebra/JoinType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 public enum JoinType {
   CROSS_JOIN,
diff --git tajo-algebra/src/main/java/tajo/algebra/JsonHelper.java tajo-algebra/src/main/java/tajo/algebra/JsonHelper.java
index 29cddd4..5cf0376 100644
--- tajo-algebra/src/main/java/tajo/algebra/JsonHelper.java
+++ tajo-algebra/src/main/java/tajo/algebra/JsonHelper.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
diff --git tajo-algebra/src/main/java/tajo/algebra/JsonSerializable.java tajo-algebra/src/main/java/tajo/algebra/JsonSerializable.java
index f98c054..0f4dedd 100644
--- tajo-algebra/src/main/java/tajo/algebra/JsonSerializable.java
+++ tajo-algebra/src/main/java/tajo/algebra/JsonSerializable.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 public interface JsonSerializable {
   String toJson();
diff --git tajo-algebra/src/main/java/tajo/algebra/LikeExpr.java tajo-algebra/src/main/java/tajo/algebra/LikeExpr.java
index 2910c62..ac73d74 100644
--- tajo-algebra/src/main/java/tajo/algebra/LikeExpr.java
+++ tajo-algebra/src/main/java/tajo/algebra/LikeExpr.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 public class LikeExpr extends BinaryOperator {
   private boolean not;
diff --git tajo-algebra/src/main/java/tajo/algebra/Limit.java tajo-algebra/src/main/java/tajo/algebra/Limit.java
index 84d88ce..e3ded02 100644
--- tajo-algebra/src/main/java/tajo/algebra/Limit.java
+++ tajo-algebra/src/main/java/tajo/algebra/Limit.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 
 public class Limit extends UnaryOperator {
diff --git tajo-algebra/src/main/java/tajo/algebra/LiteralExpr.java tajo-algebra/src/main/java/tajo/algebra/LiteralExpr.java
index eae0e1c..df8f4dd 100644
--- tajo-algebra/src/main/java/tajo/algebra/LiteralExpr.java
+++ tajo-algebra/src/main/java/tajo/algebra/LiteralExpr.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 public class LiteralExpr extends Expr {
   private String value;
diff --git tajo-algebra/src/main/java/tajo/algebra/Projection.java tajo-algebra/src/main/java/tajo/algebra/Projection.java
index c8b2d7f..bc66bc0 100644
--- tajo-algebra/src/main/java/tajo/algebra/Projection.java
+++ tajo-algebra/src/main/java/tajo/algebra/Projection.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
-import tajo.util.TUtil;
+import org.apache.tajo.util.TUtil;
 
 public class Projection extends UnaryOperator implements Cloneable {
   private boolean project_all;
diff --git tajo-algebra/src/main/java/tajo/algebra/Relation.java tajo-algebra/src/main/java/tajo/algebra/Relation.java
index bb692c2..df44b12 100644
--- tajo-algebra/src/main/java/tajo/algebra/Relation.java
+++ tajo-algebra/src/main/java/tajo/algebra/Relation.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
-import tajo.util.TUtil;
+import org.apache.tajo.util.TUtil;
 
 public class Relation extends Expr {
   private String rel_name;
diff --git tajo-algebra/src/main/java/tajo/algebra/ScalarSubQuery.java tajo-algebra/src/main/java/tajo/algebra/ScalarSubQuery.java
index 35e2a49..f07cb31 100644
--- tajo-algebra/src/main/java/tajo/algebra/ScalarSubQuery.java
+++ tajo-algebra/src/main/java/tajo/algebra/ScalarSubQuery.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 public class ScalarSubQuery extends Expr {
   private Expr subquery;
diff --git tajo-algebra/src/main/java/tajo/algebra/Selection.java tajo-algebra/src/main/java/tajo/algebra/Selection.java
index 8364801..d9f68bc 100644
--- tajo-algebra/src/main/java/tajo/algebra/Selection.java
+++ tajo-algebra/src/main/java/tajo/algebra/Selection.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
-import tajo.util.TUtil;
+import org.apache.tajo.util.TUtil;
 
 public class Selection extends UnaryOperator implements JsonSerializable {
   private Expr search_condition;
diff --git tajo-algebra/src/main/java/tajo/algebra/SetOperation.java tajo-algebra/src/main/java/tajo/algebra/SetOperation.java
index eeff233..8a5ff9e 100644
--- tajo-algebra/src/main/java/tajo/algebra/SetOperation.java
+++ tajo-algebra/src/main/java/tajo/algebra/SetOperation.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 
 import com.google.common.base.Preconditions;
diff --git tajo-algebra/src/main/java/tajo/algebra/Sort.java tajo-algebra/src/main/java/tajo/algebra/Sort.java
index fb0db45..7260e97 100644
--- tajo-algebra/src/main/java/tajo/algebra/Sort.java
+++ tajo-algebra/src/main/java/tajo/algebra/Sort.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
-import tajo.util.TUtil;
+import org.apache.tajo.util.TUtil;
 
 public class Sort extends UnaryOperator {
   private SortSpec [] sort_specs;
diff --git tajo-algebra/src/main/java/tajo/algebra/TableSubQuery.java tajo-algebra/src/main/java/tajo/algebra/TableSubQuery.java
index e1881ae..d46dc4a 100644
--- tajo-algebra/src/main/java/tajo/algebra/TableSubQuery.java
+++ tajo-algebra/src/main/java/tajo/algebra/TableSubQuery.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 public class TableSubQuery extends Relation {
   private Expr subquery;
diff --git tajo-algebra/src/main/java/tajo/algebra/Target.java tajo-algebra/src/main/java/tajo/algebra/Target.java
index ad79484..f7019ea 100644
--- tajo-algebra/src/main/java/tajo/algebra/Target.java
+++ tajo-algebra/src/main/java/tajo/algebra/Target.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
-import tajo.util.TUtil;
+import org.apache.tajo.util.TUtil;
 
 public class Target implements JsonSerializable {
   private Expr expr;
diff --git tajo-algebra/src/main/java/tajo/algebra/UnaryOperator.java tajo-algebra/src/main/java/tajo/algebra/UnaryOperator.java
index 9c38964..59db158 100644
--- tajo-algebra/src/main/java/tajo/algebra/UnaryOperator.java
+++ tajo-algebra/src/main/java/tajo/algebra/UnaryOperator.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 public abstract class UnaryOperator extends Expr {
   private Expr child;
diff --git tajo-algebra/src/test/java/tajo/algebra/AlgebraTestingUtil.java tajo-algebra/src/test/java/tajo/algebra/AlgebraTestingUtil.java
index 697e79d..51b8681 100644
--- tajo-algebra/src/test/java/tajo/algebra/AlgebraTestingUtil.java
+++ tajo-algebra/src/test/java/tajo/algebra/AlgebraTestingUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 import static junit.framework.Assert.assertEquals;
 
diff --git tajo-algebra/src/test/java/tajo/algebra/TestExpr.java tajo-algebra/src/test/java/tajo/algebra/TestExpr.java
index d44c2ca..984c30f 100644
--- tajo-algebra/src/test/java/tajo/algebra/TestExpr.java
+++ tajo-algebra/src/test/java/tajo/algebra/TestExpr.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.algebra;
+package org.apache.tajo.algebra;
 
 import org.junit.Test;
 
 import static junit.framework.Assert.assertEquals;
 import static junit.framework.Assert.assertFalse;
-import static tajo.algebra.LiteralExpr.LiteralType;
+import static org.apache.tajo.algebra.LiteralExpr.LiteralType;
 
 public class TestExpr {
 
diff --git tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AbstractCatalogClient.java tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AbstractCatalogClient.java
index ce0efcb..ffdf217 100644
--- tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AbstractCatalogClient.java
+++ tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AbstractCatalogClient.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.protobuf.ServiceException;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.catalog.CatalogProtocol.CatalogProtocolService;
-import tajo.catalog.proto.CatalogProtos.*;
-import tajo.rpc.protocolrecords.PrimitiveProtos.NullProto;
-import tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
+import org.apache.tajo.catalog.CatalogProtocol.CatalogProtocolService;
+import org.apache.tajo.catalog.proto.CatalogProtos.*;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
 
 import java.util.ArrayList;
 import java.util.Collection;
diff --git tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java
index 69df366..705323b 100644
--- tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java
+++ tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import java.net.URI;
 
diff --git tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AttributeType.java tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AttributeType.java
index 49e757b..fc115e4 100644
--- tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AttributeType.java
+++ tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/AttributeType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 public enum AttributeType {
 	GROUPBY,
diff --git tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogClient.java tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogClient.java
index 6b2f183..260106f 100644
--- tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogClient.java
+++ tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogClient.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.net.NetUtils;
-import tajo.catalog.CatalogProtocol.CatalogProtocolService.BlockingInterface;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.rpc.ProtoBlockingRpcClient;
+import org.apache.tajo.catalog.CatalogProtocol.CatalogProtocolService.BlockingInterface;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.rpc.ProtoBlockingRpcClient;
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
diff --git tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogReader.java tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogReader.java
index 3c61772..105818a 100644
--- tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogReader.java
+++ tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogReader.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
-import tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
 
 public interface CatalogReader {
   boolean existsTable(String tableId);
diff --git tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogService.java tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogService.java
index 290daa0..314304e 100644
--- tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogService.java
+++ tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogService.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
-import tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
 
 import java.util.Collection;
 
@@ -36,14 +36,14 @@ public interface CatalogService {
   /**
    *
    * @return
-   * @throws tajo.catalog.exception.CatalogException
+   * @throws org.apache.tajo.catalog.exception.CatalogException
    */
   Collection<String> getAllTableNames();
 
   /**
    *
    * @return
-   * @throws tajo.catalog.exception.CatalogException
+   * @throws org.apache.tajo.catalog.exception.CatalogException
    */
   Collection<FunctionDesc> getFunctions();
 
diff --git tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogServiceProtocol.java tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogServiceProtocol.java
index bdc7e1a..a3afbfe 100644
--- tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogServiceProtocol.java
+++ tajo-catalog/tajo-catalog-client/src/main/java/tajo/catalog/CatalogServiceProtocol.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
-import tajo.catalog.proto.CatalogProtos.*;
-import tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto;
-import tajo.rpc.protocolrecords.PrimitiveProtos.NullProto;
-import tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.*;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
 
 public interface CatalogServiceProtocol {
   
@@ -37,14 +37,14 @@ public interface CatalogServiceProtocol {
   /**
    * 
    * @return
-   * @throws tajo.catalog.exception.CatalogException
+   * @throws org.apache.tajo.catalog.exception.CatalogException
    */
   GetAllTableNamesResponse getAllTableNames(NullProto request);
   
   /**
    * 
    * @return
-   * @throws tajo.catalog.exception.CatalogException
+   * @throws org.apache.tajo.catalog.exception.CatalogException
    */
   GetFunctionsResponse getFunctions(NullProto request);
   
diff --git tajo-catalog/tajo-catalog-client/src/main/proto/CatalogProtocol.proto tajo-catalog/tajo-catalog-client/src/main/proto/CatalogProtocol.proto
index 4853945..7ea2782 100644
--- tajo-catalog/tajo-catalog-client/src/main/proto/CatalogProtocol.proto
+++ tajo-catalog/tajo-catalog-client/src/main/proto/CatalogProtocol.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.catalog";
+option java_package = "org.apache.tajo.catalog";
 option java_outer_classname = "CatalogProtocol";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-catalog/tajo-catalog-client/src/main/proto/CatalogProtos.proto tajo-catalog/tajo-catalog-client/src/main/proto/CatalogProtos.proto
index dd1bf69..223384d 100644
--- tajo-catalog/tajo-catalog-client/src/main/proto/CatalogProtos.proto
+++ tajo-catalog/tajo-catalog-client/src/main/proto/CatalogProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.catalog.proto";
+option java_package = "org.apache.tajo.catalog.proto";
 option java_outer_classname = "CatalogProtos";
 option optimize_for = SPEED;
 option java_generic_services = false;
diff --git tajo-catalog/tajo-catalog-client/src/main/proto/PrimitiveProtos.proto tajo-catalog/tajo-catalog-client/src/main/proto/PrimitiveProtos.proto
index 5fa6903..e722190 100644
--- tajo-catalog/tajo-catalog-client/src/main/proto/PrimitiveProtos.proto
+++ tajo-catalog/tajo-catalog-client/src/main/proto/PrimitiveProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.rpc.protocolrecords";
+option java_package = "org.apache.tajo.rpc.protocolrecords";
 option java_outer_classname = "PrimitiveProtos";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java
index 69df366..705323b 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import java.net.URI;
 
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/AttributeType.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/AttributeType.java
index 49e757b..fc115e4 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/AttributeType.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/AttributeType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 public enum AttributeType {
 	GROUPBY,
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/CatalogConstants.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/CatalogConstants.java
index 17f7bc4..399b11c 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/CatalogConstants.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/CatalogConstants.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 public class CatalogConstants {
-  public static final String STORE_CLASS="tajo.catalog.store.class";
+  public static final String STORE_CLASS="org.apache.tajo.catalog.store.class";
   
-  public static final String JDBC_DRIVER="tajo.catalog.jdbc.driver";
+  public static final String JDBC_DRIVER="org.apache.tajo.catalog.jdbc.driver";
   public static final String DEFAULT_JDBC_DRIVER="org.apache.derby.jdbc.EmbeddedDriver";
   
-  public static final String JDBC_URI="tajo.catalog.jdbc.uri";
+  public static final String JDBC_URI="org.apache.tajo.catalog.jdbc.uri";
 
   private CatalogConstants() {}
 }
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/CatalogUtil.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/CatalogUtil.java
index de193f3..5e9a43d 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/CatalogUtil.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/CatalogUtil.java
@@ -16,19 +16,19 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.ColumnProto;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.SchemaProto;
-import tajo.util.FileUtil;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.ColumnProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.SchemaProto;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.File;
 import java.io.IOException;
 import java.util.Collection;
 
-import static tajo.catalog.proto.CatalogProtos.StoreType;
+import static org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
 
 public class CatalogUtil {
   public static String getCanonicalName(String signature,
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Column.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Column.java
index 0deff1f..fc944ef 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Column.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Column.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.gson.annotations.Expose;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos.ColumnProto;
-import tajo.catalog.proto.CatalogProtos.ColumnProtoOrBuilder;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.common.ProtoObject;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.ColumnProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.ColumnProtoOrBuilder;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.common.ProtoObject;
 
 public class Column implements ProtoObject<ColumnProto>, Cloneable {
 	private ColumnProto proto = ColumnProto.getDefaultInstance();
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/FunctionDesc.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/FunctionDesc.java
index f11da36..22ce9e5 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/FunctionDesc.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/FunctionDesc.java
@@ -16,19 +16,19 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.function.Function;
-import tajo.catalog.function.GeneralFunction;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionDescProto;
-import tajo.catalog.proto.CatalogProtos.FunctionDescProtoOrBuilder;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.common.ProtoObject;
-import tajo.exception.InternalException;
+import org.apache.tajo.catalog.function.Function;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionDescProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionDescProtoOrBuilder;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.common.ProtoObject;
+import org.apache.tajo.exception.InternalException;
 
 import java.lang.reflect.Constructor;
 import java.util.Arrays;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/IndexDesc.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/IndexDesc.java
index 9e7789b..fb6058e 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/IndexDesc.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/IndexDesc.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.common.base.Objects;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.proto.CatalogProtos.IndexDescProto;
-import tajo.catalog.proto.CatalogProtos.IndexDescProtoOrBuilder;
-import tajo.catalog.proto.CatalogProtos.IndexMethod;
-import tajo.common.ProtoObject;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexDescProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexDescProtoOrBuilder;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexMethod;
+import org.apache.tajo.common.ProtoObject;
 
 public class IndexDesc implements ProtoObject<IndexDescProto>, Cloneable {
   private IndexDescProto proto;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Options.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Options.java
index 9422d78..6fbfa61 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Options.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Options.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.common.collect.Maps;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos.KeyValueProto;
-import tajo.catalog.proto.CatalogProtos.KeyValueSetProto;
-import tajo.catalog.proto.CatalogProtos.KeyValueSetProtoOrBuilder;
-import tajo.common.ProtoObject;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.KeyValueProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.KeyValueSetProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.KeyValueSetProtoOrBuilder;
+import org.apache.tajo.common.ProtoObject;
 
 import java.util.HashMap;
 import java.util.Iterator;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Schema.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Schema.java
index 846bb36..1532dde 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Schema.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/Schema.java
@@ -16,19 +16,19 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.catalog.exception.AlreadyExistsFieldException;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos.ColumnProto;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.SchemaProto;
-import tajo.catalog.proto.CatalogProtos.SchemaProtoOrBuilder;
-import tajo.common.ProtoObject;
+import org.apache.tajo.catalog.exception.AlreadyExistsFieldException;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.ColumnProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.SchemaProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.SchemaProtoOrBuilder;
+import org.apache.tajo.common.ProtoObject;
 
 import java.util.*;
 
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/SchemaObject.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/SchemaObject.java
index dbf52c1..0ce0fec 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/SchemaObject.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/SchemaObject.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 public interface SchemaObject {
 	public Schema getSchema();
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/SortSpec.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/SortSpec.java
index bea4e34..edf7a2b 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/SortSpec.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/SortSpec.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.gson.annotations.Expose;
-import tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.json.GsonCreator;
 
 public class SortSpec implements Cloneable {
   @Expose
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TCatUtil.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TCatUtil.java
index 5ce0e50..9248939 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TCatUtil.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TCatUtil.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.proto.CatalogProtos.*;
-import tajo.catalog.statistics.TableStat;
+import org.apache.tajo.catalog.proto.CatalogProtos.*;
+import org.apache.tajo.catalog.statistics.TableStat;
 
 import java.util.Collection;
 
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableDesc.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableDesc.java
index 6692c21..feeb0a8 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableDesc.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableDesc.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.protobuf.Message;
 import org.apache.hadoop.fs.Path;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableDescImpl.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableDescImpl.java
index fc776e2..5e561ef 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableDescImpl.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableDescImpl.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.annotations.Expose;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.proto.CatalogProtos.TableDescProto;
-import tajo.catalog.proto.CatalogProtos.TableDescProtoOrBuilder;
-import tajo.common.ProtoObject;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableDescProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableDescProtoOrBuilder;
+import org.apache.tajo.common.ProtoObject;
 
 public class TableDescImpl implements TableDesc, ProtoObject<TableDescProto>,
     Cloneable {
@@ -44,7 +44,7 @@ public class TableDescImpl implements TableDesc, ProtoObject<TableDescProto>,
 	
 	public TableDescImpl(String tableId, TableMeta info, Path path) {
 		this();
-		// tajo deems all identifiers as lowcase characters
+		// org.apache.tajo deems all identifiers as lowcase characters
 	  this.tableId = tableId.toLowerCase();
 	  this.meta = info;
 	  this.uri = path;	   
@@ -62,7 +62,7 @@ public class TableDescImpl implements TableDesc, ProtoObject<TableDescProto>,
 	
 	public void setId(String tableId) {
 	  setModified();
-	  // tajo deems all identifiers as lowcase characters
+	  // org.apache.tajo deems all identifiers as lowcase characters
 		this.tableId = tableId.toLowerCase();
 	}
 	
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableMeta.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableMeta.java
index 14938ae..268e70c 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableMeta.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableMeta.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.proto.CatalogProtos.TableProto;
-import tajo.catalog.statistics.TableStat;
-import tajo.common.ProtoObject;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableProto;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.common.ProtoObject;
 
 import java.util.Iterator;
 import java.util.Map.Entry;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableMetaImpl.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableMetaImpl.java
index 602ca6d..8f6b9b6 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableMetaImpl.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableMetaImpl.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.common.base.Objects;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.proto.CatalogProtos.TableProto;
-import tajo.catalog.proto.CatalogProtos.TableProtoOrBuilder;
-import tajo.catalog.statistics.TableStat;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableProtoOrBuilder;
+import org.apache.tajo.catalog.statistics.TableStat;
 
 import java.util.Iterator;
 import java.util.Map.Entry;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableUtil.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableUtil.java
index e79d59d..6325bd2 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableUtil.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/TableUtil.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FSDataInputStream;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.proto.CatalogProtos.TableProto;
-import tajo.util.FileUtil;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableProto;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsFieldException.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsFieldException.java
index 9b33c2f..ee90278 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsFieldException.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsFieldException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.exception;
+package org.apache.tajo.catalog.exception;
 
 public class AlreadyExistsFieldException extends CatalogException {
 	private static final long serialVersionUID = 6766228091940775275L;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsFunctionException.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsFunctionException.java
index 7b3b038..4bf70ae 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsFunctionException.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsFunctionException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.exception;
+package org.apache.tajo.catalog.exception;
 
 public class AlreadyExistsFunctionException extends CatalogException {
 	private static final long serialVersionUID = 3224521585413794703L;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsIndexException.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsIndexException.java
index adb6eb2..a254514 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsIndexException.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsIndexException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.exception;
+package org.apache.tajo.catalog.exception;
 
 public class AlreadyExistsIndexException extends CatalogException {
   private static final long serialVersionUID = 3705839985189534673L;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsTableException.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsTableException.java
index 5abbe0a..98c04b5 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsTableException.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/AlreadyExistsTableException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.exception;
+package org.apache.tajo.catalog.exception;
 
 
 public class AlreadyExistsTableException extends CatalogException {
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/CatalogException.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/CatalogException.java
index c2725ce..760bb71 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/CatalogException.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/CatalogException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.exception;
+package org.apache.tajo.catalog.exception;
 
 public class CatalogException extends RuntimeException {
   private static final long serialVersionUID = -26362412527118618L;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/InvalidTableException.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/InvalidTableException.java
index 90f81a1..c19888f 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/InvalidTableException.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/InvalidTableException.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.catalog.exception;
+package org.apache.tajo.catalog.exception;
 
-import tajo.exception.InternalException;
+import org.apache.tajo.exception.InternalException;
 
 public class InvalidTableException extends InternalException {
 
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchFunctionException.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchFunctionException.java
index 8e360db..fba8d09 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchFunctionException.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchFunctionException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.exception;
+package org.apache.tajo.catalog.exception;
 
 public class NoSuchFunctionException extends RuntimeException {
 	private static final long serialVersionUID = 5062193018697228028L;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchIndexException.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchIndexException.java
index aebfd19..e22e8bc 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchIndexException.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchIndexException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.exception;
+package org.apache.tajo.catalog.exception;
 
 public class NoSuchIndexException extends CatalogException {
   private static final long serialVersionUID = 3705839985189534673L;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchTableException.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchTableException.java
index 9a6da40..bd399b9 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchTableException.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/exception/NoSuchTableException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.exception;
+package org.apache.tajo.catalog.exception;
 
 
 public class NoSuchTableException extends CatalogException {
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/AggFunction.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/AggFunction.java
index a337afb..ab69dd3 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/AggFunction.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/AggFunction.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.catalog.function;
+package org.apache.tajo.catalog.function;
 
 import com.google.gson.Gson;
-import tajo.catalog.Column;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.datum.Datum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.Tuple;
 
 public abstract class AggFunction<T extends Datum> extends Function<T> {
 
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/Function.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/Function.java
index 2e49e34..ff8bda0 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/Function.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/Function.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.catalog.function;
+package org.apache.tajo.catalog.function;
 
 import com.google.common.base.Objects;
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Column;
-import tajo.catalog.json.GsonCreator;
-import tajo.datum.Datum;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.util.TUtil;
 
 public abstract class Function<T extends Datum> implements Cloneable {
   @Expose protected Column[] definedParams;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/FunctionContext.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/FunctionContext.java
index 0517ca9..39f60dd 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/FunctionContext.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/FunctionContext.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.function;
+package org.apache.tajo.catalog.function;
 
 public interface FunctionContext {
 }
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/GeneralFunction.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/GeneralFunction.java
index 8718e0e..9a9cb86 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/GeneralFunction.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/function/GeneralFunction.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.catalog.function;
+package org.apache.tajo.catalog.function;
 
 import com.google.gson.Gson;
-import tajo.catalog.Column;
-import tajo.catalog.json.GsonCreator;
-import tajo.datum.Datum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.Tuple;
 
 public abstract class GeneralFunction<T extends Datum> extends Function<T> {
   public GeneralFunction(Column[] definedArgs) {
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/FunctionAdapter.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/FunctionAdapter.java
index 9bd36ce..a5c03f6 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/FunctionAdapter.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/FunctionAdapter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.catalog.json;
+package org.apache.tajo.catalog.json;
 
 import com.google.gson.*;
-import tajo.catalog.function.Function;
+import org.apache.tajo.catalog.function.Function;
 
 import java.lang.reflect.Type;
 
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/GsonCreator.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/GsonCreator.java
index 24a817f..c5a7d9f 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/GsonCreator.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/GsonCreator.java
@@ -16,20 +16,20 @@
  * limitations under the License.
  */
 
-package tajo.catalog.json;
+package org.apache.tajo.catalog.json;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.TableDesc;
-import tajo.catalog.TableMeta;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.Function;
-import tajo.catalog.function.GeneralFunction;
-import tajo.datum.Datum;
-import tajo.datum.json.DatumAdapter;
-import tajo.gson.ClassNameDeserializer;
-import tajo.gson.ClassNameSerializer;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.Function;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.json.DatumAdapter;
+import org.apache.tajo.gson.ClassNameDeserializer;
+import org.apache.tajo.gson.ClassNameSerializer;
 
 public class GsonCreator {
 	private static GsonBuilder builder;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/PathDeserializer.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/PathDeserializer.java
index 94787f0..a5d6477 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/PathDeserializer.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/PathDeserializer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.json;
+package org.apache.tajo.catalog.json;
 
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/PathSerializer.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/PathSerializer.java
index e39bb9e..e589195 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/PathSerializer.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/PathSerializer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.json;
+package org.apache.tajo.catalog.json;
 
 import com.google.gson.JsonElement;
 import com.google.gson.JsonPrimitive;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/TableDescAdapter.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/TableDescAdapter.java
index 8c7d309..8c63043 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/TableDescAdapter.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/TableDescAdapter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.catalog.json;
+package org.apache.tajo.catalog.json;
 
 import com.google.gson.*;
-import tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.TableDesc;
 
 import java.lang.reflect.Type;
 
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/TableMetaAdapter.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/TableMetaAdapter.java
index a93214f..9c50897 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/TableMetaAdapter.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/json/TableMetaAdapter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.catalog.json;
+package org.apache.tajo.catalog.json;
 
 import com.google.gson.*;
-import tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.TableMeta;
 
 import java.lang.reflect.Type;
 
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/ColumnStat.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/ColumnStat.java
index 99b51ce..ccfae2b 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/ColumnStat.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/ColumnStat.java
@@ -19,19 +19,19 @@
 /**
  *
  */
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import com.google.common.base.Objects;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.annotations.Expose;
 import com.google.protobuf.ByteString;
-import tajo.catalog.Column;
-import tajo.catalog.proto.CatalogProtos.ColumnStatProto;
-import tajo.catalog.proto.CatalogProtos.ColumnStatProtoOrBuilder;
-import tajo.common.ProtoObject;
-import tajo.datum.Datum;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.proto.CatalogProtos.ColumnStatProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.ColumnStatProtoOrBuilder;
+import org.apache.tajo.common.ProtoObject;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.util.TUtil;
 
 public class ColumnStat implements ProtoObject<ColumnStatProto>, Cloneable {
   private ColumnStatProto proto = ColumnStatProto.getDefaultInstance();
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/Stat.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/Stat.java
index d15c229..346c99b 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/Stat.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/Stat.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import com.google.common.base.Objects;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.proto.CatalogProtos.StatProto;
-import tajo.catalog.proto.CatalogProtos.StatType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StatProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.StatType;
 
 public class Stat implements Cloneable {
   @Expose private long val = 0;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/StatSet.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/StatSet.java
index 4ab7375..d3a3c3e 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/StatSet.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/StatSet.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import com.google.common.collect.Maps;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos.StatProto;
-import tajo.catalog.proto.CatalogProtos.StatSetProto;
-import tajo.catalog.proto.CatalogProtos.StatSetProtoOrBuilder;
-import tajo.catalog.proto.CatalogProtos.StatType;
-import tajo.common.ProtoObject;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.StatProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.StatSetProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.StatSetProtoOrBuilder;
+import org.apache.tajo.catalog.proto.CatalogProtos.StatType;
+import org.apache.tajo.common.ProtoObject;
 
 import java.util.Collection;
 import java.util.Map;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/StatisticsUtil.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/StatisticsUtil.java
index ee5ca68..188fdcc 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/StatisticsUtil.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/StatisticsUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import com.google.common.collect.Lists;
 import org.apache.commons.logging.Log;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/TableStat.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/TableStat.java
index 973865a..56396b1 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/TableStat.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/TableStat.java
@@ -19,16 +19,16 @@
 /**
  *
  */
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import com.google.common.base.Objects;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.proto.CatalogProtos.ColumnStatProto;
-import tajo.catalog.proto.CatalogProtos.TableStatProto;
-import tajo.catalog.proto.CatalogProtos.TableStatProtoOrBuilder;
-import tajo.common.ProtoObject;
+import org.apache.tajo.catalog.proto.CatalogProtos.ColumnStatProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableStatProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableStatProtoOrBuilder;
+import org.apache.tajo.common.ProtoObject;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/TupleUtil.java tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/TupleUtil.java
index ab3038c..145af22 100644
--- tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/TupleUtil.java
+++ tajo-catalog/tajo-catalog-common/src/main/java/tajo/catalog/statistics/TupleUtil.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.datum.*;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.datum.*;
 
 public class TupleUtil {
   /** class logger **/
diff --git tajo-catalog/tajo-catalog-common/src/main/proto/CatalogProtos.proto tajo-catalog/tajo-catalog-common/src/main/proto/CatalogProtos.proto
index dd1bf69..223384d 100644
--- tajo-catalog/tajo-catalog-common/src/main/proto/CatalogProtos.proto
+++ tajo-catalog/tajo-catalog-common/src/main/proto/CatalogProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.catalog.proto";
+option java_package = "org.apache.tajo.catalog.proto";
 option java_outer_classname = "CatalogProtos";
 option optimize_for = SPEED;
 option java_generic_services = false;
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestCatalogUtil.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestCatalogUtil.java
index 5d85461..25cf633 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestCatalogUtil.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestCatalogUtil.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import org.junit.Test;
-import tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
 
 import static org.junit.Assert.assertEquals;
 
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestColumn.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestColumn.java
index 2502b82..b9bd34b 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestColumn.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestColumn.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.gson.Gson;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestFunctionDesc.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestFunctionDesc.java
index 49fc09f..f93fc1e 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestFunctionDesc.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestFunctionDesc.java
@@ -16,21 +16,21 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.gson.Gson;
 import org.junit.Test;
-import tajo.catalog.function.GeneralFunction;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionDescProto;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.exception.InternalException;
-import tajo.storage.Tuple;
-import tajo.util.CommonTestingUtil;
-import tajo.util.FileUtil;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionDescProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.exception.InternalException;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestIndexDesc.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestIndexDesc.java
index afbfe5a..1c67520 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestIndexDesc.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestIndexDesc.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.IndexDescProto;
-import tajo.catalog.proto.CatalogProtos.IndexMethod;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexDescProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexMethod;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotSame;
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestOptions.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestOptions.java
index 045e8c7..bcccfd3 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestOptions.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestOptions.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import org.junit.Test;
-import tajo.catalog.proto.CatalogProtos.KeyValueSetProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.KeyValueSetProto;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNull;
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestSchema.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestSchema.java
index 8b5bee3..5bf9559 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestSchema.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestSchema.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.gson.Gson;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.catalog.exception.AlreadyExistsFieldException;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.SchemaProto;
+import org.apache.tajo.catalog.exception.AlreadyExistsFieldException;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.SchemaProto;
 
 import static org.junit.Assert.*;
 
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableDesc.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableDesc.java
index f3c60cf..3557802 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableDesc.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableDesc.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.gson.Gson;
 import org.apache.hadoop.fs.Path;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.catalog.json.GsonCreator;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
 
 import static org.junit.Assert.assertEquals;
 
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableInfo.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableInfo.java
index 052bbfe..aa0d5e2 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableInfo.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableInfo.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import org.junit.Before;
 import org.junit.Test;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.proto.CatalogProtos.TableProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableProto;
 
 import static org.junit.Assert.*;
 
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableMeta.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableMeta.java
index e388375..fe265dc 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableMeta.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/TestTableMeta.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import org.junit.Before;
 import org.junit.Test;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.proto.CatalogProtos.TableProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableProto;
 
 import static org.junit.Assert.*;
 
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestColumnStat.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestColumnStat.java
index 9af4453..b5c77d1 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestColumnStat.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestColumnStat.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import org.junit.Test;
-import tajo.catalog.Column;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.datum.DatumFactory;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestStatSet.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestStatSet.java
index 3b03ddf..9285c8d 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestStatSet.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestStatSet.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import org.junit.Test;
-import tajo.catalog.proto.CatalogProtos.StatType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StatType;
 
 import static org.junit.Assert.assertEquals;
 
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestStatisticsUtil.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestStatisticsUtil.java
index 9fa2d6e..8019fec 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestStatisticsUtil.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestStatisticsUtil.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import com.google.common.collect.Lists;
 import org.junit.Test;
-import tajo.catalog.proto.CatalogProtos.StatType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StatType;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
diff --git tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestTableStat.java tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestTableStat.java
index 3237d25..6f79c34 100644
--- tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestTableStat.java
+++ tajo-catalog/tajo-catalog-common/src/test/java/tajo/catalog/statistics/TestTableStat.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import org.junit.Test;
-import tajo.catalog.Column;
-import tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.proto.CatalogProtos;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
diff --git tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java
index 5aa1cb1..47ecde9 100644
--- tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java
+++ tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/AlreadyRegisteredURIException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import java.net.URI;
 
diff --git tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/CatalogServer.java tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/CatalogServer.java
index 85600a8..01c2a7a 100644
--- tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/CatalogServer.java
+++ tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/CatalogServer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import com.google.common.base.Preconditions;
 import com.google.protobuf.RpcController;
@@ -25,18 +25,18 @@ import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.yarn.service.AbstractService;
-import tajo.catalog.CatalogProtocol.CatalogProtocolService;
-import tajo.catalog.exception.*;
-import tajo.catalog.proto.CatalogProtos.*;
-import tajo.catalog.store.CatalogStore;
-import tajo.catalog.store.DBStore;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.rpc.ProtoBlockingRpcServer;
-import tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto;
-import tajo.rpc.protocolrecords.PrimitiveProtos.NullProto;
-import tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
-import tajo.util.NetUtils;
+import org.apache.tajo.catalog.CatalogProtocol.CatalogProtocolService;
+import org.apache.tajo.catalog.exception.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.*;
+import org.apache.tajo.catalog.store.CatalogStore;
+import org.apache.tajo.catalog.store.DBStore;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.rpc.ProtoBlockingRpcServer;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
+import org.apache.tajo.util.NetUtils;
 
 import java.io.IOException;
 import java.lang.reflect.Constructor;
@@ -133,7 +133,7 @@ public class CatalogServer extends AbstractService {
       this.rpcServer.start();
 
       this.bindAddress = this.rpcServer.getBindAddress();
-      this.serverName = tajo.util.NetUtils.getIpPortString(bindAddress);
+      this.serverName = org.apache.tajo.util.NetUtils.getIpPortString(bindAddress);
       conf.setVar(ConfVars.CATALOG_ADDRESS, serverName);
     } catch (Exception e) {
       LOG.error("Cannot start RPC Server of CatalogServer", e);
diff --git tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/LocalCatalog.java tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/LocalCatalog.java
index 6856736..3a98ca0 100644
--- tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/LocalCatalog.java
+++ tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/LocalCatalog.java
@@ -19,11 +19,11 @@
 /**
  *
  */
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf;
 
 import java.io.IOException;
 
diff --git tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/MiniCatalogServer.java tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/MiniCatalogServer.java
index 5117fe4..a31f3c0 100644
--- tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/MiniCatalogServer.java
+++ tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/MiniCatalogServer.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
-import tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf;
 
 import java.io.IOException;
 
diff --git tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/CatalogStore.java tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/CatalogStore.java
index c4c7eaa..44f4e7a 100644
--- tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/CatalogStore.java
+++ tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/CatalogStore.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.catalog.store;
+package org.apache.tajo.catalog.store;
 
-import tajo.catalog.FunctionDesc;
-import tajo.catalog.TableDesc;
-import tajo.catalog.proto.CatalogProtos.IndexDescProto;
+import org.apache.tajo.catalog.FunctionDesc;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexDescProto;
 
 import java.io.Closeable;
 import java.io.IOException;
diff --git tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/DBStore.java tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/DBStore.java
index 136872d..0661003 100644
--- tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/DBStore.java
+++ tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/DBStore.java
@@ -19,17 +19,17 @@
 /**
  * 
  */
-package tajo.catalog.store;
+package org.apache.tajo.catalog.store;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.*;
-import tajo.catalog.statistics.TableStat;
-import tajo.conf.TajoConf;
-import tajo.exception.InternalException;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.*;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.exception.InternalException;
 
 import java.io.IOException;
 import java.sql.*;
diff --git tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/MemStore.java tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/MemStore.java
index cfe68a4..4aacefd 100644
--- tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/MemStore.java
+++ tajo-catalog/tajo-catalog-server/src/main/java/tajo/catalog/store/MemStore.java
@@ -19,13 +19,13 @@
 /**
  * 
  */
-package tajo.catalog.store;
+package org.apache.tajo.catalog.store;
 
 import com.google.common.collect.Maps;
 import org.apache.hadoop.conf.Configuration;
-import tajo.catalog.FunctionDesc;
-import tajo.catalog.TableDesc;
-import tajo.catalog.proto.CatalogProtos.IndexDescProto;
+import org.apache.tajo.catalog.FunctionDesc;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexDescProto;
 
 import java.io.IOException;
 import java.util.ArrayList;
diff --git tajo-catalog/tajo-catalog-server/src/main/resources/catalog-default.xml tajo-catalog/tajo-catalog-server/src/main/resources/catalog-default.xml
index 218672f..28158ad 100644
--- tajo-catalog/tajo-catalog-server/src/main/resources/catalog-default.xml
+++ tajo-catalog/tajo-catalog-server/src/main/resources/catalog-default.xml
@@ -21,17 +21,17 @@
 
 <configuration>
   <property>
-    <name>tajo.catalog.master.addr</name>
+    <name>org.apache.tajo.catalog.master.addr</name>
     <value>127.0.0.1:9002</value>
   </property>
 
   <property>
-    <name>tajo.catalog.store.class</name>
-    <value>tajo.catalog.store.DBStore</value>
+    <name>org.apache.tajo.catalog.store.class</name>
+    <value>org.apache.tajo.catalog.store.DBStore</value>
   </property>
 
   <property>
-    <name>tajo.catalog.jdbc.uri</name>
+    <name>org.apache.tajo.catalog.jdbc.uri</name>
     <value>jdbc:derby:/tmp/tcat-${user.name}/db</value>
   </property>
 </configuration>
diff --git tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/TestCatalog.java tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/TestCatalog.java
index 269d8b4..bf20617 100644
--- tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/TestCatalog.java
+++ tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/TestCatalog.java
@@ -16,20 +16,20 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import org.apache.hadoop.fs.Path;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.catalog.function.GeneralFunction;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.catalog.proto.CatalogProtos.IndexMethod;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexMethod;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.IOException;
 
diff --git tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/TestDBStore.java tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/TestDBStore.java
index 033efa3..b9c279b 100644
--- tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/TestDBStore.java
+++ tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/TestDBStore.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.catalog;
+package org.apache.tajo.catalog;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -25,12 +25,12 @@ import org.apache.hadoop.fs.Path;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.statistics.TableStat;
-import tajo.catalog.store.DBStore;
-import tajo.conf.TajoConf;
-import tajo.util.CommonTestingUtil;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.catalog.store.DBStore;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.util.CommonTestingUtil;
 
 import java.io.File;
 
diff --git tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestColumnStat.java tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestColumnStat.java
index 9af4453..b5c77d1 100644
--- tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestColumnStat.java
+++ tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestColumnStat.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import org.junit.Test;
-import tajo.catalog.Column;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.datum.DatumFactory;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
diff --git tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestStatSet.java tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestStatSet.java
index 3b03ddf..9285c8d 100644
--- tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestStatSet.java
+++ tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestStatSet.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import org.junit.Test;
-import tajo.catalog.proto.CatalogProtos.StatType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StatType;
 
 import static org.junit.Assert.assertEquals;
 
diff --git tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestStatisticsUtil.java tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestStatisticsUtil.java
index 9fa2d6e..8019fec 100644
--- tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestStatisticsUtil.java
+++ tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestStatisticsUtil.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import com.google.common.collect.Lists;
 import org.junit.Test;
-import tajo.catalog.proto.CatalogProtos.StatType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StatType;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
diff --git tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestTableStat.java tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestTableStat.java
index 3237d25..6f79c34 100644
--- tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestTableStat.java
+++ tajo-catalog/tajo-catalog-server/src/test/java/tajo/catalog/statistics/TestTableStat.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.catalog.statistics;
+package org.apache.tajo.catalog.statistics;
 
 import org.junit.Test;
-import tajo.catalog.Column;
-import tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.proto.CatalogProtos;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
diff --git tajo-catalog/tajo-catalog-server/src/test/resources/catalog-default.xml tajo-catalog/tajo-catalog-server/src/test/resources/catalog-default.xml
index 2cc8d33..e7fbdec 100644
--- tajo-catalog/tajo-catalog-server/src/test/resources/catalog-default.xml
+++ tajo-catalog/tajo-catalog-server/src/test/resources/catalog-default.xml
@@ -21,17 +21,17 @@
 
 <configuration>
   <property>
-    <name>tajo.catalog.master.addr</name>
+    <name>org.tajo.catalog.master.addr</name>
     <value>127.0.0.1:0</value>
   </property>
 
   <property>
-    <name>tajo.catalog.store.class</name>
-    <value>tajo.catalog.store.MemStore</value>
+    <name>org.tajo.catalog.store.class</name>
+    <value>org.tajo.catalog.store.MemStore</value>
   </property>
 
   <property>
-    <name>tajo.catalog.jdbc.uri</name>
+    <name>org.tajo.catalog.jdbc.uri</name>
     <value>jdbc:derby:target/test-data/tcat/db</value>
   </property>
 </configuration>
diff --git tajo-common/src/main/java/tajo/QueryId.java tajo-common/src/main/java/tajo/QueryId.java
index 64844b4..4394d74 100644
--- tajo-common/src/main/java/tajo/QueryId.java
+++ tajo-common/src/main/java/tajo/QueryId.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import org.apache.hadoop.yarn.api.records.ApplicationId;
 import org.apache.hadoop.yarn.api.records.impl.pb.ApplicationIdPBImpl;
diff --git tajo-common/src/main/java/tajo/QueryIdFactory.java tajo-common/src/main/java/tajo/QueryIdFactory.java
index 1237037..b1a6ab4 100644
--- tajo-common/src/main/java/tajo/QueryIdFactory.java
+++ tajo-common/src/main/java/tajo/QueryIdFactory.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import org.apache.hadoop.yarn.util.BuilderUtils;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.util.concurrent.atomic.AtomicInteger;
 
diff --git tajo-common/src/main/java/tajo/QueryUnitAttemptId.java tajo-common/src/main/java/tajo/QueryUnitAttemptId.java
index 71f5e19..6cea5a9 100644
--- tajo-common/src/main/java/tajo/QueryUnitAttemptId.java
+++ tajo-common/src/main/java/tajo/QueryUnitAttemptId.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import com.google.common.base.Objects;
-import tajo.TajoIdProtos.QueryUnitAttemptIdProto;
-import tajo.TajoIdProtos.QueryUnitAttemptIdProtoOrBuilder;
-import tajo.common.ProtoObject;
+import org.apache.tajo.TajoIdProtos.QueryUnitAttemptIdProto;
+import org.apache.tajo.TajoIdProtos.QueryUnitAttemptIdProtoOrBuilder;
+import org.apache.tajo.common.ProtoObject;
 
 import java.text.NumberFormat;
 
diff --git tajo-common/src/main/java/tajo/QueryUnitId.java tajo-common/src/main/java/tajo/QueryUnitId.java
index 40096f4..21ca5bb 100644
--- tajo-common/src/main/java/tajo/QueryUnitId.java
+++ tajo-common/src/main/java/tajo/QueryUnitId.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import com.google.common.base.Objects;
-import tajo.TajoIdProtos.QueryUnitIdProto;
-import tajo.TajoIdProtos.QueryUnitIdProtoOrBuilder;
-import tajo.common.ProtoObject;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.TajoIdProtos.QueryUnitIdProto;
+import org.apache.tajo.TajoIdProtos.QueryUnitIdProtoOrBuilder;
+import org.apache.tajo.common.ProtoObject;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.text.NumberFormat;
 
diff --git tajo-common/src/main/java/tajo/SubQueryId.java tajo-common/src/main/java/tajo/SubQueryId.java
index 5666059..2a11f38 100644
--- tajo-common/src/main/java/tajo/SubQueryId.java
+++ tajo-common/src/main/java/tajo/SubQueryId.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
-import tajo.TajoIdProtos.SubQueryIdProto;
-import tajo.TajoIdProtos.SubQueryIdProtoOrBuilder;
+import org.apache.tajo.TajoIdProtos.SubQueryIdProto;
+import org.apache.tajo.TajoIdProtos.SubQueryIdProtoOrBuilder;
 
 import java.text.NumberFormat;
 
diff --git tajo-common/src/main/java/tajo/TajoConstants.java tajo-common/src/main/java/tajo/TajoConstants.java
index e3d339e..c7e2b9a 100644
--- tajo-common/src/main/java/tajo/TajoConstants.java
+++ tajo-common/src/main/java/tajo/TajoConstants.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 public class TajoConstants {
 
   public static String WAREHOUSE_DIR = "warehouse";
 
-  public static String USER_QUERYDIR_PREFIX = "tajo";
+  public static String USER_QUERYDIR_PREFIX = "org.apache.tajo";
 
   private TajoConstants() {}
 }
diff --git tajo-common/src/main/java/tajo/common/ProtoObject.java tajo-common/src/main/java/tajo/common/ProtoObject.java
index 7285a54..2c56e01 100644
--- tajo-common/src/main/java/tajo/common/ProtoObject.java
+++ tajo-common/src/main/java/tajo/common/ProtoObject.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.common;
+package org.apache.tajo.common;
 
 import com.google.protobuf.Message;
 
diff --git tajo-common/src/main/java/tajo/common/Sleeper.java tajo-common/src/main/java/tajo/common/Sleeper.java
index b71e764..7f75675 100644
--- tajo-common/src/main/java/tajo/common/Sleeper.java
+++ tajo-common/src/main/java/tajo/common/Sleeper.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.common;
+package org.apache.tajo.common;
 
 public class Sleeper {
   private long before;
diff --git tajo-common/src/main/java/tajo/common/exception/InvalidAddressException.java tajo-common/src/main/java/tajo/common/exception/InvalidAddressException.java
index 3bb7286..a4805cc 100644
--- tajo-common/src/main/java/tajo/common/exception/InvalidAddressException.java
+++ tajo-common/src/main/java/tajo/common/exception/InvalidAddressException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.common.exception;
+package org.apache.tajo.common.exception;
 
 public class InvalidAddressException extends Exception {
 
diff --git tajo-common/src/main/java/tajo/common/exception/NotImplementedException.java tajo-common/src/main/java/tajo/common/exception/NotImplementedException.java
index 3c5f7cd..2690b47 100644
--- tajo-common/src/main/java/tajo/common/exception/NotImplementedException.java
+++ tajo-common/src/main/java/tajo/common/exception/NotImplementedException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.common.exception;
+package org.apache.tajo.common.exception;
 
 public class NotImplementedException extends RuntimeException {
 
diff --git tajo-common/src/main/java/tajo/common/type/IPv4.java tajo-common/src/main/java/tajo/common/type/IPv4.java
index 761cc31..1643674 100644
--- tajo-common/src/main/java/tajo/common/type/IPv4.java
+++ tajo-common/src/main/java/tajo/common/type/IPv4.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.common.type;
+package org.apache.tajo.common.type;
 
 import org.apache.hadoop.io.Writable;
-import tajo.common.exception.InvalidAddressException;
+import org.apache.tajo.common.exception.InvalidAddressException;
 
 import java.io.DataInput;
 import java.io.DataOutput;
diff --git tajo-common/src/main/java/tajo/common/type/TimeRange.java tajo-common/src/main/java/tajo/common/type/TimeRange.java
index ad2e889..4cd122c 100644
--- tajo-common/src/main/java/tajo/common/type/TimeRange.java
+++ tajo-common/src/main/java/tajo/common/type/TimeRange.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.common.type;
+package org.apache.tajo.common.type;
 
 import java.nio.ByteBuffer;
 
diff --git tajo-common/src/main/java/tajo/conf/TajoConf.java tajo-common/src/main/java/tajo/conf/TajoConf.java
index 2fc99f5..3c8e8ac 100644
--- tajo-common/src/main/java/tajo/conf/TajoConf.java
+++ tajo-common/src/main/java/tajo/conf/TajoConf.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.conf;
+package org.apache.tajo.conf;
 
 import com.google.common.collect.Maps;
 import org.apache.hadoop.conf.Configuration;
@@ -32,8 +32,8 @@ public class TajoConf extends YarnConfiguration {
     Configuration.addDefaultResource("catalog-site.xml");
     Configuration.addDefaultResource("storage-default.xml");
     Configuration.addDefaultResource("storage-site.xml");
-    Configuration.addDefaultResource("tajo-default.xml");
-    Configuration.addDefaultResource("tajo-site.xml");
+    Configuration.addDefaultResource("org.apache.tajo-default.xml");
+    Configuration.addDefaultResource("org.apache.tajo-site.xml");
   }
 
   private static final Map<String, ConfVars> vars = Maps.newHashMap();
@@ -57,93 +57,93 @@ public class TajoConf extends YarnConfiguration {
     //////////////////////////////////
 
     // Cluster Mode
-    CLUSTER_DISTRIBUTED("tajo.cluster.distributed", false),
+    CLUSTER_DISTRIBUTED("org.apache.tajo.cluster.distributed", false),
 
     // System Directories
-    ROOT_DIR("tajo.rootdir", "/tajo"),
-    TASK_LOCAL_DIR("tajo.task.localdir", ""),
+    ROOT_DIR("org.apache.tajo.rootdir", "/org.apache.tajo"),
+    TASK_LOCAL_DIR("org.apache.tajo.task.localdir", ""),
 
     // Service Addresses
-    TASKRUNNER_LISTENER_ADDRESS("tajo.master.taskrunnerlistener.addr", "0.0.0.0:0"), // used internally
-    CLIENT_SERVICE_ADDRESS("tajo.master.clientservice.addr", "0.0.0.0:9004"),
-    CLIENT_SERVICE_PORT("tajo.master.clientservice.port", 9004),
+    TASKRUNNER_LISTENER_ADDRESS("org.apache.tajo.master.taskrunnerlistener.addr", "0.0.0.0:0"), // used internally
+    CLIENT_SERVICE_ADDRESS("org.apache.tajo.master.clientservice.addr", "0.0.0.0:9004"),
+    CLIENT_SERVICE_PORT("org.apache.tajo.master.clientservice.port", 9004),
 
     //////////////////////////////////
     // Catalog Configuration
     //////////////////////////////////
-    CATALOG_ADDRESS("tajo.catalog.master.addr", "127.0.0.1:9002"),
+    CATALOG_ADDRESS("org.apache.tajo.catalog.master.addr", "127.0.0.1:9002"),
 
     //////////////////////////////////
     // AM and RM
     //////////////////////////////////
-    AM_TO_RM_HEARTBEAT_INTERVAL_MS("tajo.am.scheduler.heartbeat.interval-ms", 1000),
-    AM_TO_RM_WAIT_INTERVAL_MS("tajo.am.scheduler.connection.wait.interval-ms", 360000L),
+    AM_TO_RM_HEARTBEAT_INTERVAL_MS("org.apache.tajo.am.scheduler.heartbeat.interval-ms", 1000),
+    AM_TO_RM_WAIT_INTERVAL_MS("org.apache.tajo.am.scheduler.connection.wait.interval-ms", 360000L),
     /** Enable blacklisting of nodes in the job.*/
-    AM_QUERY_NODE_BLACKLISTING_ENABLE("tajo.query.node-blacklisting.enable", true),
-    MAX_TASK_FAILURES_PER_TRACKER("tajo.query.maxtaskfailures.per.worker", 3),
-    AM_IGNORE_BLACKLISTING_BLACKLISTED_NODE_PERECENT("tajo.query.node-blacklisting.ignore-threshold-node-percent", 33),
+    AM_QUERY_NODE_BLACKLISTING_ENABLE("org.apache.tajo.query.node-blacklisting.enable", true),
+    MAX_TASK_FAILURES_PER_TRACKER("org.apache.tajo.query.maxtaskfailures.per.worker", 3),
+    AM_IGNORE_BLACKLISTING_BLACKLISTED_NODE_PERECENT("org.apache.tajo.query.node-blacklisting.ignore-threshold-node-percent", 33),
 
 
     //////////////////////////////////
     // Pull Server
     //////////////////////////////////
-    PULLSERVER_PORT("tajo.pullserver.port", 0),
-    SHUFFLE_SSL_ENABLED_KEY("tajo.pullserver.ssl.enabled", false),
+    PULLSERVER_PORT("org.apache.tajo.pullserver.port", 0),
+    SHUFFLE_SSL_ENABLED_KEY("org.apache.tajo.pullserver.ssl.enabled", false),
 
     //////////////////////////////////
     // Storage Configuration
     //////////////////////////////////
     RAWFILE_SYNC_INTERVAL("rawfile.sync.interval", null),
     // for RCFile
-    HIVEUSEEXPLICITRCFILEHEADER("tajo.exec.rcfile.use.explicit.header", true),
+    HIVEUSEEXPLICITRCFILEHEADER("org.apache.tajo.exec.rcfile.use.explicit.header", true),
 
 
     //////////////////////////////////
     // Physical Executors
     //////////////////////////////////
-    EXT_SORT_BUFFER("tajo.extsort.buffer", 400000),
-    BROADCAST_JOIN_THRESHOLD("tajo.join.broadcast.threshold", (long)5 * 1048576),
+    EXT_SORT_BUFFER("org.apache.tajo.extsort.buffer", 400000),
+    BROADCAST_JOIN_THRESHOLD("org.apache.tajo.join.broadcast.threshold", (long)5 * 1048576),
 
     //////////////////////////////////////////
     // Distributed Query Execution Parameters
     //////////////////////////////////////////
-    SORT_BUFFER_SIZE("tajo.sort.mb", 128),
-    JOIN_TASK_VOLUME("tajo.join.task-volume.mb", 128),
-    SORT_TASK_VOLUME("tajo.sort.task-volume.mb", 256),
-    AGGREGATION_TASK_VOLUME("tajo.task-aggregation.volume.mb", 128),
+    SORT_BUFFER_SIZE("org.apache.tajo.sort.mb", 128),
+    JOIN_TASK_VOLUME("org.apache.tajo.join.task-volume.mb", 128),
+    SORT_TASK_VOLUME("org.apache.tajo.sort.task-volume.mb", 256),
+    AGGREGATION_TASK_VOLUME("org.apache.tajo.task-aggregation.volume.mb", 128),
 
-    JOIN_PARTITION_VOLUME("tajo.join.part-volume.mb", 64),
-    SORT_PARTITION_VOLUME("tajo.sort.part-volume.mb", 256),
-    AGGREGATION_PARTITION_VOLUME("tajo.aggregation.part-volume.mb", 256),
+    JOIN_PARTITION_VOLUME("org.apache.tajo.join.part-volume.mb", 64),
+    SORT_PARTITION_VOLUME("org.apache.tajo.sort.part-volume.mb", 256),
+    AGGREGATION_PARTITION_VOLUME("org.apache.tajo.aggregation.part-volume.mb", 256),
 
     //////////////////////////////////
     // The Below is reserved
     //////////////////////////////////
-    WORKING_DIR("tajo.query.workingdir", null),
+    WORKING_DIR("org.apache.tajo.query.workingdir", null),
 
     // Query Master
-    QUERY_AM_VMEM_MB("tajo.query.am.vmem", 4096),
-    QUERY_AM_JAVA_OPT("tajo.query.am.javaopt", "-Xmx1024m"),
+    QUERY_AM_VMEM_MB("org.apache.tajo.query.am.vmem", 4096),
+    QUERY_AM_JAVA_OPT("org.apache.tajo.query.am.javaopt", "-Xmx1024m"),
 
     // QueryC
-    QUERY_NAME("tajo.query.name", "tajo query"),
-    QUEUE_NAME("tajo.query.queue.name", "default"),
-    QUERY_USERNAME("tajo.query.user.name", "anonymous"),
-    QUERY_OUTPUT_DIR_SUCCESSFUL_MARKER("tajo.query.output.successfulmaker", true),
-    QUERY_OUTPUT_DIR("tajo.query.output.dir", ""),
-    QUERY_OUTPUT_TABLE("tajo.query.output.table", ""),
+    QUERY_NAME("org.apache.tajo.query.name", "org.apache.tajo query"),
+    QUEUE_NAME("org.apache.tajo.query.queue.name", "default"),
+    QUERY_USERNAME("org.apache.tajo.query.user.name", "anonymous"),
+    QUERY_OUTPUT_DIR_SUCCESSFUL_MARKER("org.apache.tajo.query.output.successfulmaker", true),
+    QUERY_OUTPUT_DIR("org.apache.tajo.query.output.dir", ""),
+    QUERY_OUTPUT_TABLE("org.apache.tajo.query.output.table", ""),
 
     // Task
-    LOCAL_TMP_DIR("tajo.task.local.tmpdir", null),
+    LOCAL_TMP_DIR("org.apache.tajo.task.local.tmpdir", null),
 
     // TaskAttempt
-    APPLICATION_ATTEMPT_ID("tajo.app.attempt.id", 0),
-    TASK_ATTEMPT_ID("tajo.task.attempt.id", ""),
-    ATTEMPT_ID("tajo.query.attempt.id", ""),
-    FINAL_SUBQUERY_ID("tajo.query.finalsubquery.id", ""),
+    APPLICATION_ATTEMPT_ID("org.apache.tajo.app.attempt.id", 0),
+    TASK_ATTEMPT_ID("org.apache.tajo.task.attempt.id", ""),
+    ATTEMPT_ID("org.apache.tajo.query.attempt.id", ""),
+    FINAL_SUBQUERY_ID("org.apache.tajo.query.finalsubquery.id", ""),
 
     // GeoIP
-    GEOIP_DATA("tajo.geoip.data", "/usr/local/share/GeoIP/GeoIP.dat"),
+    GEOIP_DATA("org.apache.tajo.geoip.data", "/usr/local/share/GeoIP/GeoIP.dat"),
     ;
 
     public final String varname;
diff --git tajo-common/src/main/java/tajo/datum/ArrayDatum.java tajo-common/src/main/java/tajo/datum/ArrayDatum.java
index 12151ed..3b33944 100644
--- tajo-common/src/main/java/tajo/datum/ArrayDatum.java
+++ tajo-common/src/main/java/tajo/datum/ArrayDatum.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.json.GsonCreator;
 
 public class ArrayDatum extends Datum {
   @Expose private Datum [] data;
diff --git tajo-common/src/main/java/tajo/datum/BoolDatum.java tajo-common/src/main/java/tajo/datum/BoolDatum.java
index 0b1982a..1ef6f16 100644
--- tajo-common/src/main/java/tajo/datum/BoolDatum.java
+++ tajo-common/src/main/java/tajo/datum/BoolDatum.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 public class BoolDatum extends Datum {
 	@Expose private boolean val;
diff --git tajo-common/src/main/java/tajo/datum/ByteDatum.java tajo-common/src/main/java/tajo/datum/ByteDatum.java
index 3bce3ff..c7723ba 100644
--- tajo-common/src/main/java/tajo/datum/ByteDatum.java
+++ tajo-common/src/main/java/tajo/datum/ByteDatum.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 public class ByteDatum extends Datum {
   private static final int size = 1;
diff --git tajo-common/src/main/java/tajo/datum/BytesDatum.java tajo-common/src/main/java/tajo/datum/BytesDatum.java
index 1111ead..cbe64a1 100644
--- tajo-common/src/main/java/tajo/datum/BytesDatum.java
+++ tajo-common/src/main/java/tajo/datum/BytesDatum.java
@@ -19,11 +19,11 @@
 /**
  * 
  */
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 import java.nio.ByteBuffer;
 import java.nio.charset.Charset;
diff --git tajo-common/src/main/java/tajo/datum/CharDatum.java tajo-common/src/main/java/tajo/datum/CharDatum.java
index ff82493..56b35b3 100644
--- tajo-common/src/main/java/tajo/datum/CharDatum.java
+++ tajo-common/src/main/java/tajo/datum/CharDatum.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 public class CharDatum extends Datum {
   private static final int size = 1;
diff --git tajo-common/src/main/java/tajo/datum/Datum.java tajo-common/src/main/java/tajo/datum/Datum.java
index c9e0fb9..c913db4 100644
--- tajo-common/src/main/java/tajo/datum/Datum.java
+++ tajo-common/src/main/java/tajo/datum/Datum.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidCastException;
-import tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.exception.InvalidCastException;
+import org.apache.tajo.datum.exception.InvalidOperationException;
 
 public abstract class Datum implements Comparable<Datum> {
 	@Expose
diff --git tajo-common/src/main/java/tajo/datum/DatumFactory.java tajo-common/src/main/java/tajo/datum/DatumFactory.java
index 7f19262..404c72e 100644
--- tajo-common/src/main/java/tajo/datum/DatumFactory.java
+++ tajo-common/src/main/java/tajo/datum/DatumFactory.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 public class DatumFactory {
   public static NullDatum createNullDatum() {
diff --git tajo-common/src/main/java/tajo/datum/DatumType.java tajo-common/src/main/java/tajo/datum/DatumType.java
index 5a26cb8..1e00163 100644
--- tajo-common/src/main/java/tajo/datum/DatumType.java
+++ tajo-common/src/main/java/tajo/datum/DatumType.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.datum;
+package org.apache.tajo.datum;
 
 public enum DatumType {
   NULL,
diff --git tajo-common/src/main/java/tajo/datum/DoubleDatum.java tajo-common/src/main/java/tajo/datum/DoubleDatum.java
index 0b48fa4..59d7b50 100644
--- tajo-common/src/main/java/tajo/datum/DoubleDatum.java
+++ tajo-common/src/main/java/tajo/datum/DoubleDatum.java
@@ -19,11 +19,11 @@
 /**
  * 
  */
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 import java.nio.ByteBuffer;
 
diff --git tajo-common/src/main/java/tajo/datum/FloatDatum.java tajo-common/src/main/java/tajo/datum/FloatDatum.java
index 1a6da49..c13f3af 100644
--- tajo-common/src/main/java/tajo/datum/FloatDatum.java
+++ tajo-common/src/main/java/tajo/datum/FloatDatum.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidCastException;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidCastException;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 import java.nio.ByteBuffer;
 
diff --git tajo-common/src/main/java/tajo/datum/IPv4Datum.java tajo-common/src/main/java/tajo/datum/IPv4Datum.java
index dd3e95b..10fd17c 100644
--- tajo-common/src/main/java/tajo/datum/IPv4Datum.java
+++ tajo-common/src/main/java/tajo/datum/IPv4Datum.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.common.base.Preconditions;
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 public class IPv4Datum extends Datum {
   private static final int size = 4;
diff --git tajo-common/src/main/java/tajo/datum/IntDatum.java tajo-common/src/main/java/tajo/datum/IntDatum.java
index 281aba3..477a241 100644
--- tajo-common/src/main/java/tajo/datum/IntDatum.java
+++ tajo-common/src/main/java/tajo/datum/IntDatum.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidCastException;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidCastException;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 import java.nio.ByteBuffer;
 
diff --git tajo-common/src/main/java/tajo/datum/LongDatum.java tajo-common/src/main/java/tajo/datum/LongDatum.java
index ae53224..d4a5a39 100644
--- tajo-common/src/main/java/tajo/datum/LongDatum.java
+++ tajo-common/src/main/java/tajo/datum/LongDatum.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidCastException;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidCastException;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 import java.nio.ByteBuffer;
 
diff --git tajo-common/src/main/java/tajo/datum/NullDatum.java tajo-common/src/main/java/tajo/datum/NullDatum.java
index 2460a89..004c741 100644
--- tajo-common/src/main/java/tajo/datum/NullDatum.java
+++ tajo-common/src/main/java/tajo/datum/NullDatum.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
-import tajo.util.Bytes;
+import org.apache.tajo.util.Bytes;
 
 public class NullDatum extends Datum {
   private static final NullDatum instance;
diff --git tajo-common/src/main/java/tajo/datum/NumericDatum.java tajo-common/src/main/java/tajo/datum/NumericDatum.java
index 3a7cb29..350f67d 100644
--- tajo-common/src/main/java/tajo/datum/NumericDatum.java
+++ tajo-common/src/main/java/tajo/datum/NumericDatum.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 
 public abstract class NumericDatum extends Datum {
diff --git tajo-common/src/main/java/tajo/datum/ShortDatum.java tajo-common/src/main/java/tajo/datum/ShortDatum.java
index ff2f79c..eb9c393 100644
--- tajo-common/src/main/java/tajo/datum/ShortDatum.java
+++ tajo-common/src/main/java/tajo/datum/ShortDatum.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 import java.nio.ByteBuffer;
 
diff --git tajo-common/src/main/java/tajo/datum/StringDatum.java tajo-common/src/main/java/tajo/datum/StringDatum.java
index 8f26c54..c18a397 100644
--- tajo-common/src/main/java/tajo/datum/StringDatum.java
+++ tajo-common/src/main/java/tajo/datum/StringDatum.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.exception.InvalidCastException;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidCastException;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 
 public class StringDatum extends Datum { 
diff --git tajo-common/src/main/java/tajo/datum/StringDatum2.java tajo-common/src/main/java/tajo/datum/StringDatum2.java
index 8dd7c14..d01f5ab 100644
--- tajo-common/src/main/java/tajo/datum/StringDatum2.java
+++ tajo-common/src/main/java/tajo/datum/StringDatum2.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import com.google.gson.annotations.Expose;
 import org.apache.hadoop.io.WritableComparator;
-import tajo.datum.exception.InvalidCastException;
-import tajo.datum.exception.InvalidOperationException;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.exception.InvalidCastException;
+import org.apache.tajo.datum.exception.InvalidOperationException;
+import org.apache.tajo.datum.json.GsonCreator;
 
 import java.util.Arrays;
 
diff --git tajo-common/src/main/java/tajo/datum/exception/InvalidCastException.java tajo-common/src/main/java/tajo/datum/exception/InvalidCastException.java
index 0fa1f8b..445c9e2 100644
--- tajo-common/src/main/java/tajo/datum/exception/InvalidCastException.java
+++ tajo-common/src/main/java/tajo/datum/exception/InvalidCastException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum.exception;
+package org.apache.tajo.datum.exception;
 
 public class InvalidCastException extends RuntimeException {
 	private static final long serialVersionUID = -7689027447969916148L;
diff --git tajo-common/src/main/java/tajo/datum/exception/InvalidOperationException.java tajo-common/src/main/java/tajo/datum/exception/InvalidOperationException.java
index 5eaa8fe..8a2d900 100644
--- tajo-common/src/main/java/tajo/datum/exception/InvalidOperationException.java
+++ tajo-common/src/main/java/tajo/datum/exception/InvalidOperationException.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.datum.exception;
+package org.apache.tajo.datum.exception;
 
-import tajo.datum.DatumType;
+import org.apache.tajo.datum.DatumType;
 
 public class InvalidOperationException extends RuntimeException {
 	private static final long serialVersionUID = -7689027447969916148L;
diff --git tajo-common/src/main/java/tajo/datum/json/DatumAdapter.java tajo-common/src/main/java/tajo/datum/json/DatumAdapter.java
index a4328d3..dfe0e21 100644
--- tajo-common/src/main/java/tajo/datum/json/DatumAdapter.java
+++ tajo-common/src/main/java/tajo/datum/json/DatumAdapter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.datum.json;
+package org.apache.tajo.datum.json;
 
 import com.google.gson.*;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.lang.reflect.Type;
 
diff --git tajo-common/src/main/java/tajo/datum/json/GsonCreator.java tajo-common/src/main/java/tajo/datum/json/GsonCreator.java
index b973e3d..d1a9bf2 100644
--- tajo-common/src/main/java/tajo/datum/json/GsonCreator.java
+++ tajo-common/src/main/java/tajo/datum/json/GsonCreator.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.datum.json;
+package org.apache.tajo.datum.json;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 public class GsonCreator {
 
diff --git tajo-common/src/main/java/tajo/exception/InternalException.java tajo-common/src/main/java/tajo/exception/InternalException.java
index f119773..af4ee5c 100644
--- tajo-common/src/main/java/tajo/exception/InternalException.java
+++ tajo-common/src/main/java/tajo/exception/InternalException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.exception;
+package org.apache.tajo.exception;
 
 import java.io.IOException;
 
diff --git tajo-common/src/main/java/tajo/exception/UnimplementedException.java tajo-common/src/main/java/tajo/exception/UnimplementedException.java
index e0c3f52..3e4555d 100644
--- tajo-common/src/main/java/tajo/exception/UnimplementedException.java
+++ tajo-common/src/main/java/tajo/exception/UnimplementedException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.exception;
+package org.apache.tajo.exception;
 
 public class UnimplementedException extends RuntimeException {
   private static final long serialVersionUID = -5467580471721530536L;
diff --git tajo-common/src/main/java/tajo/exception/UnsupportedException.java tajo-common/src/main/java/tajo/exception/UnsupportedException.java
index 1d0de75..1e19622 100644
--- tajo-common/src/main/java/tajo/exception/UnsupportedException.java
+++ tajo-common/src/main/java/tajo/exception/UnsupportedException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.exception;
+package org.apache.tajo.exception;
 
 public class UnsupportedException extends RuntimeException {
   private static final long serialVersionUID = 6702291354858193578L;
diff --git tajo-common/src/main/java/tajo/gson/ClassNameDeserializer.java tajo-common/src/main/java/tajo/gson/ClassNameDeserializer.java
index edf8f48..43a378e 100644
--- tajo-common/src/main/java/tajo/gson/ClassNameDeserializer.java
+++ tajo-common/src/main/java/tajo/gson/ClassNameDeserializer.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.gson;
+package org.apache.tajo.gson;
 
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
diff --git tajo-common/src/main/java/tajo/gson/ClassNameSerializer.java tajo-common/src/main/java/tajo/gson/ClassNameSerializer.java
index 672d064..7cc9245 100644
--- tajo-common/src/main/java/tajo/gson/ClassNameSerializer.java
+++ tajo-common/src/main/java/tajo/gson/ClassNameSerializer.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.gson;
+package org.apache.tajo.gson;
 
 import com.google.gson.JsonElement;
 import com.google.gson.JsonPrimitive;
diff --git tajo-common/src/main/java/tajo/gson/DatumTypeAdapter.java tajo-common/src/main/java/tajo/gson/DatumTypeAdapter.java
index 96e5064..b457fc1 100644
--- tajo-common/src/main/java/tajo/gson/DatumTypeAdapter.java
+++ tajo-common/src/main/java/tajo/gson/DatumTypeAdapter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.gson;
+package org.apache.tajo.gson;
 
 import com.google.gson.*;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.lang.reflect.Type;
 
diff --git tajo-common/src/main/java/tajo/gson/PathDeserializer.java tajo-common/src/main/java/tajo/gson/PathDeserializer.java
index b03d6a8..ae3eb81 100644
--- tajo-common/src/main/java/tajo/gson/PathDeserializer.java
+++ tajo-common/src/main/java/tajo/gson/PathDeserializer.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.gson;
+package org.apache.tajo.gson;
 
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
diff --git tajo-common/src/main/java/tajo/gson/PathSerializer.java tajo-common/src/main/java/tajo/gson/PathSerializer.java
index b699cd8..6564d7d 100644
--- tajo-common/src/main/java/tajo/gson/PathSerializer.java
+++ tajo-common/src/main/java/tajo/gson/PathSerializer.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.gson;
+package org.apache.tajo.gson;
 
 import com.google.gson.JsonElement;
 import com.google.gson.JsonPrimitive;
diff --git tajo-common/src/main/java/tajo/storage/Tuple.java tajo-common/src/main/java/tajo/storage/Tuple.java
index d13d388..47c2002 100644
--- tajo-common/src/main/java/tajo/storage/Tuple.java
+++ tajo-common/src/main/java/tajo/storage/Tuple.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
-import tajo.datum.*;
+import org.apache.tajo.datum.*;
 
 import java.net.InetAddress;
 
-// TODO - to be unified in tajo-core-storage
+// TODO - to be unified in org.apache.tajo-core-storage
 public interface Tuple {
   
 	public int size();
diff --git tajo-common/src/main/java/tajo/unit/StorageUnit.java tajo-common/src/main/java/tajo/unit/StorageUnit.java
index d44bec2..8cde659 100644
--- tajo-common/src/main/java/tajo/unit/StorageUnit.java
+++ tajo-common/src/main/java/tajo/unit/StorageUnit.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.unit;
+package org.apache.tajo.unit;
 
 public class StorageUnit {
 
diff --git tajo-common/src/main/java/tajo/unit/TimeUnit.java tajo-common/src/main/java/tajo/unit/TimeUnit.java
index 7f2101b..8062f2d 100644
--- tajo-common/src/main/java/tajo/unit/TimeUnit.java
+++ tajo-common/src/main/java/tajo/unit/TimeUnit.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.unit;
+package org.apache.tajo.unit;
 
 public class TimeUnit {
 
diff --git tajo-common/src/main/java/tajo/util/BitArray.java tajo-common/src/main/java/tajo/util/BitArray.java
index 20b9e55..0c3bd1b 100644
--- tajo-common/src/main/java/tajo/util/BitArray.java
+++ tajo-common/src/main/java/tajo/util/BitArray.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import java.nio.ByteBuffer;
 
diff --git tajo-common/src/main/java/tajo/util/Bytes.java tajo-common/src/main/java/tajo/util/Bytes.java
index e21cf31..64ba1b8 100644
--- tajo-common/src/main/java/tajo/util/Bytes.java
+++ tajo-common/src/main/java/tajo/util/Bytes.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import com.google.common.annotations.VisibleForTesting;
 import org.apache.commons.logging.Log;
diff --git tajo-common/src/main/java/tajo/util/CommonTestingUtil.java tajo-common/src/main/java/tajo/util/CommonTestingUtil.java
index ab573a5..7ff1c1f 100644
--- tajo-common/src/main/java/tajo/util/CommonTestingUtil.java
+++ tajo-common/src/main/java/tajo/util/CommonTestingUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
diff --git tajo-common/src/main/java/tajo/util/FileUtil.java tajo-common/src/main/java/tajo/util/FileUtil.java
index 199c266..194be55 100644
--- tajo-common/src/main/java/tajo/util/FileUtil.java
+++ tajo-common/src/main/java/tajo/util/FileUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import com.google.protobuf.Message;
 import org.apache.hadoop.fs.FSDataInputStream;
diff --git tajo-common/src/main/java/tajo/util/JarUtil.java tajo-common/src/main/java/tajo/util/JarUtil.java
index 7ae7b2d..6b4144c 100644
--- tajo-common/src/main/java/tajo/util/JarUtil.java
+++ tajo-common/src/main/java/tajo/util/JarUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import java.io.IOException;
 import java.net.URL;
diff --git tajo-common/src/main/java/tajo/util/NumberUtil.java tajo-common/src/main/java/tajo/util/NumberUtil.java
index 600d8bc..25d5246 100644
--- tajo-common/src/main/java/tajo/util/NumberUtil.java
+++ tajo-common/src/main/java/tajo/util/NumberUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 public class NumberUtil {
 
diff --git tajo-common/src/main/java/tajo/util/ReflectionUtil.java tajo-common/src/main/java/tajo/util/ReflectionUtil.java
index 563035b..410815f 100644
--- tajo-common/src/main/java/tajo/util/ReflectionUtil.java
+++ tajo-common/src/main/java/tajo/util/ReflectionUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import java.lang.reflect.Constructor;
 import java.util.Map;
diff --git tajo-common/src/main/java/tajo/util/TUtil.java tajo-common/src/main/java/tajo/util/TUtil.java
index c028244..33021fe 100644
--- tajo-common/src/main/java/tajo/util/TUtil.java
+++ tajo-common/src/main/java/tajo/util/TUtil.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
-import tajo.QueryIdFactory;
-import tajo.QueryUnitAttemptId;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.QueryUnitAttemptId;
 
 import java.util.*;
 
diff --git tajo-common/src/main/java/tajo/util/TajoIdUtils.java tajo-common/src/main/java/tajo/util/TajoIdUtils.java
index 5fd5a18..2164d27 100644
--- tajo-common/src/main/java/tajo/util/TajoIdUtils.java
+++ tajo-common/src/main/java/tajo/util/TajoIdUtils.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
 import org.apache.hadoop.yarn.api.records.ApplicationId;
 import org.apache.hadoop.yarn.util.BuilderUtils;
-import tajo.QueryId;
-import tajo.SubQueryId;
-import tajo.TajoIdProtos.SubQueryIdProto;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.TajoIdProtos.SubQueryIdProto;
 
 public class TajoIdUtils {
   /** It is mainly for DDL statements which don's have any query id. */
diff --git tajo-common/src/main/proto/TajoIdProtos.proto tajo-common/src/main/proto/TajoIdProtos.proto
index abd47c0..04c67f2 100644
--- tajo-common/src/main/proto/TajoIdProtos.proto
+++ tajo-common/src/main/proto/TajoIdProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo";
+option java_package = "org.apache.tajo";
 option java_outer_classname = "TajoIdProtos";
 option java_generic_services = false;
 option java_generate_equals_and_hash = true;
diff --git tajo-common/src/main/proto/TestProtos.proto tajo-common/src/main/proto/TestProtos.proto
index 868b6f1..85957b6 100644
--- tajo-common/src/main/proto/TestProtos.proto
+++ tajo-common/src/main/proto/TestProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.util";
+option java_package = "org.apache.tajo.util";
 option java_outer_classname = "TestProtos";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-common/src/test/java/tajo/common/type/TestIPv4.java tajo-common/src/test/java/tajo/common/type/TestIPv4.java
index 8d4bf68..2f11f8a 100644
--- tajo-common/src/test/java/tajo/common/type/TestIPv4.java
+++ tajo-common/src/test/java/tajo/common/type/TestIPv4.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.common.type;
+package org.apache.tajo.common.type;
 
 import org.junit.Test;
-import tajo.common.exception.InvalidAddressException;
+import org.apache.tajo.common.exception.InvalidAddressException;
 
 import static org.junit.Assert.*;
 
diff --git tajo-common/src/test/java/tajo/common/type/TestTimeRange.java tajo-common/src/test/java/tajo/common/type/TestTimeRange.java
index be74f4a..181e313 100644
--- tajo-common/src/test/java/tajo/common/type/TestTimeRange.java
+++ tajo-common/src/test/java/tajo/common/type/TestTimeRange.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.common.type;
+package org.apache.tajo.common.type;
 
 import org.junit.Before;
 import org.junit.Test;
diff --git tajo-common/src/test/java/tajo/datum/TestBoolDatum.java tajo-common/src/test/java/tajo/datum/TestBoolDatum.java
index f73fb98..ccbad15 100644
--- tajo-common/src/test/java/tajo/datum/TestBoolDatum.java
+++ tajo-common/src/test/java/tajo/datum/TestBoolDatum.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/datum/TestByteDatum.java tajo-common/src/test/java/tajo/datum/TestByteDatum.java
index 9c8dd6a..b9d23ed 100644
--- tajo-common/src/test/java/tajo/datum/TestByteDatum.java
+++ tajo-common/src/test/java/tajo/datum/TestByteDatum.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/datum/TestBytesDatum.java tajo-common/src/test/java/tajo/datum/TestBytesDatum.java
index 962a793..5c9edce 100644
--- tajo-common/src/test/java/tajo/datum/TestBytesDatum.java
+++ tajo-common/src/test/java/tajo/datum/TestBytesDatum.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.json.GsonCreator;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
diff --git tajo-common/src/test/java/tajo/datum/TestCharDatum.java tajo-common/src/test/java/tajo/datum/TestCharDatum.java
index c9272dd..e0b487d 100644
--- tajo-common/src/test/java/tajo/datum/TestCharDatum.java
+++ tajo-common/src/test/java/tajo/datum/TestCharDatum.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/datum/TestDatum.java tajo-common/src/test/java/tajo/datum/TestDatum.java
index 361ab9d..2cb6586 100644
--- tajo-common/src/test/java/tajo/datum/TestDatum.java
+++ tajo-common/src/test/java/tajo/datum/TestDatum.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/datum/TestDatumFactory.java tajo-common/src/test/java/tajo/datum/TestDatumFactory.java
index 4370bf8..0aa7318 100644
--- tajo-common/src/test/java/tajo/datum/TestDatumFactory.java
+++ tajo-common/src/test/java/tajo/datum/TestDatumFactory.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/datum/TestDoubleDatum.java tajo-common/src/test/java/tajo/datum/TestDoubleDatum.java
index 178ce01..ac9c254 100644
--- tajo-common/src/test/java/tajo/datum/TestDoubleDatum.java
+++ tajo-common/src/test/java/tajo/datum/TestDoubleDatum.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/datum/TestFloatDatum.java tajo-common/src/test/java/tajo/datum/TestFloatDatum.java
index bfc45bc..86895f7 100644
--- tajo-common/src/test/java/tajo/datum/TestFloatDatum.java
+++ tajo-common/src/test/java/tajo/datum/TestFloatDatum.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/datum/TestIPv4Datum.java tajo-common/src/test/java/tajo/datum/TestIPv4Datum.java
index e60a33b..43c7557 100644
--- tajo-common/src/test/java/tajo/datum/TestIPv4Datum.java
+++ tajo-common/src/test/java/tajo/datum/TestIPv4Datum.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Before;
 import org.junit.Test;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.json.GsonCreator;
 
 import java.util.Arrays;
 
diff --git tajo-common/src/test/java/tajo/datum/TestIntDatum.java tajo-common/src/test/java/tajo/datum/TestIntDatum.java
index faca9d8..c5f5edc 100644
--- tajo-common/src/test/java/tajo/datum/TestIntDatum.java
+++ tajo-common/src/test/java/tajo/datum/TestIntDatum.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/datum/TestLongDatum.java tajo-common/src/test/java/tajo/datum/TestLongDatum.java
index 00170f7..01aae35 100644
--- tajo-common/src/test/java/tajo/datum/TestLongDatum.java
+++ tajo-common/src/test/java/tajo/datum/TestLongDatum.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/datum/TestShortDatum.java tajo-common/src/test/java/tajo/datum/TestShortDatum.java
index 83da6a5..982bbc6 100644
--- tajo-common/src/test/java/tajo/datum/TestShortDatum.java
+++ tajo-common/src/test/java/tajo/datum/TestShortDatum.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/datum/TestStringDatum.java tajo-common/src/test/java/tajo/datum/TestStringDatum.java
index a5f975b..f423240 100644
--- tajo-common/src/test/java/tajo/datum/TestStringDatum.java
+++ tajo-common/src/test/java/tajo/datum/TestStringDatum.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.datum;
+package org.apache.tajo.datum;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/util/TestBitArrayTest.java tajo-common/src/test/java/tajo/util/TestBitArrayTest.java
index 3839409..9c82c8e 100644
--- tajo-common/src/test/java/tajo/util/TestBitArrayTest.java
+++ tajo-common/src/test/java/tajo/util/TestBitArrayTest.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import org.junit.Test;
 
diff --git tajo-common/src/test/java/tajo/util/TestFileUtils.java tajo-common/src/test/java/tajo/util/TestFileUtils.java
index d0e84b7..1e7d3c3 100644
--- tajo-common/src/test/java/tajo/util/TestFileUtils.java
+++ tajo-common/src/test/java/tajo/util/TestFileUtils.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import com.google.protobuf.Message;
 import org.apache.hadoop.conf.Configuration;
@@ -25,7 +25,7 @@ import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.util.TestProtos.TestMessageProto;
+import org.apache.tajo.util.TestProtos.TestMessageProto;
 
 import java.io.File;
 import java.io.FileInputStream;
diff --git tajo-core/tajo-core-backend/src/main/antlr3/tajo/engine/parser/NQL.g tajo-core/tajo-core-backend/src/main/antlr3/tajo/engine/parser/NQL.g
index 725941c..483588e 100644
--- tajo-core/tajo-core-backend/src/main/antlr3/tajo/engine/parser/NQL.g
+++ tajo-core/tajo-core-backend/src/main/antlr3/tajo/engine/parser/NQL.g
@@ -61,17 +61,17 @@ tokens {
 }
 
 @header {
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 import java.util.List;
 import java.util.ArrayList;
-import tajo.engine.query.exception.TQLParseError;
+import org.apache.tajo.engine.query.exception.TQLParseError;
 }
 
 @lexer::header {
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
-import tajo.engine.query.exception.TQLParseError;
+import org.apache.tajo.engine.query.exception.TQLParseError;
 }
 
 @lexer::members {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/QueryConf.java tajo-core/tajo-core-backend/src/main/java/tajo/QueryConf.java
index a1e5179..e88217a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/QueryConf.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/QueryConf.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
-import tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf;
 
 public class QueryConf extends TajoConf {
   public static String FILENAME = "queryconf.xml";
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/TaskAttemptContext.java tajo-core/tajo-core-backend/src/main/java/tajo/TaskAttemptContext.java
index 1e87341..8f08d86 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/TaskAttemptContext.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/TaskAttemptContext.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import com.google.common.base.Objects;
 import com.google.common.collect.Maps;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.fs.Path;
-import tajo.TajoProtos.TaskAttemptState;
-import tajo.catalog.statistics.TableStat;
-import tajo.conf.TajoConf;
-import tajo.storage.Fragment;
+import org.apache.tajo.TajoProtos.TaskAttemptState;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.storage.Fragment;
 
 import java.io.File;
 import java.util.*;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/BenchmarkSet.java tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/BenchmarkSet.java
index 9deea32..42717d0 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/BenchmarkSet.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/BenchmarkSet.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.benchmark;
+package org.apache.tajo.benchmark;
 
 import com.google.protobuf.ServiceException;
 import org.apache.hadoop.net.NetUtils;
-import tajo.catalog.CatalogConstants;
-import tajo.catalog.Schema;
-import tajo.catalog.store.MemStore;
-import tajo.client.TajoClient;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.util.FileUtil;
+import org.apache.tajo.catalog.CatalogConstants;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.store.MemStore;
+import org.apache.tajo.client.TajoClient;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/Driver.java tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/Driver.java
index 69b9a18..99b9a99 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/Driver.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/Driver.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.benchmark;
+package org.apache.tajo.benchmark;
 
-import tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf;
 
 public class Driver {
   private static void printUsage() {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/SimpleQuery.java tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/SimpleQuery.java
index 9feae05..fb8fe5f 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/SimpleQuery.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/SimpleQuery.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.benchmark;
+package org.apache.tajo.benchmark;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/TPCH.java tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/TPCH.java
index c4ce6d4..f4c8730 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/TPCH.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/benchmark/TPCH.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.benchmark;
+package org.apache.tajo.benchmark;
 
 import com.google.protobuf.ServiceException;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Schema;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.storage.CSVFile;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.storage.CSVFile;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/cli/TajoCli.java tajo-core/tajo-core-backend/src/main/java/tajo/cli/TajoCli.java
index 0e95dfd..bfe282b 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/cli/TajoCli.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/cli/TajoCli.java
@@ -16,23 +16,23 @@
  * limitations under the License.
  */
 
-package tajo.cli;
+package org.apache.tajo.cli;
 
 import com.google.protobuf.ServiceException;
 import jline.console.ConsoleReader;
 import org.apache.commons.cli.*;
-import tajo.QueryId;
-import tajo.TajoProtos.QueryState;
-import tajo.catalog.Column;
-import tajo.catalog.TableDesc;
-import tajo.client.ClientProtocol;
-import tajo.client.QueryStatus;
-import tajo.client.TajoClient;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.master.cluster.ServerName;
-import tajo.util.FileUtil;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.TajoProtos.QueryState;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.client.ClientProtocol;
+import org.apache.tajo.client.QueryStatus;
+import org.apache.tajo.client.TajoClient;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.master.cluster.ServerName;
+import org.apache.tajo.util.FileUtil;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.io.InputStream;
 import java.io.OutputStream;
@@ -99,15 +99,15 @@ public class TajoCli {
       }
     }
 
-    // if the remote tajo cluster is set, entryAddr is not null.
+    // if the remote org.apache.tajo cluster is set, entryAddr is not null.
     if (entryAddr != null) {
       conf.setBoolVar(ConfVars.CLUSTER_DISTRIBUTED, true);
     }
 
     if (entryAddr != null) {
-      sout.println("Trying to connect the tajo master (" + entryAddr + ")");
+      sout.println("Trying to connect the org.apache.tajo master (" + entryAddr + ")");
     } else {
-      sout.println("Executing the tajo cluster in local mode");
+      sout.println("Executing the org.apache.tajo cluster in local mode");
     }
     client = new TajoClient(conf);
   }
@@ -118,7 +118,7 @@ public class TajoCli {
     String cmd [];
     boolean quit = false;
     while(!quit) {
-      line = reader.readLine("tajo> ");
+      line = reader.readLine("org.apache.tajo> ");
       if (line == null) { // if EOF, quit
         quit = true;
         continue;
@@ -296,7 +296,7 @@ public class TajoCli {
       System.out.println("usage: detach tablename");
     } else {
       client.detachTable(cmd[1]);
-      sout.println("detached " + cmd[1] + " from tajo");
+      sout.println("detached " + cmd[1] + " from org.apache.tajo");
     }
   }
 
@@ -323,7 +323,7 @@ public class TajoCli {
 
   private void printUsage() {
     HelpFormatter formatter = new HelpFormatter();
-    formatter.printHelp( "tajo shell [options]", options );
+    formatter.printHelp( "org.apache.tajo shell [options]", options );
   }
 
   public static void main(String [] args) throws Exception {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/client/QueryStatus.java tajo-core/tajo-core-backend/src/main/java/tajo/client/QueryStatus.java
index 27895c5..cdde9de 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/client/QueryStatus.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/client/QueryStatus.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.client;
+package org.apache.tajo.client;
 
-import tajo.QueryId;
-import tajo.TajoProtos.QueryState;
-import tajo.client.ClientProtocol.GetQueryStatusResponse;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.TajoProtos.QueryState;
+import org.apache.tajo.client.ClientProtocol.GetQueryStatusResponse;
 
 public class QueryStatus {
   private QueryId queryId;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/client/ResultSetUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/client/ResultSetUtil.java
index d79181f..7644e97 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/client/ResultSetUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/client/ResultSetUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.client;
+package org.apache.tajo.client;
 
 import java.sql.ResultSet;
 import java.sql.ResultSetMetaData;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/client/TajoClient.java tajo-core/tajo-core-backend/src/main/java/tajo/client/TajoClient.java
index 32eed96..06e1832 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/client/TajoClient.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/client/TajoClient.java
@@ -16,25 +16,25 @@
  * limitations under the License.
  */
 
-package tajo.client;
+package org.apache.tajo.client;
 
 import com.google.protobuf.ServiceException;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.net.NetUtils;
-import tajo.QueryId;
-import tajo.TajoProtos.QueryState;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableDesc;
-import tajo.catalog.TableMeta;
-import tajo.client.ClientProtocol.*;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.engine.query.ResultSetImpl;
-import tajo.rpc.ProtoBlockingRpcClient;
-import tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.TajoProtos.QueryState;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.client.ClientProtocol.*;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.engine.query.ResultSetImpl;
+import org.apache.tajo.rpc.ProtoBlockingRpcClient;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
@@ -73,8 +73,8 @@ public class TajoClient {
       throw new IOException(e);
     }
 
-    LOG.info("connected to tajo cluster (" +
-        tajo.util.NetUtils.getIpPortString(addr) + ")");
+    LOG.info("connected to org.apache.tajo cluster (" +
+        org.apache.tajo.util.NetUtils.getIpPortString(addr) + ")");
   }
 
   public void close() {
@@ -88,8 +88,8 @@ public class TajoClient {
   /**
    * It submits a query statement and get a response immediately.
    * The response only contains a query id, and submission status.
-   * In order to get the result, you should use {@link #getQueryResult(tajo.QueryId)}
-   * or {@link #getQueryResultAndWait(tajo.QueryId)}.
+   * In order to get the result, you should use {@link #getQueryResult(org.apache.tajo.QueryId)}
+   * or {@link #getQueryResultAndWait(org.apache.tajo.QueryId)}.
    */
   public SubmitQueryRespose executeQuery(String tql) throws ServiceException {
     QueryRequest.Builder builder = QueryRequest.newBuilder();
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AggFuncCallEval.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AggFuncCallEval.java
index 55237e7..dd8e660 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AggFuncCallEval.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AggFuncCallEval.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.gson.annotations.Expose;
-import tajo.catalog.FunctionDesc;
-import tajo.catalog.Schema;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.engine.json.GsonCreator;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.catalog.FunctionDesc;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 public class AggFuncCallEval extends FuncEval implements Cloneable {
   @Expose protected AggFunction instance;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AlgebraicException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AlgebraicException.java
index d97afe7..9dba6df 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AlgebraicException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AlgebraicException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 public class AlgebraicException extends RuntimeException {
   private static final long serialVersionUID = -1813125460274622006L;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AlgebraicUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AlgebraicUtil.java
index b886e2a..46a3cdb 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AlgebraicUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/AlgebraicUtil.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
-import tajo.catalog.Column;
+import org.apache.tajo.catalog.Column;
 
 import java.util.Map;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/BinaryEval.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/BinaryEval.java
index 7468eec..d906014 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/BinaryEval.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/BinaryEval.java
@@ -16,19 +16,19 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.common.base.Objects;
 import com.google.common.base.Preconditions;
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.utils.SchemaUtil;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.utils.SchemaUtil;
+import org.apache.tajo.storage.Tuple;
 
 public class BinaryEval extends EvalNode implements Cloneable {
 	@Expose private DataType [] returnType = null;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/CaseWhenEval.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/CaseWhenEval.java
index 07fec9c..515987d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/CaseWhenEval.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/CaseWhenEval.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.common.collect.Lists;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.utils.SchemaUtil;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.utils.SchemaUtil;
+import org.apache.tajo.storage.Tuple;
 
 import java.util.List;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/ConstEval.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/ConstEval.java
index 3e61632..b181d13 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/ConstEval.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/ConstEval.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.common.base.Objects;
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.engine.json.GsonCreator;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.engine.json.GsonCreator;
 
 public class ConstEval extends EvalNode implements Comparable<ConstEval>, Cloneable {
 	@Expose Datum datum = null;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalContext.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalContext.java
index 541e854..00007ce 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalContext.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalContext.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 public interface EvalContext {
 }
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalNode.java
index 8c31add..1e4f0be 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalNode.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.engine.json.GsonCreator;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.storage.Tuple;
 
 public abstract class EvalNode implements Cloneable {
 	@Expose
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalNodeVisitor.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalNodeVisitor.java
index e6f36a6..2cac5da 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalNodeVisitor.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalNodeVisitor.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 public interface EvalNodeVisitor {
   public void visit(EvalNode node);
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalTreeFactory.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalTreeFactory.java
index 9face87..5d5a9be 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalTreeFactory.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalTreeFactory.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 public class EvalTreeFactory {
 	public static ConstEval newConst(Datum datum) {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalTreeUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalTreeUtil.java
index e8afb65..11fcd43 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalTreeUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/EvalTreeUtil.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.engine.eval.EvalNode.Type;
-import tajo.engine.parser.QueryBlock.Target;
-import tajo.engine.utils.SchemaUtil;
-import tajo.exception.InternalException;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.engine.eval.EvalNode.Type;
+import org.apache.tajo.engine.parser.QueryBlock.Target;
+import org.apache.tajo.engine.utils.SchemaUtil;
+import org.apache.tajo.exception.InternalException;
 
 import java.util.*;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FieldEval.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FieldEval.java
index e258b93..e561783 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FieldEval.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FieldEval.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.utils.SchemaUtil;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.utils.SchemaUtil;
+import org.apache.tajo.storage.Tuple;
 
 public class FieldEval extends EvalNode implements Cloneable {
 	@Expose private Column column;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FuncCallEval.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FuncCallEval.java
index 2dce9e6..9787805 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FuncCallEval.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FuncCallEval.java
@@ -16,19 +16,19 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.common.base.Objects;
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.FunctionDesc;
-import tajo.catalog.Schema;
-import tajo.catalog.function.GeneralFunction;
-import tajo.datum.Datum;
-import tajo.engine.json.GsonCreator;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.FunctionDesc;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
+import org.apache.tajo.util.TUtil;
 
 public class FuncCallEval extends FuncEval {
 	@Expose protected GeneralFunction instance;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FuncEval.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FuncEval.java
index da7df36..38077b8 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FuncEval.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/FuncEval.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.common.base.Objects;
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.FunctionDesc;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.engine.json.GsonCreator;
-import tajo.storage.Tuple;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.FunctionDesc;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.util.TUtil;
 
 public abstract class FuncEval extends EvalNode implements Cloneable {
 	@Expose protected FunctionDesc funcDesc;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/InvalidCastException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/InvalidCastException.java
index 1ad444e..b907f06 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/InvalidCastException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/InvalidCastException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 public class InvalidCastException extends RuntimeException {
 	private static final long serialVersionUID = -5090530469575858320L;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/InvalidEvalException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/InvalidEvalException.java
index 5ff28cc..96eda91 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/InvalidEvalException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/InvalidEvalException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 public class InvalidEvalException extends RuntimeException {
 	private static final long serialVersionUID = -2897003028483298256L;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/IsNullEval.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/IsNullEval.java
index a236426..24f050f 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/IsNullEval.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/IsNullEval.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.datum.BoolDatum;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.utils.SchemaUtil;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.datum.BoolDatum;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.utils.SchemaUtil;
+import org.apache.tajo.storage.Tuple;
 
 public class IsNullEval extends BinaryEval {
   private final static ConstEval NULL_EVAL = new ConstEval(DatumFactory.createNullDatum());
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/LikeEval.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/LikeEval.java
index a963335..30173a5 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/LikeEval.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/LikeEval.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.BoolDatum;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.StringDatum;
-import tajo.engine.utils.SchemaUtil;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.BoolDatum;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.StringDatum;
+import org.apache.tajo.engine.utils.SchemaUtil;
+import org.apache.tajo.storage.Tuple;
 
 import java.util.regex.Pattern;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/NotEval.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/NotEval.java
index aaa1fee..643e87a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/NotEval.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/NotEval.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.common.base.Preconditions;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.utils.SchemaUtil;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.utils.SchemaUtil;
+import org.apache.tajo.storage.Tuple;
 
 public class NotEval extends EvalNode implements Cloneable {
   @Expose private EvalNode subExpr;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/PartialBinaryExpr.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/PartialBinaryExpr.java
index 7e92274..e5a9cc7 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/PartialBinaryExpr.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/eval/PartialBinaryExpr.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.Tuple;
 
 public class PartialBinaryExpr extends EvalNode {
   
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/EmptyClusterException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/EmptyClusterException.java
index b6e44ff..0c7795c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/EmptyClusterException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/EmptyClusterException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.exception;
+package org.apache.tajo.engine.exception;
 
 public class EmptyClusterException extends Exception {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/IllegalQueryStatusException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/IllegalQueryStatusException.java
index e462ae0..66e9ee7 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/IllegalQueryStatusException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/IllegalQueryStatusException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.exception;
+package org.apache.tajo.engine.exception;
 
 public class IllegalQueryStatusException extends Exception {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/NTAQueryException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/NTAQueryException.java
index bad2c57..f280e50 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/NTAQueryException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/NTAQueryException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.exception;
+package org.apache.tajo.engine.exception;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/NoSuchQueryIdException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/NoSuchQueryIdException.java
index d29992a..153164b 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/NoSuchQueryIdException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/NoSuchQueryIdException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.exception;
+package org.apache.tajo.engine.exception;
 
 public class NoSuchQueryIdException extends Exception {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/UnfinishedTaskException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/UnfinishedTaskException.java
index f50b434..0f9c47f 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/UnfinishedTaskException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/UnfinishedTaskException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.exception;
+package org.apache.tajo.engine.exception;
 
 public class UnfinishedTaskException extends Exception {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/UnknownWorkerException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/UnknownWorkerException.java
index becb589..c524b1d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/UnknownWorkerException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/exception/UnknownWorkerException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.exception;
+package org.apache.tajo.engine.exception;
 
 public class UnknownWorkerException extends Exception {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/Country.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/Country.java
index 8992f98..c393ca4 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/Country.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/Country.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.function;
+package org.apache.tajo.engine.function;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.GeneralFunction;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.StringDatum;
-import tajo.storage.Tuple;
-import tajo.util.GeoUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.StringDatum;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.util.GeoUtil;
 
 public class Country extends GeneralFunction<StringDatum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/InCountry.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/InCountry.java
index a7468fd..f311706 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/InCountry.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/InCountry.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.function;
+package org.apache.tajo.engine.function;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.GeneralFunction;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.BoolDatum;
-import tajo.datum.Datum;
-import tajo.storage.Tuple;
-import tajo.util.GeoUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.BoolDatum;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.util.GeoUtil;
 
 public class InCountry extends GeneralFunction<BoolDatum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgDouble.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgDouble.java
index 39d0c28..7e349c1 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgDouble.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgDouble.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.ArrayDatum;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.ArrayDatum;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.Tuple;
 
 public class AvgDouble extends AggFunction {
   public AvgDouble() {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgFloat.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgFloat.java
index babedfd..9844207 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgFloat.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgFloat.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.ArrayDatum;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.FloatDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.ArrayDatum;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.FloatDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class AvgFloat extends AggFunction<FloatDatum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgInt.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgInt.java
index 2f41cf4..2916886 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgInt.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgInt.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.ArrayDatum;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.FloatDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.ArrayDatum;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.FloatDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class AvgInt extends AggFunction<FloatDatum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgLong.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgLong.java
index 85aefa9..8605656 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgLong.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/AvgLong.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.ArrayDatum;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.DoubleDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.ArrayDatum;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.DoubleDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class AvgLong extends AggFunction<DoubleDatum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/CountRows.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/CountRows.java
index e776de9..2fe2dd8 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/CountRows.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/CountRows.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.LongDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.LongDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class CountRows extends AggFunction<Datum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/CountValue.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/CountValue.java
index 4eb18e5..bfd5993 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/CountValue.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/CountValue.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.datum.DatumType;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.datum.DatumType;
+import org.apache.tajo.storage.Tuple;
 
 public final class CountValue extends CountRows {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/Date.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/Date.java
index 1d5d64c..17d7ddd 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/Date.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/Date.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.catalog.Column;
-import tajo.catalog.function.GeneralFunction;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.LongDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.LongDatum;
+import org.apache.tajo.storage.Tuple;
 
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxDouble.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxDouble.java
index 8b4db74..c8784be 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxDouble.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxDouble.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.DoubleDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.DoubleDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class MaxDouble extends AggFunction<DoubleDatum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxFloat.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxFloat.java
index fdde18c..e638720 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxFloat.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxFloat.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.Tuple;
 
 public class MaxFloat extends AggFunction<Datum> {
   public MaxFloat() {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxInt.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxInt.java
index 25ea8d6..45fcbe4 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxInt.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxInt.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.Tuple;
 
 public class MaxInt extends AggFunction<Datum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxLong.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxLong.java
index 24c10d5..877dcca 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxLong.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MaxLong.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.LongDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.LongDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class MaxLong extends AggFunction<LongDatum> {
   public MaxLong() {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinDouble.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinDouble.java
index 82b4db0..8452e08 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinDouble.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinDouble.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.Tuple;
 
 public class MinDouble extends AggFunction<Datum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinFloat.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinFloat.java
index 8c6cabd..066db7c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinFloat.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinFloat.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.FloatDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.FloatDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class MinFloat extends AggFunction<FloatDatum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinInt.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinInt.java
index 90f9be8..d5aaebb 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinInt.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinInt.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.Tuple;
 
 public class MinInt extends AggFunction<Datum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinLong.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinLong.java
index 85d484d..35c2408 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinLong.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinLong.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.LongDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.LongDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class MinLong extends AggFunction<Datum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinString.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinString.java
index 333963e..212046d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinString.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/MinString.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.StringDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.StringDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class MinString extends AggFunction<Datum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/RandomInt.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/RandomInt.java
index a38583d..c42071b 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/RandomInt.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/RandomInt.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.GeneralFunction;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.Tuple;
 
 import java.util.Random;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumDouble.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumDouble.java
index 01754a2..4b04927 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumDouble.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumDouble.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.DoubleDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.DoubleDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class SumDouble extends AggFunction<Datum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumFloat.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumFloat.java
index 102679d..d3613e8 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumFloat.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumFloat.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.Tuple;
 
 public class SumFloat extends AggFunction<Datum> {
   public SumFloat() {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumInt.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumInt.java
index b180f7a..ce9c078 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumInt.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumInt.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.Tuple;
 
 public class SumInt extends AggFunction<Datum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumLong.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumLong.java
index 2e4d3c5..1d606e3 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumLong.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/SumLong.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.LongDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.LongDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class SumLong extends AggFunction<Datum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/Today.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/Today.java
index a4a334e..998db54 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/Today.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/function/builtin/Today.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.engine.function.builtin;
+package org.apache.tajo.engine.function.builtin;
 
-import tajo.catalog.Column;
-import tajo.catalog.function.GeneralFunction;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.LongDatum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.LongDatum;
+import org.apache.tajo.storage.Tuple;
 
 public class Today extends GeneralFunction<LongDatum> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/EvalNodeAdapter.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/EvalNodeAdapter.java
index 3f03a8a..49ea542 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/EvalNodeAdapter.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/EvalNodeAdapter.java
@@ -19,10 +19,10 @@
 /**
  * 
  */
-package tajo.engine.json;
+package org.apache.tajo.engine.json;
 
 import com.google.gson.*;
-import tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.eval.EvalNode;
 
 import java.lang.reflect.Type;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/FragmentDeserializer.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/FragmentDeserializer.java
index 46bd134..41b2ef6 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/FragmentDeserializer.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/FragmentDeserializer.java
@@ -19,15 +19,15 @@
 /**
  * 
  */
-package tajo.engine.json;
+package org.apache.tajo.engine.json;
 
 import com.google.gson.*;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Options;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMetaImpl;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.storage.Fragment;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMetaImpl;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.storage.Fragment;
 
 import java.lang.reflect.Type;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/FromTableDeserializer.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/FromTableDeserializer.java
index f2c3908..aa4bbbf 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/FromTableDeserializer.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/FromTableDeserializer.java
@@ -19,13 +19,13 @@
 /**
  * 
  */
-package tajo.engine.json;
+package org.apache.tajo.engine.json;
 
 import com.google.gson.*;
-import tajo.catalog.TableDesc;
-import tajo.catalog.TableDescImpl;
-import tajo.engine.parser.QueryBlock.FromTable;
-import tajo.storage.Fragment;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.TableDescImpl;
+import org.apache.tajo.engine.parser.QueryBlock.FromTable;
+import org.apache.tajo.storage.Fragment;
 
 import java.lang.reflect.Type;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/GsonCreator.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/GsonCreator.java
index 087a122..1e74577 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/GsonCreator.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/GsonCreator.java
@@ -19,24 +19,24 @@
 /**
  * 
  */
-package tajo.engine.json;
+package org.apache.tajo.engine.json;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.TableDesc;
-import tajo.catalog.TableMeta;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.Function;
-import tajo.catalog.function.GeneralFunction;
-import tajo.catalog.json.FunctionAdapter;
-import tajo.catalog.json.TableDescAdapter;
-import tajo.catalog.json.TableMetaAdapter;
-import tajo.datum.Datum;
-import tajo.datum.json.DatumAdapter;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.gson.*;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.Function;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.catalog.json.FunctionAdapter;
+import org.apache.tajo.catalog.json.TableDescAdapter;
+import org.apache.tajo.catalog.json.TableMetaAdapter;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.json.DatumAdapter;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.gson.*;
 
 public class GsonCreator {
 	private static GsonBuilder builder;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/LogicalNodeAdapter.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/LogicalNodeAdapter.java
index 8649002..1716916 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/LogicalNodeAdapter.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/json/LogicalNodeAdapter.java
@@ -19,10 +19,10 @@
 /**
  * 
  */
-package tajo.engine.json;
+package org.apache.tajo.engine.json;
 
 import com.google.gson.*;
-import tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
 
 import java.lang.reflect.Type;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CommandType.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CommandType.java
index 049171f..911da97 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CommandType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CommandType.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 public enum CommandType {
 	// Select
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CopyStmt.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CopyStmt.java
index 0ef4c10..cef63cf 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CopyStmt.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CopyStmt.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Options;
-import tajo.engine.planner.PlanningContext;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.engine.planner.PlanningContext;
 
-import static tajo.catalog.proto.CatalogProtos.StoreType;
+import static org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
 
 public class CopyStmt extends ParseTree {
   private String tableName;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CreateIndexStmt.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CreateIndexStmt.java
index 0c63c3d..447aeb0 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CreateIndexStmt.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CreateIndexStmt.java
@@ -19,13 +19,13 @@
 /**
  * 
  */
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 import com.google.common.base.Preconditions;
-import tajo.catalog.Options;
-import tajo.catalog.SortSpec;
-import tajo.catalog.proto.CatalogProtos.IndexMethod;
-import tajo.engine.planner.PlanningContext;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexMethod;
+import org.apache.tajo.engine.planner.PlanningContext;
 
 public class CreateIndexStmt extends ParseTree {
   private String idxName;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CreateTableStmt.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CreateTableStmt.java
index 816a7f7..90b4a69 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CreateTableStmt.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/CreateTableStmt.java
@@ -19,14 +19,14 @@
 /**
  * 
  */
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Options;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.PlanningContextImpl;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.PlanningContextImpl;
 
 public class CreateTableStmt extends ParseTree {
   private final String tableName;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/EvalTreeBin.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/EvalTreeBin.java
index 45556d3..4c7fbd8 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/EvalTreeBin.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/EvalTreeBin.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 public class EvalTreeBin {
   private byte [] bytecode;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParseTree.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParseTree.java
index 2ac52d5..76f4c3a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParseTree.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParseTree.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
-import tajo.engine.parser.QueryBlock.FromTable;
-import tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.parser.QueryBlock.FromTable;
+import org.apache.tajo.engine.planner.PlanningContext;
 
 import java.util.Map.Entry;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParseUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParseUtil.java
index b8f0b97..0379f26 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParseUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParseUtil.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 import org.antlr.runtime.tree.Tree;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.IndexMethod;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.eval.InvalidEvalException;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexMethod;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.eval.InvalidEvalException;
 
 public class ParseUtil {
   private static final Log LOG = LogFactory.getLog(ParseUtil.class);
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParserException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParserException.java
index 634716e..b6890f9 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParserException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/ParserException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 public class ParserException extends RuntimeException {
   private static final long serialVersionUID = -4392842405539056555L;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/QueryAnalyzer.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/QueryAnalyzer.java
index 8ee1ad6..5623d52 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/QueryAnalyzer.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/QueryAnalyzer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.base.Preconditions;
@@ -28,22 +28,22 @@ import org.antlr.runtime.tree.Tree;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.*;
-import tajo.catalog.exception.NoSuchTableException;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.GeneralFunction;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.catalog.proto.CatalogProtos.IndexMethod;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.datum.DatumFactory;
-import tajo.engine.eval.*;
-import tajo.engine.parser.QueryBlock.*;
-import tajo.engine.planner.JoinType;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.PlanningContextImpl;
-import tajo.engine.query.exception.*;
-import tajo.exception.InternalException;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.exception.NoSuchTableException;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexMethod;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.eval.*;
+import org.apache.tajo.engine.parser.QueryBlock.*;
+import org.apache.tajo.engine.planner.JoinType;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.PlanningContextImpl;
+import org.apache.tajo.engine.query.exception.*;
+import org.apache.tajo.exception.InternalException;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -51,7 +51,7 @@ import java.util.List;
 /**
  * This class transforms a query statement into a QueryBlock.
  *
- * @see tajo.engine.parser.QueryBlock
+ * @see org.apache.tajo.engine.parser.QueryBlock
  */
 public final class QueryAnalyzer {
   private static final Log LOG = LogFactory.getLog(QueryAnalyzer.class);
@@ -1224,7 +1224,7 @@ public final class QueryAnalyzer {
               exprs[fieldId].getValueType()[0]);
           break;
 
-        default: throw new tajo.engine.eval.InvalidEvalException();
+        default: throw new org.apache.tajo.engine.eval.InvalidEvalException();
       }
 
       if (constId == 0) {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/QueryBlock.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/QueryBlock.java
index 86b37d6..73a8382 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/QueryBlock.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/QueryBlock.java
@@ -16,22 +16,22 @@
  * limitations under the License.
  */
 
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 import com.google.common.collect.Lists;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
-import tajo.catalog.TableDesc;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.planner.JoinType;
-import tajo.engine.planner.PlanningContext;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.planner.JoinType;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.util.TUtil;
 
 import java.util.ArrayList;
 import java.util.Collections;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/SetStmt.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/SetStmt.java
index ef3ea5e..126e4bd 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/SetStmt.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/SetStmt.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
-import tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.PlanningContext;
 
 import java.util.Map.Entry;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/StatementType.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/StatementType.java
index 6926916..de9b7e6 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/StatementType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/StatementType.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 public enum StatementType {
 	// Store
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/TableMap.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/TableMap.java
index a250e2c..2fce526 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/TableMap.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/parser/TableMap.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
-import tajo.catalog.exception.AlreadyExistsTableException;
+import org.apache.tajo.catalog.exception.AlreadyExistsTableException;
 
 import java.util.Map;
 import java.util.Map.Entry;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/Annotation.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/Annotation.java
index 6e62474..203580d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/Annotation.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/Annotation.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.plan.global;
+package org.apache.tajo.engine.plan.global;
 
 public abstract class Annotation {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/GenericTask.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/GenericTask.java
index ce848e4..0d31b3a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/GenericTask.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/GenericTask.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.engine.plan.global;
+package org.apache.tajo.engine.plan.global;
 
-import tajo.engine.planner.logical.ExprType;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.storage.Fragment;
+import org.apache.tajo.engine.planner.logical.ExprType;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.storage.Fragment;
 
 import java.util.ArrayList;
 import java.util.HashSet;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/GenericTaskGraph.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/GenericTaskGraph.java
index 874dc54..a2a00ff 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/GenericTaskGraph.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/plan/global/GenericTaskGraph.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.plan.global;
+package org.apache.tajo.engine.plan.global;
 
 public class GenericTaskGraph {
 	private GenericTask root;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/JoinType.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/JoinType.java
index fd8dfce..2fbdab1 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/JoinType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/JoinType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 public enum JoinType {
   CROSS_JOIN,
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/LogicalOptimizer.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/LogicalOptimizer.java
index d188dda..d62ec69 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/LogicalOptimizer.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/LogicalOptimizer.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.Lists;
@@ -27,22 +27,22 @@ import com.google.common.collect.Sets;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
-import tajo.catalog.TableMeta;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.eval.EvalTreeUtil;
-import tajo.engine.eval.FieldEval;
-import tajo.engine.parser.CreateTableStmt;
-import tajo.engine.parser.ParseTree;
-import tajo.engine.parser.QueryBlock;
-import tajo.engine.parser.QueryBlock.Target;
-import tajo.engine.planner.logical.*;
-import tajo.engine.query.exception.InvalidQueryException;
-import tajo.engine.utils.SchemaUtil;
-import tajo.storage.StorageManager;
-import tajo.util.IndexUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.eval.EvalTreeUtil;
+import org.apache.tajo.engine.eval.FieldEval;
+import org.apache.tajo.engine.parser.CreateTableStmt;
+import org.apache.tajo.engine.parser.ParseTree;
+import org.apache.tajo.engine.parser.QueryBlock;
+import org.apache.tajo.engine.parser.QueryBlock.Target;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.engine.query.exception.InvalidQueryException;
+import org.apache.tajo.engine.utils.SchemaUtil;
+import org.apache.tajo.storage.StorageManager;
+import org.apache.tajo.util.IndexUtil;
 
 import java.io.IOException;
 import java.util.*;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/LogicalPlanner.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/LogicalPlanner.java
index 19f22e2..b028669 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/LogicalPlanner.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/LogicalPlanner.java
@@ -16,27 +16,27 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.catalog.CatalogService;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.engine.eval.*;
-import tajo.engine.parser.*;
-import tajo.engine.parser.QueryBlock.*;
-import tajo.engine.planner.logical.*;
-import tajo.engine.planner.logical.join.Edge;
-import tajo.engine.planner.logical.join.JoinTree;
-import tajo.engine.query.exception.InvalidQueryException;
-import tajo.engine.query.exception.NotSupportQueryException;
-import tajo.engine.utils.SchemaUtil;
+import org.apache.tajo.catalog.CatalogService;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.engine.eval.*;
+import org.apache.tajo.engine.parser.*;
+import org.apache.tajo.engine.parser.QueryBlock.*;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.engine.planner.logical.join.Edge;
+import org.apache.tajo.engine.planner.logical.join.JoinTree;
+import org.apache.tajo.engine.query.exception.InvalidQueryException;
+import org.apache.tajo.engine.query.exception.NotSupportQueryException;
+import org.apache.tajo.engine.utils.SchemaUtil;
 
 import java.util.List;
 import java.util.Map;
@@ -44,10 +44,10 @@ import java.util.Set;
 import java.util.Stack;
 
 /**
- * This class creates a logical plan from a parse tree ({@link tajo.engine.parser.QueryBlock})
- * generated by {@link tajo.engine.parser.QueryAnalyzer}.
+ * This class creates a logical plan from a parse tree ({@link org.apache.tajo.engine.parser.QueryBlock})
+ * generated by {@link org.apache.tajo.engine.parser.QueryAnalyzer}.
  *
- * @see tajo.engine.parser.QueryBlock
+ * @see org.apache.tajo.engine.parser.QueryBlock
  */
 public class LogicalPlanner {
   private static Log LOG = LogFactory.getLog(LogicalPlanner.class);
@@ -463,7 +463,7 @@ public class LogicalPlanner {
       join.setJoinQual(joinClause.getJoinQual());
     } else if (joinClause.hasJoinColumns()) { 
       // for using clause of explicit join
-      // TODO - to be implemented. Now, tajo only support 'ON' join clause.
+      // TODO - to be implemented. Now, org.apache.tajo only support 'ON' join clause.
     }
     
     // Determine Join Schemas
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PhysicalPlanner.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PhysicalPlanner.java
index 109468b..e8bdbc5 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PhysicalPlanner.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PhysicalPlanner.java
@@ -19,12 +19,12 @@
 /**
  * 
  */
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
-import tajo.TaskAttemptContext;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.physical.PhysicalExec;
-import tajo.exception.InternalException;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.physical.PhysicalExec;
+import org.apache.tajo.exception.InternalException;
 
 /**
  * This class generates a physical execution plan.
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PhysicalPlannerImpl.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PhysicalPlannerImpl.java
index 8fe317b..0796cfd 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PhysicalPlannerImpl.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PhysicalPlannerImpl.java
@@ -19,23 +19,23 @@
 /**
  *
  */
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 import com.google.common.base.Preconditions;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.fs.Path;
-import tajo.TaskAttemptContext;
-import tajo.catalog.Column;
-import tajo.catalog.SortSpec;
-import tajo.conf.TajoConf;
-import tajo.engine.planner.logical.*;
-import tajo.engine.planner.physical.*;
-import tajo.exception.InternalException;
-import tajo.storage.Fragment;
-import tajo.storage.StorageManager;
-import tajo.storage.TupleComparator;
-import tajo.util.IndexUtil;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.engine.planner.physical.*;
+import org.apache.tajo.exception.InternalException;
+import org.apache.tajo.storage.Fragment;
+import org.apache.tajo.storage.StorageManager;
+import org.apache.tajo.storage.TupleComparator;
+import org.apache.tajo.util.IndexUtil;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlannerUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlannerUtil.java
index aeb44b0..b708e75 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlannerUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlannerUtil.java
@@ -16,22 +16,22 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.engine.eval.*;
-import tajo.engine.parser.QueryBlock;
-import tajo.engine.planner.logical.*;
-import tajo.engine.query.exception.InvalidQueryException;
-import tajo.storage.TupleComparator;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.engine.eval.*;
+import org.apache.tajo.engine.parser.QueryBlock;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.engine.query.exception.InvalidQueryException;
+import org.apache.tajo.storage.TupleComparator;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlanningContext.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlanningContext.java
index e62c237..595f41a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlanningContext.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlanningContext.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 import org.antlr.runtime.tree.Tree;
-import tajo.engine.parser.ParseTree;
+import org.apache.tajo.engine.parser.ParseTree;
 
 public interface PlanningContext {
   String getRawQuery();
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlanningContextImpl.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlanningContextImpl.java
index 494a28d..34ea73a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlanningContextImpl.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/PlanningContextImpl.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 import org.antlr.runtime.tree.Tree;
-import tajo.engine.parser.ParseTree;
+import org.apache.tajo.engine.parser.ParseTree;
 
 public class PlanningContextImpl implements PlanningContext  {
   private String rawQuery;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/Projector.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/Projector.java
index c49ef29..da1b43c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/Projector.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/Projector.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.parser.QueryBlock.Target;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.parser.QueryBlock.Target;
+import org.apache.tajo.storage.Tuple;
 
 public class Projector {
   private final Schema inSchema;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/RangeOverflowException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/RangeOverflowException.java
index 1b67bbc..c18d403 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/RangeOverflowException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/RangeOverflowException.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
-import tajo.storage.Tuple;
-import tajo.storage.TupleRange;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.TupleRange;
 
 public class RangeOverflowException extends RuntimeException {
   public RangeOverflowException(TupleRange range, Tuple overflowValue, long inc) {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/RangePartitionAlgorithm.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/RangePartitionAlgorithm.java
index 570e416..9566e88 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/RangePartitionAlgorithm.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/RangePartitionAlgorithm.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.datum.Datum;
-import tajo.storage.Tuple;
-import tajo.storage.TupleRange;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.TupleRange;
 
 import java.math.BigDecimal;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/UniformRangePartition.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/UniformRangePartition.java
index bee8534..7576ac5 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/UniformRangePartition.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/UniformRangePartition.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.Lists;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.Tuple;
-import tajo.storage.TupleRange;
-import tajo.storage.VTuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.TupleRange;
+import org.apache.tajo.storage.VTuple;
 
 import java.math.BigDecimal;
 import java.math.RoundingMode;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/global/GlobalOptimizer.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/global/GlobalOptimizer.java
index 4c50669..c0e4017 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/global/GlobalOptimizer.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/global/GlobalOptimizer.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.global;
+package org.apache.tajo.engine.planner.global;
 
 import com.google.common.annotations.VisibleForTesting;
-import tajo.engine.planner.PlannerUtil;
-import tajo.engine.planner.logical.ExprType;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.logical.ScanNode;
-import tajo.engine.planner.logical.UnaryNode;
-import tajo.master.ExecutionBlock;
-import tajo.master.ExecutionBlock.PartitionType;
+import org.apache.tajo.engine.planner.PlannerUtil;
+import org.apache.tajo.engine.planner.logical.ExprType;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.logical.ScanNode;
+import org.apache.tajo.engine.planner.logical.UnaryNode;
+import org.apache.tajo.master.ExecutionBlock;
+import org.apache.tajo.master.ExecutionBlock.PartitionType;
 
 public class GlobalOptimizer {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/global/MasterPlan.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/global/MasterPlan.java
index 5ae4faf..9201997 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/global/MasterPlan.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/global/MasterPlan.java
@@ -19,9 +19,9 @@
 /**
  * 
  */
-package tajo.engine.planner.global;
+package org.apache.tajo.engine.planner.global;
 
-import tajo.master.ExecutionBlock;
+import org.apache.tajo.master.ExecutionBlock;
 
 public class MasterPlan {
   private ExecutionBlock root;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/BinaryNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/BinaryNode.java
index b53259b..061964d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/BinaryNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/BinaryNode.java
@@ -19,10 +19,10 @@
 /**
  * 
  */
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.annotations.Expose;
-import tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.json.GsonCreator;
 
 public abstract class BinaryNode extends LogicalNode implements Cloneable {
 	@Expose
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/CreateTableNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/CreateTableNode.java
index b95db6b..a02f703 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/CreateTableNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/CreateTableNode.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.annotations.Expose;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Column;
-import tajo.catalog.Options;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.engine.json.GsonCreator;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.util.TUtil;
 
 public class CreateTableNode extends LogicalNode implements Cloneable {
   @Expose private String tableName;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/EvalExprNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/EvalExprNode.java
index 6934eaa..c44db13 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/EvalExprNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/EvalExprNode.java
@@ -19,12 +19,12 @@
 /**
  * 
  */
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.parser.QueryBlock;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.parser.QueryBlock;
 
 public class EvalExprNode extends LogicalNode {
   @Expose private QueryBlock.Target[] exprs;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ExceptNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ExceptNode.java
index 71d51e0..41e606f 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ExceptNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ExceptNode.java
@@ -19,9 +19,9 @@
 /**
  * 
  */
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
-import tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.json.GsonCreator;
 
 public class ExceptNode extends BinaryNode {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ExprType.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ExprType.java
index 7caae3f..8eb70cf 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ExprType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ExprType.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 public enum ExprType {
   BST_INDEX_SCAN,
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/GroupbyNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/GroupbyNode.java
index d037e3d..d35db32 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/GroupbyNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/GroupbyNode.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Column;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.parser.QueryBlock;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.parser.QueryBlock;
+import org.apache.tajo.util.TUtil;
 
 import java.util.Arrays;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IndexScanNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IndexScanNode.java
index 899d4e3..af3b2c4 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IndexScanNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IndexScanNode.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
-import tajo.datum.Datum;
-import tajo.engine.json.GsonCreator;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.engine.json.GsonCreator;
 
 public class IndexScanNode extends ScanNode {
   
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IndexWriteNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IndexWriteNode.java
index d049789..fde8d7f 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IndexWriteNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IndexWriteNode.java
@@ -19,16 +19,16 @@
 /**
  * 
  */
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Options;
-import tajo.catalog.SortSpec;
-import tajo.catalog.proto.CatalogProtos.IndexMethod;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.parser.CreateIndexStmt;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexMethod;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.parser.CreateIndexStmt;
 
 public class IndexWriteNode extends UnaryNode {
   @Expose private String indexName;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IntersectNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IntersectNode.java
index a3f1a7c..aa90df9 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IntersectNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/IntersectNode.java
@@ -19,9 +19,9 @@
 /**
  * 
  */
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
-import tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.json.GsonCreator;
 
 public class IntersectNode extends BinaryNode {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/JoinNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/JoinNode.java
index 4ecd011..c12e89e 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/JoinNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/JoinNode.java
@@ -19,13 +19,13 @@
 /**
  * 
  */
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.annotations.Expose;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.parser.QueryBlock;
-import tajo.engine.planner.JoinType;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.parser.QueryBlock;
+import org.apache.tajo.engine.planner.JoinType;
 
 public class JoinNode extends BinaryNode implements Cloneable {
   @Expose private JoinType joinType;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LimitNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LimitNode.java
index 2e36daf..966e4a8 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LimitNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LimitNode.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.annotations.Expose;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.parser.QueryBlock.LimitClause;
-import tajo.util.TUtil;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.parser.QueryBlock.LimitClause;
+import org.apache.tajo.util.TUtil;
 
 public final class LimitNode extends UnaryNode implements Cloneable {
 	@Expose
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalNode.java
index d18fc77..c206753 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalNode.java
@@ -19,10 +19,10 @@
 /**
  * 
  */
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Schema;
+import org.apache.tajo.catalog.Schema;
 
 public abstract class LogicalNode implements Cloneable {
 	@Expose
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalNodeVisitor.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalNodeVisitor.java
index 0ee74c6..5b0c1c2 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalNodeVisitor.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalNodeVisitor.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 
 public interface LogicalNodeVisitor {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalRootNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalRootNode.java
index fdb7981..154b931 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalRootNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/LogicalRootNode.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
-import tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.json.GsonCreator;
 
 public class LogicalRootNode extends UnaryNode implements Cloneable {
   public LogicalRootNode() {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ProjectionNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ProjectionNode.java
index 5683fe5..2c948f3 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ProjectionNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ProjectionNode.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.annotations.Expose;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.parser.QueryBlock.Target;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.parser.QueryBlock.Target;
 
 import java.util.Arrays;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ScanNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ScanNode.java
index 41fbb86..64fa63a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ScanNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/ScanNode.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.common.base.Objects;
 import com.google.gson.annotations.Expose;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.parser.QueryBlock;
-import tajo.engine.parser.QueryBlock.FromTable;
-import tajo.engine.parser.QueryBlock.Target;
-import tajo.util.TUtil;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.parser.QueryBlock;
+import org.apache.tajo.engine.parser.QueryBlock.FromTable;
+import org.apache.tajo.engine.parser.QueryBlock.Target;
+import org.apache.tajo.util.TUtil;
 
 public class ScanNode extends LogicalNode {
 	@Expose private FromTable table;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/SelectionNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/SelectionNode.java
index f115a20..b822d8a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/SelectionNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/SelectionNode.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.annotations.Expose;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.json.GsonCreator;
 
 public class SelectionNode extends UnaryNode implements Cloneable {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/SortNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/SortNode.java
index f2dd2f0..947553a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/SortNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/SortNode.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.common.base.Preconditions;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
-import tajo.engine.json.GsonCreator;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.util.TUtil;
 
 public final class SortNode extends UnaryNode implements Cloneable {
 	@Expose
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/StoreIndexNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/StoreIndexNode.java
index b7ec221..3c44374 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/StoreIndexNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/StoreIndexNode.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 public class StoreIndexNode extends StoreTableNode {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/StoreTableNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/StoreTableNode.java
index 8c4d592..c3d292f 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/StoreTableNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/StoreTableNode.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.common.base.Preconditions;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Column;
-import tajo.catalog.Options;
-import tajo.master.ExecutionBlock.PartitionType;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.master.ExecutionBlock.PartitionType;
+import org.apache.tajo.util.TUtil;
 
-import static tajo.catalog.proto.CatalogProtos.StoreType;
+import static org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
 
 public class StoreTableNode extends UnaryNode implements Cloneable {
   @Expose private String tableName;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/UnaryNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/UnaryNode.java
index 8778d66..b415442 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/UnaryNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/UnaryNode.java
@@ -19,10 +19,10 @@
 /**
  * 
  */
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
 import com.google.gson.annotations.Expose;
-import tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.json.GsonCreator;
 
 
 public abstract class UnaryNode extends LogicalNode implements Cloneable {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/UnionNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/UnionNode.java
index 42b03e2..e336549 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/UnionNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/UnionNode.java
@@ -19,9 +19,9 @@
 /**
  * 
  */
-package tajo.engine.planner.logical;
+package org.apache.tajo.engine.planner.logical;
 
-import tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.json.GsonCreator;
 
 public class UnionNode extends BinaryNode {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/PipeType.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/PipeType.java
index 2594068..849bd30 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/PipeType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/PipeType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical.extended;
+package org.apache.tajo.engine.planner.logical.extended;
 
 public enum PipeType {
   PULL,
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/ReceiveNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/ReceiveNode.java
index ffdb9e6..2a6112e 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/ReceiveNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/ReceiveNode.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.planner.logical.extended;
+package org.apache.tajo.engine.planner.logical.extended;
 
 import com.google.common.base.Objects;
 import com.google.common.collect.Lists;
@@ -27,10 +27,10 @@ import com.google.common.collect.Maps;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.annotations.Expose;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.planner.logical.ExprType;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.logical.LogicalNodeVisitor;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.planner.logical.ExprType;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.logical.LogicalNodeVisitor;
 
 import java.net.URI;
 import java.util.*;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/RepartitionType.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/RepartitionType.java
index b494ea4..e46c55e 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/RepartitionType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/RepartitionType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical.extended;
+package org.apache.tajo.engine.planner.logical.extended;
 
 public enum RepartitionType {
   NONE,
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/SendNode.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/SendNode.java
index 2b3fd55..a994c6c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/SendNode.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/extended/SendNode.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.planner.logical.extended;
+package org.apache.tajo.engine.planner.logical.extended;
 
 import com.google.common.base.Objects;
 import com.google.common.base.Preconditions;
@@ -27,12 +27,12 @@ import com.google.common.collect.Maps;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.annotations.Expose;
-import tajo.catalog.Column;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.planner.logical.ExprType;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.logical.UnaryNode;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.planner.logical.ExprType;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.logical.UnaryNode;
+import org.apache.tajo.util.TUtil;
 
 import java.net.URI;
 import java.util.Iterator;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/join/Edge.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/join/Edge.java
index ac1bc23..c8bca03 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/join/Edge.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/join/Edge.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical.join;
+package org.apache.tajo.engine.planner.logical.join;
 
-import tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.eval.EvalNode;
 
 public class Edge {
   private String src;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/join/JoinTree.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/join/JoinTree.java
index 13a27ca..d76af7d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/join/JoinTree.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/logical/join/JoinTree.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical.join;
+package org.apache.tajo.engine.planner.logical.join;
 
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
-import tajo.catalog.Column;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.eval.EvalTreeUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.eval.EvalTreeUtil;
 
 import java.util.Collection;
 import java.util.Collections;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/AggregationExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/AggregationExec.java
index 5f1a04d..6c90a40 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/AggregationExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/AggregationExec.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import com.google.common.collect.Sets;
-import tajo.TaskAttemptContext;
-import tajo.catalog.Column;
-import tajo.datum.DatumFactory;
-import tajo.engine.eval.ConstEval;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.parser.QueryBlock;
-import tajo.engine.planner.logical.GroupbyNode;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.eval.ConstEval;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.parser.QueryBlock;
+import org.apache.tajo.engine.planner.logical.GroupbyNode;
 
 import java.io.IOException;
 import java.util.Set;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BNLJoinExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BNLJoinExec.java
index a79929d..7747dcd 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BNLJoinExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BNLJoinExec.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
-
-import tajo.TaskAttemptContext;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.planner.logical.JoinNode;
-import tajo.engine.utils.SchemaUtil;
-import tajo.storage.FrameTuple;
-import tajo.storage.RowStoreUtil;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+package org.apache.tajo.engine.planner.physical;
+
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.planner.logical.JoinNode;
+import org.apache.tajo.engine.utils.SchemaUtil;
+import org.apache.tajo.storage.FrameTuple;
+import org.apache.tajo.storage.RowStoreUtil;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 import java.util.ArrayList;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BSTIndexScanExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BSTIndexScanExec.java
index d03a649..e3b299d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BSTIndexScanExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BSTIndexScanExec.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import org.apache.hadoop.fs.Path;
-import tajo.TaskAttemptContext;
-import tajo.catalog.Schema;
-import tajo.datum.Datum;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.planner.Projector;
-import tajo.engine.planner.logical.ScanNode;
-import tajo.storage.*;
-import tajo.storage.index.bst.BSTIndex;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.planner.Projector;
+import org.apache.tajo.engine.planner.logical.ScanNode;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.storage.index.bst.BSTIndex;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BinaryPhysicalExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BinaryPhysicalExec.java
index 74c980b..a17ddf4 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BinaryPhysicalExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/BinaryPhysicalExec.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.catalog.Schema;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Schema;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/EvalExprExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/EvalExprExec.java
index 6139fa4..5af4f18 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/EvalExprExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/EvalExprExec.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.parser.QueryBlock.Target;
-import tajo.engine.planner.logical.EvalExprNode;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.parser.QueryBlock.Target;
+import org.apache.tajo.engine.planner.logical.EvalExprNode;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/ExternalSortExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/ExternalSortExec.java
index 20fa0b0..12ce4ed 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/ExternalSortExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/ExternalSortExec.java
@@ -16,17 +16,17 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
-import tajo.TaskAttemptContext;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.engine.planner.logical.SortNode;
-import tajo.storage.*;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.engine.planner.logical.SortNode;
+import org.apache.tajo.storage.*;
 
 import java.io.IOException;
 import java.util.*;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashAggregateExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashAggregateExec.java
index 405e903..427e6f4 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashAggregateExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashAggregateExec.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.planner.logical.GroupbyNode;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.planner.logical.GroupbyNode;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 import java.util.HashMap;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashJoinExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashJoinExec.java
index 5604fa8..cce5587 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashJoinExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashJoinExec.java
@@ -16,19 +16,19 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
-
-import tajo.TaskAttemptContext;
-import tajo.catalog.Column;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.planner.PlannerUtil;
-import tajo.engine.planner.Projector;
-import tajo.engine.planner.logical.JoinNode;
-import tajo.engine.utils.SchemaUtil;
-import tajo.storage.FrameTuple;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+package org.apache.tajo.engine.planner.physical;
+
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.planner.PlannerUtil;
+import org.apache.tajo.engine.planner.Projector;
+import org.apache.tajo.engine.planner.logical.JoinNode;
+import org.apache.tajo.engine.utils.SchemaUtil;
+import org.apache.tajo.storage.FrameTuple;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 import java.util.*;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashPartitioner.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashPartitioner.java
index ba2c2eb..485e0d1 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashPartitioner.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/HashPartitioner.java
@@ -19,10 +19,10 @@
 /**
  * 
  */
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 public class HashPartitioner extends Partitioner {
   private final Tuple keyTuple;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/IndexWriteExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/IndexWriteExec.java
index f197be0..210a90c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/IndexWriteExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/IndexWriteExec.java
@@ -19,19 +19,19 @@
 /**
  * 
  */
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import com.google.common.base.Preconditions;
 import org.apache.hadoop.fs.Path;
-import tajo.TaskAttemptContext;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.conf.TajoConf;
-import tajo.engine.planner.logical.IndexWriteNode;
-import tajo.storage.*;
-import tajo.storage.index.bst.BSTIndex;
-import tajo.storage.index.bst.BSTIndex.BSTIndexWriter;
-import tajo.util.IndexUtil;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.engine.planner.logical.IndexWriteNode;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.storage.index.bst.BSTIndex;
+import org.apache.tajo.storage.index.bst.BSTIndex.BSTIndexWriter;
+import org.apache.tajo.util.IndexUtil;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/IndexedStoreExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/IndexedStoreExec.java
index 4a693b4..79ecd11 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/IndexedStoreExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/IndexedStoreExec.java
@@ -16,20 +16,20 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.fs.RawLocalFileSystem;
-import tajo.TaskAttemptContext;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.conf.TajoConf;
-import tajo.engine.planner.PlannerUtil;
-import tajo.storage.*;
-import tajo.storage.index.bst.BSTIndex;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.engine.planner.PlannerUtil;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.storage.index.bst.BSTIndex;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/JoinTupleComparator.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/JoinTupleComparator.java
index 88c8485..f8a3844 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/JoinTupleComparator.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/JoinTupleComparator.java
@@ -16,21 +16,21 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import com.google.common.base.Preconditions;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
-import tajo.datum.Datum;
-import tajo.datum.DatumType;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumType;
+import org.apache.tajo.storage.Tuple;
 
 import java.util.Comparator;
 
 /**
  * The Comparator class for Outer and Inner Tuples
  *
- * @see tajo.storage.Tuple
+ * @see org.apache.tajo.storage.Tuple
  */
 public class JoinTupleComparator implements Comparator<Tuple> {
   private int numSortKey;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/LimitExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/LimitExec.java
index d4dfc74..eb3f3c8 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/LimitExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/LimitExec.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.catalog.Schema;
-import tajo.engine.planner.logical.LimitNode;
-import tajo.storage.Tuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.engine.planner.logical.LimitNode;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/MemSortExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/MemSortExec.java
index f264939..1532307 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/MemSortExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/MemSortExec.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.engine.planner.logical.SortNode;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.engine.planner.logical.SortNode;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 import java.util.ArrayList;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/MergeJoinExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/MergeJoinExec.java
index babc486..0179da5 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/MergeJoinExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/MergeJoinExec.java
@@ -16,20 +16,20 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import com.google.common.base.Preconditions;
-import tajo.TaskAttemptContext;
-import tajo.catalog.SortSpec;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.planner.PlannerUtil;
-import tajo.engine.planner.Projector;
-import tajo.engine.planner.logical.JoinNode;
-import tajo.storage.FrameTuple;
-import tajo.storage.Tuple;
-import tajo.storage.TupleComparator;
-import tajo.storage.VTuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.planner.PlannerUtil;
+import org.apache.tajo.engine.planner.Projector;
+import org.apache.tajo.engine.planner.logical.JoinNode;
+import org.apache.tajo.storage.FrameTuple;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.TupleComparator;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 import java.util.ArrayList;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/NLJoinExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/NLJoinExec.java
index 5138e3c..82e78f3 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/NLJoinExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/NLJoinExec.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.planner.Projector;
-import tajo.engine.planner.logical.JoinNode;
-import tajo.storage.FrameTuple;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.planner.Projector;
+import org.apache.tajo.engine.planner.logical.JoinNode;
+import org.apache.tajo.storage.FrameTuple;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/PartitionedStoreExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/PartitionedStoreExec.java
index 056d963..0140182 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/PartitionedStoreExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/PartitionedStoreExec.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import com.google.common.base.Preconditions;
 import org.apache.commons.logging.Log;
@@ -25,18 +25,18 @@ import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.fs.RawLocalFileSystem;
-import tajo.TaskAttemptContext;
-import tajo.catalog.Column;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.statistics.StatisticsUtil;
-import tajo.catalog.statistics.TableStat;
-import tajo.engine.planner.logical.StoreTableNode;
-import tajo.storage.Appender;
-import tajo.storage.StorageManager;
-import tajo.storage.StorageUtil;
-import tajo.storage.Tuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.statistics.StatisticsUtil;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.engine.planner.logical.StoreTableNode;
+import org.apache.tajo.storage.Appender;
+import org.apache.tajo.storage.StorageManager;
+import org.apache.tajo.storage.StorageUtil;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.IOException;
 import java.text.NumberFormat;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/Partitioner.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/Partitioner.java
index 4764fc0..866738d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/Partitioner.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/Partitioner.java
@@ -19,10 +19,10 @@
 /**
  * 
  */
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import com.google.common.base.Preconditions;
-import tajo.storage.Tuple;
+import org.apache.tajo.storage.Tuple;
 
 public abstract class Partitioner {
   protected final int [] partitionKeys;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/PhysicalExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/PhysicalExec.java
index 06bedbe..1781304 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/PhysicalExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/PhysicalExec.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.catalog.Schema;
-import tajo.catalog.SchemaObject;
-import tajo.storage.Tuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SchemaObject;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/ProjectionExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/ProjectionExec.java
index 140520a..4aa8a1c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/ProjectionExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/ProjectionExec.java
@@ -19,14 +19,14 @@
 /**
  * 
  */
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.planner.Projector;
-import tajo.engine.planner.logical.ProjectionNode;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.planner.Projector;
+import org.apache.tajo.engine.planner.logical.ProjectionNode;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SelectionExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SelectionExec.java
index 2d9b5cb..b435747 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SelectionExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SelectionExec.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.planner.logical.SelectionNode;
-import tajo.storage.RowStoreUtil;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.planner.logical.SelectionNode;
+import org.apache.tajo.storage.RowStoreUtil;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SeqScanExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SeqScanExec.java
index 5cf4fa0..9279c01 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SeqScanExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SeqScanExec.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
-
-import tajo.TaskAttemptContext;
-import tajo.engine.eval.EvalContext;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.planner.Projector;
-import tajo.engine.planner.logical.ScanNode;
-import tajo.storage.*;
-import tajo.util.TUtil;
+package org.apache.tajo.engine.planner.physical;
+
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.engine.eval.EvalContext;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.planner.Projector;
+import org.apache.tajo.engine.planner.logical.ScanNode;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.util.TUtil;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SortAggregateExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SortAggregateExec.java
index 74d2a2a..34c1d06 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SortAggregateExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SortAggregateExec.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.engine.planner.logical.GroupbyNode;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.engine.planner.logical.GroupbyNode;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SortExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SortExec.java
index 6ebe548..27214cb 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SortExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/SortExec.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
-import tajo.storage.Tuple;
-import tajo.storage.TupleComparator;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.TupleComparator;
 
 import java.io.IOException;
 import java.util.Comparator;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/StoreTableExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/StoreTableExec.java
index 70a7a3c..315d968 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/StoreTableExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/StoreTableExec.java
@@ -19,19 +19,19 @@
 /**
  * 
  */
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.fs.RawLocalFileSystem;
-import tajo.TaskAttemptContext;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.engine.planner.logical.StoreTableNode;
-import tajo.storage.Appender;
-import tajo.storage.StorageManager;
-import tajo.storage.StorageUtil;
-import tajo.storage.Tuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.engine.planner.logical.StoreTableNode;
+import org.apache.tajo.storage.Appender;
+import org.apache.tajo.storage.StorageManager;
+import org.apache.tajo.storage.StorageUtil;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/TunnelExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/TunnelExec.java
index 42d8f5c..b629a49 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/TunnelExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/TunnelExec.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.catalog.Schema;
-import tajo.storage.Tuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/UnaryPhysicalExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/UnaryPhysicalExec.java
index e623618..4f61a50 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/UnaryPhysicalExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/UnaryPhysicalExec.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import com.google.common.annotations.VisibleForTesting;
-import tajo.TaskAttemptContext;
-import tajo.catalog.Schema;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Schema;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/UnionExec.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/UnionExec.java
index de94f51..7a757ca 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/UnionExec.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/planner/physical/UnionExec.java
@@ -19,11 +19,11 @@
 /**
  * 
  */
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
-import tajo.TaskAttemptContext;
-import tajo.engine.query.exception.InvalidQueryException;
-import tajo.storage.Tuple;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.engine.query.exception.InvalidQueryException;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/QueryUnitRequestImpl.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/QueryUnitRequestImpl.java
index 3e24787..9245acb 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/QueryUnitRequestImpl.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/QueryUnitRequestImpl.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.query;
+package org.apache.tajo.engine.query;
 
 import com.google.gson.annotations.Expose;
-import tajo.QueryUnitAttemptId;
-import tajo.engine.MasterWorkerProtos.Fetch;
-import tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
-import tajo.engine.MasterWorkerProtos.QueryUnitRequestProtoOrBuilder;
-import tajo.ipc.protocolrecords.QueryUnitRequest;
-import tajo.storage.Fragment;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.engine.MasterWorkerProtos.Fetch;
+import org.apache.tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
+import org.apache.tajo.engine.MasterWorkerProtos.QueryUnitRequestProtoOrBuilder;
+import org.apache.tajo.ipc.protocolrecords.QueryUnitRequest;
+import org.apache.tajo.storage.Fragment;
 
 import java.net.URI;
 import java.util.ArrayList;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/ResultSetImpl.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/ResultSetImpl.java
index abe78c0..3469c6d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/ResultSetImpl.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/ResultSetImpl.java
@@ -19,22 +19,22 @@
 /**
  * 
  */
-package tajo.engine.query;
+package org.apache.tajo.engine.query;
 
 import com.google.common.collect.Lists;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.*;
-import tajo.catalog.TableMeta;
-import tajo.catalog.TableMetaImpl;
-import tajo.catalog.proto.CatalogProtos.TableProto;
-import tajo.datum.Datum;
-import tajo.datum.DatumType;
-import tajo.exception.UnsupportedException;
-import tajo.storage.Fragment;
-import tajo.storage.MergeScanner;
-import tajo.storage.Scanner;
-import tajo.storage.Tuple;
-import tajo.util.FileUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.TableMetaImpl;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableProto;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumType;
+import org.apache.tajo.exception.UnsupportedException;
+import org.apache.tajo.storage.Fragment;
+import org.apache.tajo.storage.MergeScanner;
+import org.apache.tajo.storage.Scanner;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
@@ -47,7 +47,7 @@ import java.sql.Date;
 import java.util.*;
 
 public class ResultSetImpl implements ResultSet {
-  private final String cursorName = "tajo";
+  private final String cursorName = "org.apache.tajo";
   private Configuration conf;
   private FileSystem fs;
   private Scanner scanner;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/ResultSetMetaDataImpl.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/ResultSetMetaDataImpl.java
index ee9b7cf..4c6a048 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/ResultSetMetaDataImpl.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/ResultSetMetaDataImpl.java
@@ -19,11 +19,11 @@
 /**
  * 
  */
-package tajo.engine.query;
+package org.apache.tajo.engine.query;
 
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.exception.UnsupportedException;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.exception.UnsupportedException;
 
 import java.nio.channels.UnsupportedAddressTypeException;
 import java.sql.ResultSetMetaData;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/AmbiguousFieldException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/AmbiguousFieldException.java
index 88bebb1..7f05e6e 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/AmbiguousFieldException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/AmbiguousFieldException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.query.exception;
+package org.apache.tajo.engine.query.exception;
 
 public class AmbiguousFieldException extends InvalidQueryException {
 	private static final long serialVersionUID = 3102675985226352347L;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidCastException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidCastException.java
index 9732391..d1aa8dd 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidCastException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidCastException.java
@@ -19,9 +19,9 @@
 /**
  * 
  */
-package tajo.engine.query.exception;
+package org.apache.tajo.engine.query.exception;
 
-import tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
 
 public class InvalidCastException extends InvalidQueryException {
 	private static final long serialVersionUID = -5090530469575858320L;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidEvalException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidEvalException.java
index 121f89b..0e75d8a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidEvalException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidEvalException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.query.exception;
+package org.apache.tajo.engine.query.exception;
 
 public class InvalidEvalException extends InvalidQueryException {
 	private static final long serialVersionUID = -2897003028483298256L;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidQueryException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidQueryException.java
index 2f723e2..5673c5f 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidQueryException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/InvalidQueryException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.query.exception;
+package org.apache.tajo.engine.query.exception;
 
 public class InvalidQueryException extends RuntimeException {
 	private static final long serialVersionUID = -7085849718839416246L;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/NotSupportQueryException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/NotSupportQueryException.java
index 2fdf3ef..c60aa1f 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/NotSupportQueryException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/NotSupportQueryException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.query.exception;
+package org.apache.tajo.engine.query.exception;
 
 
 public class NotSupportQueryException extends InvalidQueryException {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/TQLParseError.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/TQLParseError.java
index 3f1e873..b9db4d3 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/TQLParseError.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/TQLParseError.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.query.exception;
+package org.apache.tajo.engine.query.exception;
 
 
 @SuppressWarnings("UnusedDeclaration")
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/TQLSyntaxError.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/TQLSyntaxError.java
index e792562..b1fbc5b 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/TQLSyntaxError.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/TQLSyntaxError.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.query.exception;
+package org.apache.tajo.engine.query.exception;
 
 
 public class TQLSyntaxError extends InvalidQueryException {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/UndefinedFunctionException.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/UndefinedFunctionException.java
index a1c420e..c7f4e98 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/UndefinedFunctionException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/query/exception/UndefinedFunctionException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.query.exception;
+package org.apache.tajo.engine.query.exception;
 
 
 public class UndefinedFunctionException extends InvalidQueryException {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/ProtoUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/ProtoUtil.java
index 4b02187..93eca22 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/ProtoUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/ProtoUtil.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.engine.utils;
+package org.apache.tajo.engine.utils;
 
-import tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
 
 public class ProtoUtil {
   public static StringProto newProto(String val) {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/SchemaUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/SchemaUtil.java
index bde92c1..6e52b5c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/SchemaUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/SchemaUtil.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.engine.utils;
+package org.apache.tajo.engine.utils;
 
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.engine.parser.QueryBlock;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.engine.parser.QueryBlock;
 
 import java.util.Collection;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/ThreadUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/ThreadUtil.java
index 92b5ba5..23b1e5d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/ThreadUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/ThreadUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.utils;
+package org.apache.tajo.engine.utils;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/TupleUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/TupleUtil.java
index be4a595..a042fe8 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/TupleUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/engine/utils/TupleUtil.java
@@ -16,26 +16,26 @@
  * limitations under the License.
  */
 
-package tajo.engine.utils;
+package org.apache.tajo.engine.utils;
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.Maps;
 import org.apache.commons.codec.binary.Base64;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.statistics.ColumnStat;
-import tajo.datum.*;
-import tajo.engine.planner.PlannerUtil;
-import tajo.storage.RowStoreUtil;
-import tajo.storage.Tuple;
-import tajo.storage.TupleRange;
-import tajo.storage.VTuple;
-import tajo.util.Bytes;
-import tajo.worker.dataserver.HttpUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.statistics.ColumnStat;
+import org.apache.tajo.datum.*;
+import org.apache.tajo.engine.planner.PlannerUtil;
+import org.apache.tajo.storage.RowStoreUtil;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.TupleRange;
+import org.apache.tajo.storage.VTuple;
+import org.apache.tajo.util.Bytes;
+import org.apache.tajo.worker.dataserver.HttpUtil;
 
 import java.io.UnsupportedEncodingException;
 import java.net.URLDecoder;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/ipc/protocolrecords/QueryUnitRequest.java tajo-core/tajo-core-backend/src/main/java/tajo/ipc/protocolrecords/QueryUnitRequest.java
index 6c75186..880110d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/ipc/protocolrecords/QueryUnitRequest.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/ipc/protocolrecords/QueryUnitRequest.java
@@ -19,13 +19,13 @@
 /**
  * 
  */
-package tajo.ipc.protocolrecords;
+package org.apache.tajo.ipc.protocolrecords;
 
-import tajo.QueryUnitAttemptId;
-import tajo.common.ProtoObject;
-import tajo.engine.MasterWorkerProtos.Fetch;
-import tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
-import tajo.storage.Fragment;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.common.ProtoObject;
+import org.apache.tajo.engine.MasterWorkerProtos.Fetch;
+import org.apache.tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
+import org.apache.tajo.storage.Fragment;
 
 import java.net.URI;
 import java.util.List;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/ClientService.java tajo-core/tajo-core-backend/src/main/java/tajo/master/ClientService.java
index 296dfef..6da82cb 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/ClientService.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/ClientService.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import com.google.protobuf.RpcController;
 import com.google.protobuf.ServiceException;
@@ -28,26 +28,26 @@ import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.net.NetUtils;
 import org.apache.hadoop.yarn.proto.YarnProtos.ApplicationAttemptIdProto;
 import org.apache.hadoop.yarn.service.AbstractService;
-import tajo.QueryId;
-import tajo.TajoProtos;
-import tajo.catalog.*;
-import tajo.catalog.exception.AlreadyExistsTableException;
-import tajo.catalog.exception.NoSuchTableException;
-import tajo.catalog.proto.CatalogProtos.TableDescProto;
-import tajo.catalog.statistics.TableStat;
-import tajo.client.ClientProtocol;
-import tajo.client.ClientProtocol.*;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.master.TajoMaster.MasterContext;
-import tajo.master.event.QueryEvent;
-import tajo.master.event.QueryEventType;
-import tajo.rpc.ProtoBlockingRpcServer;
-import tajo.rpc.RemoteException;
-import tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto;
-import tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
-import tajo.storage.StorageUtil;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.TajoProtos;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.exception.AlreadyExistsTableException;
+import org.apache.tajo.catalog.exception.NoSuchTableException;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableDescProto;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.client.ClientProtocol;
+import org.apache.tajo.client.ClientProtocol.*;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.master.TajoMaster.MasterContext;
+import org.apache.tajo.master.event.QueryEvent;
+import org.apache.tajo.master.event.QueryEventType;
+import org.apache.tajo.rpc.ProtoBlockingRpcServer;
+import org.apache.tajo.rpc.RemoteException;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
+import org.apache.tajo.storage.StorageUtil;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
@@ -89,7 +89,7 @@ public class ClientService extends AbstractService {
     server.start();
     bindAddress = server.getBindAddress();
     this.conf.setVar(ConfVars.CLIENT_SERVICE_ADDRESS,
-        tajo.util.NetUtils.getIpPortString(bindAddress));
+        org.apache.tajo.util.NetUtils.getIpPortString(bindAddress));
     LOG.info("Instantiated ClientService at " + this.bindAddress);
     super.start();
   }
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/ExecutionBlock.java tajo-core/tajo-core-backend/src/main/java/tajo/master/ExecutionBlock.java
index 04d3bc7..676fec3 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/ExecutionBlock.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/ExecutionBlock.java
@@ -12,12 +12,12 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import com.google.common.base.Preconditions;
-import tajo.SubQueryId;
-import tajo.catalog.Schema;
-import tajo.engine.planner.logical.*;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.engine.planner.logical.*;
 
 import java.util.*;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/ExecutionBlockCursor.java tajo-core/tajo-core-backend/src/main/java/tajo/master/ExecutionBlockCursor.java
index 89e2a5b..160584c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/ExecutionBlockCursor.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/ExecutionBlockCursor.java
@@ -12,9 +12,9 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
-import tajo.engine.planner.global.MasterPlan;
+import org.apache.tajo.engine.planner.global.MasterPlan;
 
 import java.util.ArrayList;
 import java.util.Iterator;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalEngine.java tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalEngine.java
index 255e500..7fdaf11 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalEngine.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalEngine.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -32,32 +32,32 @@ import org.apache.hadoop.yarn.factories.RecordFactory;
 import org.apache.hadoop.yarn.factory.providers.RecordFactoryProvider;
 import org.apache.hadoop.yarn.service.AbstractService;
 import org.apache.hadoop.yarn.util.Records;
-import tajo.QueryConf;
-import tajo.QueryId;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableDesc;
-import tajo.catalog.TableMeta;
-import tajo.catalog.statistics.TableStat;
-import tajo.engine.exception.EmptyClusterException;
-import tajo.engine.exception.IllegalQueryStatusException;
-import tajo.engine.exception.NoSuchQueryIdException;
-import tajo.engine.exception.UnknownWorkerException;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.parser.StatementType;
-import tajo.engine.planner.LogicalOptimizer;
-import tajo.engine.planner.LogicalPlanner;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.global.GlobalOptimizer;
-import tajo.engine.planner.global.MasterPlan;
-import tajo.engine.planner.logical.CreateTableNode;
-import tajo.engine.planner.logical.ExprType;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.logical.LogicalRootNode;
-import tajo.engine.query.exception.TQLSyntaxError;
-import tajo.master.TajoMaster.MasterContext;
-import tajo.storage.StorageManager;
-import tajo.storage.StorageUtil;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.QueryConf;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.engine.exception.EmptyClusterException;
+import org.apache.tajo.engine.exception.IllegalQueryStatusException;
+import org.apache.tajo.engine.exception.NoSuchQueryIdException;
+import org.apache.tajo.engine.exception.UnknownWorkerException;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.parser.StatementType;
+import org.apache.tajo.engine.planner.LogicalOptimizer;
+import org.apache.tajo.engine.planner.LogicalPlanner;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.global.GlobalOptimizer;
+import org.apache.tajo.engine.planner.global.MasterPlan;
+import org.apache.tajo.engine.planner.logical.CreateTableNode;
+import org.apache.tajo.engine.planner.logical.ExprType;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.logical.LogicalRootNode;
+import org.apache.tajo.engine.query.exception.TQLSyntaxError;
+import org.apache.tajo.master.TajoMaster.MasterContext;
+import org.apache.tajo.storage.StorageManager;
+import org.apache.tajo.storage.StorageUtil;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalPlanner.java tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalPlanner.java
index b9fb587..f94c7cd 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalPlanner.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalPlanner.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import com.google.common.annotations.VisibleForTesting;
 import com.google.common.base.Preconditions;
@@ -27,24 +27,24 @@ import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.yarn.event.EventHandler;
 import org.jboss.netty.handler.codec.http.QueryStringDecoder;
-import tajo.QueryId;
-import tajo.QueryIdFactory;
-import tajo.QueryUnitAttemptId;
-import tajo.SubQueryId;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.common.exception.NotImplementedException;
-import tajo.conf.TajoConf;
-import tajo.engine.parser.QueryBlock.FromTable;
-import tajo.engine.planner.PlannerUtil;
-import tajo.engine.planner.global.MasterPlan;
-import tajo.engine.planner.logical.*;
-import tajo.engine.utils.TupleUtil;
-import tajo.master.ExecutionBlock.PartitionType;
-import tajo.storage.Fragment;
-import tajo.storage.StorageManager;
-import tajo.storage.TupleRange;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.common.exception.NotImplementedException;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.engine.parser.QueryBlock.FromTable;
+import org.apache.tajo.engine.planner.PlannerUtil;
+import org.apache.tajo.engine.planner.global.MasterPlan;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.engine.utils.TupleUtil;
+import org.apache.tajo.master.ExecutionBlock.PartitionType;
+import org.apache.tajo.storage.Fragment;
+import org.apache.tajo.storage.StorageManager;
+import org.apache.tajo.storage.TupleRange;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalPlannerUtils.java tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalPlannerUtils.java
index 1ecfa0e..0400546 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalPlannerUtils.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/GlobalPlannerUtils.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.parser.QueryBlock;
-import tajo.engine.planner.logical.GroupbyNode;
-import tajo.engine.planner.logical.ScanNode;
-import tajo.engine.planner.logical.StoreTableNode;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.parser.QueryBlock;
+import org.apache.tajo.engine.planner.logical.GroupbyNode;
+import org.apache.tajo.engine.planner.logical.ScanNode;
+import org.apache.tajo.engine.planner.logical.StoreTableNode;
 
 import java.util.Collection;
 import java.util.Comparator;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/Query.java tajo-core/tajo-core-backend/src/main/java/tajo/master/Query.java
index d740cbd..7df379b 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/Query.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/Query.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import com.google.common.collect.Maps;
 import org.apache.commons.logging.Log;
@@ -27,23 +27,23 @@ import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.yarn.Clock;
 import org.apache.hadoop.yarn.event.EventHandler;
 import org.apache.hadoop.yarn.state.*;
-import tajo.QueryConf;
-import tajo.QueryId;
-import tajo.SubQueryId;
-import tajo.TajoProtos.QueryState;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableDesc;
-import tajo.catalog.TableDescImpl;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.planner.global.MasterPlan;
-import tajo.engine.planner.logical.ExprType;
-import tajo.engine.planner.logical.IndexWriteNode;
-import tajo.master.QueryMaster.QueryContext;
-import tajo.master.event.*;
-import tajo.storage.StorageManager;
-import tajo.util.IndexUtil;
+import org.apache.tajo.QueryConf;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.TajoProtos.QueryState;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.TableDescImpl;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.planner.global.MasterPlan;
+import org.apache.tajo.engine.planner.logical.ExprType;
+import org.apache.tajo.engine.planner.logical.IndexWriteNode;
+import org.apache.tajo.master.QueryMaster.QueryContext;
+import org.apache.tajo.master.event.*;
+import org.apache.tajo.storage.StorageManager;
+import org.apache.tajo.util.IndexUtil;
 
 import java.io.IOException;
 import java.util.ArrayList;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryMaster.java tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryMaster.java
index 8891861..6d20ff1 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryMaster.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryMaster.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import org.apache.commons.lang.exception.ExceptionUtils;
 import org.apache.commons.logging.Log;
@@ -37,17 +37,17 @@ import org.apache.hadoop.yarn.event.EventHandler;
 import org.apache.hadoop.yarn.ipc.YarnRPC;
 import org.apache.hadoop.yarn.service.CompositeService;
 import org.apache.hadoop.yarn.service.Service;
-import tajo.*;
-import tajo.catalog.CatalogService;
-import tajo.conf.TajoConf;
-import tajo.engine.planner.global.MasterPlan;
-import tajo.master.TajoMaster.MasterContext;
-import tajo.master.TaskRunnerLauncherImpl.Container;
-import tajo.master.event.*;
-import tajo.master.rm.RMContainerAllocator;
-import tajo.storage.StorageManager;
-import tajo.storage.StorageUtil;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.*;
+import org.apache.tajo.catalog.CatalogService;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.engine.planner.global.MasterPlan;
+import org.apache.tajo.master.TajoMaster.MasterContext;
+import org.apache.tajo.master.TaskRunnerLauncherImpl.Container;
+import org.apache.tajo.master.event.*;
+import org.apache.tajo.master.rm.RMContainerAllocator;
+import org.apache.tajo.storage.StorageManager;
+import org.apache.tajo.storage.StorageUtil;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryUnit.java tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryUnit.java
index 38771e7..8489e6c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryUnit.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryUnit.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.Maps;
@@ -25,15 +25,15 @@ import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.yarn.event.EventHandler;
 import org.apache.hadoop.yarn.state.*;
-import tajo.QueryIdFactory;
-import tajo.QueryUnitAttemptId;
-import tajo.QueryUnitId;
-import tajo.catalog.Schema;
-import tajo.catalog.statistics.TableStat;
-import tajo.engine.MasterWorkerProtos.Partition;
-import tajo.engine.planner.logical.*;
-import tajo.master.event.*;
-import tajo.storage.Fragment;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.QueryUnitId;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.engine.MasterWorkerProtos.Partition;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.master.event.*;
+import org.apache.tajo.storage.Fragment;
 
 import java.net.URI;
 import java.net.URISyntaxException;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryUnitAttempt.java tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryUnitAttempt.java
index c4dfae3..cf95a9e 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryUnitAttempt.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/QueryUnitAttempt.java
@@ -16,21 +16,21 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.yarn.event.EventHandler;
 import org.apache.hadoop.yarn.state.*;
 import org.apache.hadoop.yarn.util.RackResolver;
-import tajo.QueryUnitAttemptId;
-import tajo.TajoProtos.TaskAttemptState;
-import tajo.catalog.statistics.TableStat;
-import tajo.engine.MasterWorkerProtos.Partition;
-import tajo.engine.MasterWorkerProtos.TaskCompletionReport;
-import tajo.master.QueryUnit.IntermediateEntry;
-import tajo.master.event.*;
-import tajo.master.event.TaskSchedulerEvent.EventType;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.TajoProtos.TaskAttemptState;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.engine.MasterWorkerProtos.Partition;
+import org.apache.tajo.engine.MasterWorkerProtos.TaskCompletionReport;
+import org.apache.tajo.master.QueryUnit.IntermediateEntry;
+import org.apache.tajo.master.event.*;
+import org.apache.tajo.master.event.TaskSchedulerEvent.EventType;
 
 import java.util.*;
 import java.util.concurrent.locks.Lock;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java
index 51aff94..9dca9ff 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java
@@ -16,28 +16,28 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.fs.Path;
-import tajo.QueryIdFactory;
-import tajo.SubQueryId;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.statistics.TableStat;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.engine.planner.PlannerUtil;
-import tajo.engine.planner.RangePartitionAlgorithm;
-import tajo.engine.planner.UniformRangePartition;
-import tajo.engine.planner.logical.*;
-import tajo.engine.utils.TupleUtil;
-import tajo.exception.InternalException;
-import tajo.master.ExecutionBlock.PartitionType;
-import tajo.master.QueryUnit.IntermediateEntry;
-import tajo.storage.Fragment;
-import tajo.storage.TupleRange;
-import tajo.util.TUtil;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.engine.planner.PlannerUtil;
+import org.apache.tajo.engine.planner.RangePartitionAlgorithm;
+import org.apache.tajo.engine.planner.UniformRangePartition;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.engine.utils.TupleUtil;
+import org.apache.tajo.exception.InternalException;
+import org.apache.tajo.master.ExecutionBlock.PartitionType;
+import org.apache.tajo.master.QueryUnit.IntermediateEntry;
+import org.apache.tajo.storage.Fragment;
+import org.apache.tajo.storage.TupleRange;
+import org.apache.tajo.util.TUtil;
 
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/SubQuery.java tajo-core/tajo-core-backend/src/main/java/tajo/master/SubQuery.java
index 398e1ae..f240732 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/SubQuery.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/SubQuery.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.Lists;
@@ -32,26 +32,26 @@ import org.apache.hadoop.yarn.event.EventHandler;
 import org.apache.hadoop.yarn.factory.providers.RecordFactoryProvider;
 import org.apache.hadoop.yarn.state.*;
 import org.apache.hadoop.yarn.util.Records;
-import tajo.QueryIdFactory;
-import tajo.QueryUnitId;
-import tajo.SubQueryId;
-import tajo.catalog.CatalogService;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableDesc;
-import tajo.catalog.TableMeta;
-import tajo.catalog.statistics.ColumnStat;
-import tajo.catalog.statistics.StatisticsUtil;
-import tajo.catalog.statistics.TableStat;
-import tajo.conf.TajoConf;
-import tajo.engine.planner.PlannerUtil;
-import tajo.engine.planner.logical.ExprType;
-import tajo.engine.planner.logical.GroupbyNode;
-import tajo.engine.planner.logical.ScanNode;
-import tajo.engine.planner.logical.StoreTableNode;
-import tajo.master.QueryMaster.QueryContext;
-import tajo.master.event.*;
-import tajo.storage.Fragment;
-import tajo.storage.StorageManager;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.QueryUnitId;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.catalog.CatalogService;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.statistics.ColumnStat;
+import org.apache.tajo.catalog.statistics.StatisticsUtil;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.engine.planner.PlannerUtil;
+import org.apache.tajo.engine.planner.logical.ExprType;
+import org.apache.tajo.engine.planner.logical.GroupbyNode;
+import org.apache.tajo.engine.planner.logical.ScanNode;
+import org.apache.tajo.engine.planner.logical.StoreTableNode;
+import org.apache.tajo.master.QueryMaster.QueryContext;
+import org.apache.tajo.master.event.*;
+import org.apache.tajo.storage.Fragment;
+import org.apache.tajo.storage.StorageManager;
 
 import java.io.IOException;
 import java.util.*;
@@ -61,7 +61,7 @@ import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReadWriteLock;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 
-import static tajo.conf.TajoConf.ConfVars;
+import static org.apache.tajo.conf.TajoConf.ConfVars;
 
 
 /**
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/SubQueryState.java tajo-core/tajo-core-backend/src/main/java/tajo/master/SubQueryState.java
index 673f1df..525daea 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/SubQueryState.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/SubQueryState.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 public enum SubQueryState {
   NEW,
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/TajoMaster.java tajo-core/tajo-core-backend/src/main/java/tajo/master/TajoMaster.java
index 66f4446..2aa95fe 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/TajoMaster.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/TajoMaster.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import com.google.common.collect.Maps;
 import com.google.protobuf.ServiceException;
@@ -36,25 +36,25 @@ import org.apache.hadoop.yarn.ipc.YarnRPC;
 import org.apache.hadoop.yarn.service.CompositeService;
 import org.apache.hadoop.yarn.service.Service;
 import org.apache.hadoop.yarn.util.RackResolver;
-import tajo.QueryId;
-import tajo.QueryIdFactory;
-import tajo.TajoConstants;
-import tajo.catalog.CatalogServer;
-import tajo.catalog.CatalogService;
-import tajo.catalog.FunctionDesc;
-import tajo.catalog.LocalCatalog;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.engine.MasterWorkerProtos.TaskStatusProto;
-import tajo.engine.function.Country;
-import tajo.engine.function.InCountry;
-import tajo.engine.function.builtin.*;
-import tajo.master.event.QueryEvent;
-import tajo.master.event.QueryEventType;
-import tajo.storage.StorageManager;
-import tajo.webapp.StaticHttpServer;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.TajoConstants;
+import org.apache.tajo.catalog.CatalogServer;
+import org.apache.tajo.catalog.CatalogService;
+import org.apache.tajo.catalog.FunctionDesc;
+import org.apache.tajo.catalog.LocalCatalog;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.engine.MasterWorkerProtos.TaskStatusProto;
+import org.apache.tajo.engine.function.Country;
+import org.apache.tajo.engine.function.InCountry;
+import org.apache.tajo.engine.function.builtin.*;
+import org.apache.tajo.master.event.QueryEvent;
+import org.apache.tajo.master.event.QueryEventType;
+import org.apache.tajo.storage.StorageManager;
+import org.apache.tajo.webapp.StaticHttpServer;
 
 import java.util.ArrayList;
 import java.util.Collection;
@@ -106,7 +106,7 @@ public class TajoMaster extends CompositeService {
 
       QueryIdFactory.reset();
 
-      // Get the tajo base dir
+      // Get the org.apache.tajo base dir
       this.basePath = new Path(conf.getVar(ConfVars.ROOT_DIR));
       LOG.info("Tajo Root dir is set " + basePath);
       // Get default DFS uri from the base dir
@@ -121,7 +121,7 @@ public class TajoMaster extends CompositeService {
 
       this.storeManager = new StorageManager(conf);
 
-      // Get the tajo data warehouse dir
+      // Get the org.apache.tajo data warehouse dir
       this.wareHousePath = new Path(basePath, TajoConstants.WAREHOUSE_DIR);
       LOG.info("Tajo Warehouse dir is set to " + wareHousePath);
       if (!defaultFS.exists(wareHousePath)) {
@@ -135,11 +135,11 @@ public class TajoMaster extends CompositeService {
       addIfService(dispatcher);
 
       // The below is some mode-dependent codes
-      // If tajo is local mode
+      // If org.apache.tajo is local mode
       final boolean mode = conf.getBoolVar(ConfVars.CLUSTER_DISTRIBUTED);
       if (!mode) {
         LOG.info("Enabled Pseudo Distributed Mode");
-      } else { // if tajo is distributed mode
+      } else { // if org.apache.tajo is distributed mode
         LOG.info("Enabled Distributed Mode");
       }
       // This is temporal solution of the above problem.
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerEvent.java
index 4cadebb..7ce2d1c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerEvent.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import org.apache.hadoop.yarn.api.records.Container;
 import org.apache.hadoop.yarn.api.records.ContainerId;
 import org.apache.hadoop.yarn.api.records.ContainerToken;
 import org.apache.hadoop.yarn.api.records.NodeId;
 import org.apache.hadoop.yarn.event.AbstractEvent;
-import tajo.SubQueryId;
-import tajo.master.TaskRunnerEvent.EventType;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.master.TaskRunnerEvent.EventType;
 
 public abstract class TaskRunnerEvent extends AbstractEvent<EventType> {
   public enum EventType {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncher.java tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncher.java
index 9cbad6b..8ae76f3 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncher.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncher.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import org.apache.hadoop.yarn.event.EventHandler;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java
index c22e3b4..65cc105 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -43,14 +43,14 @@ import org.apache.hadoop.yarn.util.BuilderUtils;
 import org.apache.hadoop.yarn.util.ConverterUtils;
 import org.apache.hadoop.yarn.util.ProtoUtils;
 import org.apache.hadoop.yarn.util.Records;
-import tajo.QueryConf;
-import tajo.conf.TajoConf;
-import tajo.master.QueryMaster.QueryContext;
-import tajo.master.TaskRunnerEvent.EventType;
-import tajo.master.event.QueryEvent;
-import tajo.master.event.QueryEventType;
-import tajo.master.event.TaskRunnerLaunchEvent;
-import tajo.pullserver.PullServerAuxService;
+import org.apache.tajo.QueryConf;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.master.QueryMaster.QueryContext;
+import org.apache.tajo.master.TaskRunnerEvent.EventType;
+import org.apache.tajo.master.event.QueryEvent;
+import org.apache.tajo.master.event.QueryEventType;
+import org.apache.tajo.master.event.TaskRunnerLaunchEvent;
+import org.apache.tajo.pullserver.PullServerAuxService;
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
@@ -161,9 +161,9 @@ public class TaskRunnerLauncherImpl extends AbstractService implements TaskRunne
     environment.put(Environment.SHELL.name(), "/bin/bash");
     environment.put(Environment.JAVA_HOME.name(), System.getenv(Environment.JAVA_HOME.name()));
 
-    // TODO - to be improved with tajo.sh shell script
+    // TODO - to be improved with org.apache.tajo.sh shell script
     Properties prop = System.getProperties();
-    if (prop.getProperty("tajo.test", "FALSE").equalsIgnoreCase("TRUE")) {
+    if (prop.getProperty("org.apache.tajo.test", "FALSE").equalsIgnoreCase("TRUE")) {
       environment.put(Environment.CLASSPATH.name(), prop.getProperty(
           "java.class.path", null));
     } else {
@@ -284,7 +284,7 @@ public class TaskRunnerLauncherImpl extends AbstractService implements TaskRunne
     //vargs.add("-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005");
     //}
     // Set class name
-    vargs.add("tajo.worker.TaskRunner");
+    vargs.add("org.apache.tajo.worker.TaskRunner");
     vargs.add(taskListenerHost); // tasklistener hostname
     vargs.add(String.valueOf(taskListenerPort)); // tasklistener hostname
     vargs.add(event.getSubQueryId().toString()); // subqueryId
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerListener.java tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerListener.java
index 661b458..ce16897 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerListener.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerListener.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import com.google.protobuf.RpcCallback;
 import com.google.protobuf.RpcController;
@@ -26,22 +26,22 @@ import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.yarn.api.records.impl.pb.ContainerIdPBImpl;
 import org.apache.hadoop.yarn.proto.YarnProtos.ContainerIdProto;
 import org.apache.hadoop.yarn.service.AbstractService;
-import tajo.QueryUnitAttemptId;
-import tajo.TajoIdProtos.QueryUnitAttemptIdProto;
-import tajo.conf.TajoConf;
-import tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
-import tajo.engine.MasterWorkerProtos.TaskCompletionReport;
-import tajo.engine.MasterWorkerProtos.TaskFatalErrorReport;
-import tajo.engine.MasterWorkerProtos.TaskStatusProto;
-import tajo.ipc.MasterWorkerProtocol;
-import tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService;
-import tajo.master.QueryMaster.QueryContext;
-import tajo.master.event.TaskAttemptStatusUpdateEvent;
-import tajo.master.event.TaskCompletionEvent;
-import tajo.master.event.TaskFatalErrorEvent;
-import tajo.master.event.TaskRequestEvent;
-import tajo.rpc.ProtoAsyncRpcServer;
-import tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.TajoIdProtos.QueryUnitAttemptIdProto;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
+import org.apache.tajo.engine.MasterWorkerProtos.TaskCompletionReport;
+import org.apache.tajo.engine.MasterWorkerProtos.TaskFatalErrorReport;
+import org.apache.tajo.engine.MasterWorkerProtos.TaskStatusProto;
+import org.apache.tajo.ipc.MasterWorkerProtocol;
+import org.apache.tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService;
+import org.apache.tajo.master.QueryMaster.QueryContext;
+import org.apache.tajo.master.event.TaskAttemptStatusUpdateEvent;
+import org.apache.tajo.master.event.TaskCompletionEvent;
+import org.apache.tajo.master.event.TaskFatalErrorEvent;
+import org.apache.tajo.master.event.TaskRequestEvent;
+import org.apache.tajo.rpc.ProtoAsyncRpcServer;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto;
 
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
@@ -50,14 +50,14 @@ public class TaskRunnerListener extends AbstractService
     implements MasterWorkerProtocolService.Interface {
   
   private final static Log LOG = LogFactory.getLog(
-      tajo.master.cluster.WorkerListener.class);
+      org.apache.tajo.master.cluster.WorkerListener.class);
   private QueryContext context;
   private ProtoAsyncRpcServer rpcServer;
   private InetSocketAddress bindAddr;
   private String addr;
   
   public TaskRunnerListener(final QueryContext context) throws Exception {
-    super(tajo.master.cluster.WorkerListener.class.getName());
+    super(org.apache.tajo.master.cluster.WorkerListener.class.getName());
     this.context = context;
 
 
@@ -99,7 +99,7 @@ public class TaskRunnerListener extends AbstractService
     }
 
     // Get the master address
-    LOG.info(tajo.master.cluster.WorkerListener.class.getSimpleName() + " is bind to " + addr);
+    LOG.info(org.apache.tajo.master.cluster.WorkerListener.class.getSimpleName() + " is bind to " + addr);
     context.getConf().setVar(TajoConf.ConfVars.TASKRUNNER_LISTENER_ADDRESS, addr);
 
     super.init(conf);
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskScheduler.java tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskScheduler.java
index e4218f0..e8b4a52 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskScheduler.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskScheduler.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import org.apache.hadoop.yarn.event.EventHandler;
-import tajo.master.event.TaskSchedulerEvent;
+import org.apache.tajo.master.event.TaskSchedulerEvent;
 
 public interface TaskScheduler extends EventHandler<TaskSchedulerEvent> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java
index 816e285..fecde54 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import com.google.common.collect.Lists;
 import org.apache.commons.logging.Log;
@@ -26,23 +26,23 @@ import org.apache.hadoop.yarn.event.AsyncDispatcher;
 import org.apache.hadoop.yarn.event.EventHandler;
 import org.apache.hadoop.yarn.service.AbstractService;
 import org.apache.hadoop.yarn.util.RackResolver;
-import tajo.QueryIdFactory;
-import tajo.QueryUnitAttemptId;
-import tajo.SubQueryId;
-import tajo.engine.MasterWorkerProtos;
-import tajo.engine.planner.logical.ScanNode;
-import tajo.engine.query.QueryUnitRequestImpl;
-import tajo.ipc.protocolrecords.QueryUnitRequest;
-import tajo.master.QueryMaster.QueryContext;
-import tajo.master.TaskRunnerLauncherImpl.Container;
-import tajo.master.event.TaskAttemptAssignedEvent;
-import tajo.master.event.TaskRequestEvent;
-import tajo.master.event.TaskRequestEvent.TaskRequestEventType;
-import tajo.master.event.TaskScheduleEvent;
-import tajo.master.event.TaskSchedulerEvent;
-import tajo.master.event.TaskSchedulerEvent.EventType;
-import tajo.storage.Fragment;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.engine.MasterWorkerProtos;
+import org.apache.tajo.engine.planner.logical.ScanNode;
+import org.apache.tajo.engine.query.QueryUnitRequestImpl;
+import org.apache.tajo.ipc.protocolrecords.QueryUnitRequest;
+import org.apache.tajo.master.QueryMaster.QueryContext;
+import org.apache.tajo.master.TaskRunnerLauncherImpl.Container;
+import org.apache.tajo.master.event.TaskAttemptAssignedEvent;
+import org.apache.tajo.master.event.TaskRequestEvent;
+import org.apache.tajo.master.event.TaskRequestEvent.TaskRequestEventType;
+import org.apache.tajo.master.event.TaskScheduleEvent;
+import org.apache.tajo.master.event.TaskSchedulerEvent;
+import org.apache.tajo.master.event.TaskSchedulerEvent.EventType;
+import org.apache.tajo.storage.Fragment;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.net.URI;
 import java.util.*;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskState.java tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskState.java
index 52ed276..67d2ebc 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskState.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskState.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 public enum TaskState {
   NEW, SCHEDULED, RUNNING, SUCCEEDED, FAILED, KILL_WAIT, KILLED;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/cluster/ServerName.java tajo-core/tajo-core-backend/src/main/java/tajo/master/cluster/ServerName.java
index 0e87e67..028af65 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/cluster/ServerName.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/cluster/ServerName.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master.cluster;
+package org.apache.tajo.master.cluster;
 
 public class ServerName implements Comparable<ServerName> {
   /**
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/cluster/WorkerListener.java tajo-core/tajo-core-backend/src/main/java/tajo/master/cluster/WorkerListener.java
index 43fc1d0..b5bb84c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/cluster/WorkerListener.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/cluster/WorkerListener.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master.cluster;
+package org.apache.tajo.master.cluster;
 
 import com.google.protobuf.RpcCallback;
 import com.google.protobuf.RpcController;
@@ -26,22 +26,22 @@ import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.net.NetUtils;
 import org.apache.hadoop.yarn.proto.YarnProtos.ContainerIdProto;
 import org.apache.hadoop.yarn.service.AbstractService;
-import tajo.QueryUnitAttemptId;
-import tajo.TajoIdProtos.QueryUnitAttemptIdProto;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
-import tajo.engine.MasterWorkerProtos.TaskCompletionReport;
-import tajo.engine.MasterWorkerProtos.TaskFatalErrorReport;
-import tajo.engine.MasterWorkerProtos.TaskStatusProto;
-import tajo.ipc.MasterWorkerProtocol;
-import tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService;
-import tajo.master.TajoMaster.MasterContext;
-import tajo.master.event.TaskAttemptStatusUpdateEvent;
-import tajo.master.event.TaskCompletionEvent;
-import tajo.master.event.TaskFatalErrorEvent;
-import tajo.rpc.ProtoAsyncRpcServer;
-import tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.TajoIdProtos.QueryUnitAttemptIdProto;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
+import org.apache.tajo.engine.MasterWorkerProtos.TaskCompletionReport;
+import org.apache.tajo.engine.MasterWorkerProtos.TaskFatalErrorReport;
+import org.apache.tajo.engine.MasterWorkerProtos.TaskStatusProto;
+import org.apache.tajo.ipc.MasterWorkerProtocol;
+import org.apache.tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService;
+import org.apache.tajo.master.TajoMaster.MasterContext;
+import org.apache.tajo.master.event.TaskAttemptStatusUpdateEvent;
+import org.apache.tajo.master.event.TaskCompletionEvent;
+import org.apache.tajo.master.event.TaskFatalErrorEvent;
+import org.apache.tajo.rpc.ProtoAsyncRpcServer;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto;
 
 import java.net.InetSocketAddress;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerAllocationEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerAllocationEvent.java
index f5d9a49..6704aa4 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerAllocationEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerAllocationEvent.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.api.records.Priority;
 import org.apache.hadoop.yarn.api.records.Resource;
 import org.apache.hadoop.yarn.event.AbstractEvent;
-import tajo.SubQueryId;
+import org.apache.tajo.SubQueryId;
 
 public class ContainerAllocationEvent extends AbstractEvent<ContainerAllocatorEventType>  {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerAllocatorEventType.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerAllocatorEventType.java
index b8463b5..4d10efe 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerAllocatorEventType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerAllocatorEventType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 public enum ContainerAllocatorEventType {
   // producer: QueryUnitAttempt, consumer: ContainerAllocator
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerEvent.java
index e133d71..723ac1a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/ContainerEvent.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.api.records.ContainerId;
 import org.apache.hadoop.yarn.event.AbstractEvent;
-import tajo.master.event.ContainerEvent.EventType;
+import org.apache.tajo.master.event.ContainerEvent.EventType;
 
 public class ContainerEvent extends AbstractEvent<EventType> {
   public enum EventType {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/GrouppedContainerAllocatorEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/GrouppedContainerAllocatorEvent.java
index d352192..44abf30 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/GrouppedContainerAllocatorEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/GrouppedContainerAllocatorEvent.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.api.records.Priority;
 import org.apache.hadoop.yarn.api.records.Resource;
-import tajo.SubQueryId;
+import org.apache.tajo.SubQueryId;
 
 import java.util.Map;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryDiagnosticsUpdateEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryDiagnosticsUpdateEvent.java
index 1c123e6..a9191ac 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryDiagnosticsUpdateEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryDiagnosticsUpdateEvent.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
-import tajo.QueryId;
+import org.apache.tajo.QueryId;
 
 public class QueryDiagnosticsUpdateEvent extends QueryEvent {
   private final String msg;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryEvent.java
index 793b5df..a3b7667 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryEvent.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.event.AbstractEvent;
-import tajo.QueryId;
+import org.apache.tajo.QueryId;
 
 public class QueryEvent extends AbstractEvent<QueryEventType> {
   private final QueryId id;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryEventType.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryEventType.java
index 73c0445..e286d70 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryEventType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryEventType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 public enum QueryEventType {
   INIT,
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryFinishEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryFinishEvent.java
index d4625e1..9c81132 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryFinishEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QueryFinishEvent.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.event.AbstractEvent;
-import tajo.QueryId;
+import org.apache.tajo.QueryId;
 
 public class QueryFinishEvent extends AbstractEvent {
   public enum EventType {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QuerySubQueryEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QuerySubQueryEvent.java
index 9152875..10b67fe 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QuerySubQueryEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/QuerySubQueryEvent.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
-import tajo.SubQueryId;
+import org.apache.tajo.SubQueryId;
 
 public class QuerySubQueryEvent extends QueryEvent {
   private SubQueryId subQueryId;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryCompletedEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryCompletedEvent.java
index 345fc11..4032c67 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryCompletedEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryCompletedEvent.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
-import tajo.SubQueryId;
-import tajo.master.SubQueryState;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.master.SubQueryState;
 
 public class SubQueryCompletedEvent extends QueryEvent {
   private final SubQueryId subQueryId;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryContainerAllocationEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryContainerAllocationEvent.java
index 5eb197b..5c0ef9a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryContainerAllocationEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryContainerAllocationEvent.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.api.records.Container;
-import tajo.SubQueryId;
+import org.apache.tajo.SubQueryId;
 
 import java.util.List;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryEvent.java
index 92ee2dd..11470ed 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryEvent.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.event.AbstractEvent;
-import tajo.SubQueryId;
+import org.apache.tajo.SubQueryId;
 
 public class SubQueryEvent extends AbstractEvent<SubQueryEventType> {
   private final SubQueryId id;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryEventType.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryEventType.java
index 2c21411..bddd5ba 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryEventType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryEventType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 /**
  * Event Types handled by SubQuery
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQuerySucceeEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQuerySucceeEvent.java
index 2855b05..3191639 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQuerySucceeEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQuerySucceeEvent.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
-import tajo.SubQueryId;
-import tajo.catalog.TableMeta;
-import tajo.master.SubQueryState;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.master.SubQueryState;
 
 public class SubQuerySucceeEvent extends SubQueryCompletedEvent {
   private final TableMeta tableMeta;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryTaskEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryTaskEvent.java
index c50fd8d..0315236 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryTaskEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/SubQueryTaskEvent.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
-import tajo.QueryUnitId;
+import org.apache.tajo.QueryUnitId;
 
 /**
  * Event Class: From Task to SubQuery
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptAssignedEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptAssignedEvent.java
index 9fd0887..4934633 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptAssignedEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptAssignedEvent.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.api.records.ContainerId;
-import tajo.QueryUnitAttemptId;
+import org.apache.tajo.QueryUnitAttemptId;
 
 public class TaskAttemptAssignedEvent extends TaskAttemptEvent {
   private final ContainerId cId;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptEvent.java
index adedece..f2df144 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptEvent.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.event.AbstractEvent;
-import tajo.QueryUnitAttemptId;
+import org.apache.tajo.QueryUnitAttemptId;
 
 public class TaskAttemptEvent extends AbstractEvent<TaskAttemptEventType> {
   private final QueryUnitAttemptId id;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptEventType.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptEventType.java
index 5fa8bdf..d9d2f13 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptEventType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptEventType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 /**
  * Event types handled by TaskAttempt.
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptStatusUpdateEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptStatusUpdateEvent.java
index 027e5c2..6409b43 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptStatusUpdateEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskAttemptStatusUpdateEvent.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
-import tajo.QueryUnitAttemptId;
-import tajo.engine.MasterWorkerProtos.TaskStatusProto;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.engine.MasterWorkerProtos.TaskStatusProto;
 
 public class TaskAttemptStatusUpdateEvent extends TaskAttemptEvent {
   private final TaskStatusProto status;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskCompletionEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskCompletionEvent.java
index 7557916..b36d69c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskCompletionEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskCompletionEvent.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
-import tajo.QueryUnitAttemptId;
-import tajo.engine.MasterWorkerProtos.TaskCompletionReport;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.engine.MasterWorkerProtos.TaskCompletionReport;
 
 public class TaskCompletionEvent extends TaskAttemptEvent {
   private TaskCompletionReport report;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskEvent.java
index d848be2..234491b 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskEvent.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.event.AbstractEvent;
-import tajo.QueryUnitId;
+import org.apache.tajo.QueryUnitId;
 
 public class TaskEvent extends AbstractEvent<TaskEventType> {
   private final QueryUnitId id;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskEventType.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskEventType.java
index 144c13e..9448863 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskEventType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskEventType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 /**
  * Event types handled by Task.
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskFatalErrorEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskFatalErrorEvent.java
index 9d70c2d..3d1c78d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskFatalErrorEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskFatalErrorEvent.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
-import tajo.QueryUnitAttemptId;
-import tajo.engine.MasterWorkerProtos.TaskFatalErrorReport;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.engine.MasterWorkerProtos.TaskFatalErrorReport;
 
 public class TaskFatalErrorEvent extends TaskAttemptEvent {
   private TaskFatalErrorReport report;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRequestEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRequestEvent.java
index ee21447..25a8a14 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRequestEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRequestEvent.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import com.google.protobuf.RpcCallback;
 import org.apache.hadoop.yarn.api.records.ContainerId;
 import org.apache.hadoop.yarn.event.AbstractEvent;
-import tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
-import tajo.master.event.TaskRequestEvent.TaskRequestEventType;
+import org.apache.tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
+import org.apache.tajo.master.event.TaskRequestEvent.TaskRequestEventType;
 
 public class TaskRequestEvent extends AbstractEvent<TaskRequestEventType> {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRunnerLaunchEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRunnerLaunchEvent.java
index 2406b48..f74a751 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRunnerLaunchEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRunnerLaunchEvent.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.api.records.Container;
 import org.apache.hadoop.yarn.api.records.Resource;
-import tajo.SubQueryId;
-import tajo.master.TaskRunnerEvent;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.master.TaskRunnerEvent;
 
 public class TaskRunnerLaunchEvent extends TaskRunnerEvent {
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRunnerStopEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRunnerStopEvent.java
index 7e5a579..69e0a57 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRunnerStopEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskRunnerStopEvent.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.api.records.Container;
-import tajo.SubQueryId;
-import tajo.master.TaskRunnerEvent;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.master.TaskRunnerEvent;
 
 public class TaskRunnerStopEvent extends TaskRunnerEvent {
   public TaskRunnerStopEvent(SubQueryId subQueryId, Container container) {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskScheduleEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskScheduleEvent.java
index 95cd73c..03b2aba 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskScheduleEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskScheduleEvent.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
-import tajo.QueryUnitAttemptId;
+import org.apache.tajo.QueryUnitAttemptId;
 
 import java.util.Arrays;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskSchedulerEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskSchedulerEvent.java
index d7eb859..d73bb87 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskSchedulerEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskSchedulerEvent.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
 import org.apache.hadoop.yarn.event.AbstractEvent;
-import tajo.SubQueryId;
-import tajo.master.event.TaskSchedulerEvent.EventType;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.master.event.TaskSchedulerEvent.EventType;
 
 public class TaskSchedulerEvent extends AbstractEvent<EventType> {
   public enum EventType {
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskTAttemptEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskTAttemptEvent.java
index 5b89915..28654f0 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskTAttemptEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/event/TaskTAttemptEvent.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.master.event;
+package org.apache.tajo.master.event;
 
-import tajo.QueryUnitAttemptId;
+import org.apache.tajo.QueryUnitAttemptId;
 
 public class TaskTAttemptEvent extends TaskEvent {
   private final QueryUnitAttemptId attemptId;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java
index 0a1ad42..efea0ac 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.master.rm;
+package org.apache.tajo.master.rm;
 
 import com.google.common.collect.Lists;
 import org.apache.commons.logging.Log;
@@ -28,13 +28,13 @@ import org.apache.hadoop.yarn.api.records.*;
 import org.apache.hadoop.yarn.client.AMRMClientImpl;
 import org.apache.hadoop.yarn.event.EventHandler;
 import org.apache.hadoop.yarn.exceptions.YarnRemoteException;
-import tajo.SubQueryId;
-import tajo.TajoProtos.QueryState;
-import tajo.master.QueryMaster.QueryContext;
-import tajo.master.SubQueryState;
-import tajo.master.event.ContainerAllocationEvent;
-import tajo.master.event.ContainerAllocatorEventType;
-import tajo.master.event.SubQueryContainerAllocationEvent;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.TajoProtos.QueryState;
+import org.apache.tajo.master.QueryMaster.QueryContext;
+import org.apache.tajo.master.SubQueryState;
+import org.apache.tajo.master.event.ContainerAllocationEvent;
+import org.apache.tajo.master.event.ContainerAllocatorEventType;
+import org.apache.tajo.master.event.SubQueryContainerAllocationEvent;
 
 import java.util.HashMap;
 import java.util.List;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/net/CachedDNSResolver.java tajo-core/tajo-core-backend/src/main/java/tajo/net/CachedDNSResolver.java
index 74f0e86..2a53c47 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/net/CachedDNSResolver.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/net/CachedDNSResolver.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.net;
+package org.apache.tajo.net;
 
 import java.net.InetAddress;
 import java.net.UnknownHostException;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/ScheduleTaskEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/ScheduleTaskEvent.java
index b66918f..e1e074d 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/ScheduleTaskEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/ScheduleTaskEvent.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.scheduler.event;
+package org.apache.tajo.scheduler.event;
 
-import tajo.QueryUnitAttemptId;
+import org.apache.tajo.QueryUnitAttemptId;
 
 public class ScheduleTaskEvent extends SchedulerEvent {
   private final QueryUnitAttemptId attemptId;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/SchedulerEvent.java tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/SchedulerEvent.java
index 7f05883..664a2d6 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/SchedulerEvent.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/SchedulerEvent.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.scheduler.event;
+package org.apache.tajo.scheduler.event;
 
 import org.apache.hadoop.yarn.event.AbstractEvent;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/SchedulerEventType.java tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/SchedulerEventType.java
index 0d783f2..2e49c47 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/SchedulerEventType.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/scheduler/event/SchedulerEventType.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.scheduler.event;
+package org.apache.tajo.scheduler.event;
 
 /**
  * Event Type for Scheduler
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/util/GeoUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/util/GeoUtil.java
index 539b789..6028725 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/util/GeoUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/util/GeoUtil.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import com.maxmind.geoip.LookupService;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/util/IndexUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/util/IndexUtil.java
index 78fa487..883725c 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/util/IndexUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/util/IndexUtil.java
@@ -16,22 +16,22 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import com.google.gson.Gson;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
-import tajo.datum.Datum;
-import tajo.engine.eval.ConstEval;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.eval.EvalNode.Type;
-import tajo.engine.eval.EvalNodeVisitor;
-import tajo.engine.eval.FieldEval;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.planner.logical.IndexScanNode;
-import tajo.engine.planner.logical.ScanNode;
-import tajo.storage.Fragment;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.engine.eval.ConstEval;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.eval.EvalNode.Type;
+import org.apache.tajo.engine.eval.EvalNodeVisitor;
+import org.apache.tajo.engine.eval.FieldEval;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.planner.logical.IndexScanNode;
+import org.apache.tajo.engine.planner.logical.ScanNode;
+import org.apache.tajo.storage.Fragment;
 
 import java.util.Iterator;
 import java.util.LinkedList;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/webapp/HttpServer.java tajo-core/tajo-core-backend/src/main/java/tajo/webapp/HttpServer.java
index 5bdab13..08bb9a4 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/webapp/HttpServer.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/webapp/HttpServer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.webapp;
+package org.apache.tajo.webapp;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -79,7 +79,7 @@ public class HttpServer {
 
     webServer.addConnector(listener);
 
-    int maxThreads = conf.getInt("tajo.http.maxthreads", -1);
+    int maxThreads = conf.getInt("org.apache.tajo.http.maxthreads", -1);
     // If HTTP_MAX_THREADS is not configured, QueueThreadPool() will use the
     // default value (currently 250).
     QueuedThreadPool threadPool = maxThreads == -1 ? new QueuedThreadPool()
@@ -127,7 +127,7 @@ public class HttpServer {
   protected void addDefaultApps(ContextHandlerCollection parent,
       final String appDir, Configuration conf) throws IOException {
     // set up the context for "/logs/" if "hadoop.log.dir" property is defined.
-    String logDir = System.getProperty("tajo.log.dir");
+    String logDir = System.getProperty("org.apache.tajo.log.dir");
     if (logDir != null) {
       Context logContext = new Context(parent, "/logs");
       logContext.setResourceBase(logDir);
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/webapp/StaticHttpServer.java tajo-core/tajo-core-backend/src/main/java/tajo/webapp/StaticHttpServer.java
index f9eff48..e16aaa5 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/webapp/StaticHttpServer.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/webapp/StaticHttpServer.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.webapp;
+package org.apache.tajo.webapp;
 
 import org.apache.hadoop.conf.Configuration;
 import org.mortbay.jetty.Connector;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.master.TajoMaster;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.master.TajoMaster;
 
 import java.io.IOException;
 
@@ -51,10 +51,10 @@ public class StaticHttpServer extends HttpServer {
       
       instance = new StaticHttpServer(master, name, addr, port,
           findPort, connector, conf, pathSpecs);
-      instance.setAttribute("tajo.master", master);
-      instance.setAttribute("tajo.master.addr", addr);
-      instance.setAttribute("tajo.master.conf", conf);
-      instance.setAttribute("tajo.master.starttime", System.currentTimeMillis());
+      instance.setAttribute("org.apache.tajo.master", master);
+      instance.setAttribute("org.apache.tajo.master.addr", addr);
+      instance.setAttribute("org.apache.tajo.master.conf", conf);
+      instance.setAttribute("org.apache.tajo.master.starttime", System.currentTimeMillis());
     }
     return instance;
   }
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/Fetcher.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/Fetcher.java
index 6b0d4a2..4619fe4 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/Fetcher.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/Fetcher.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker;
+package org.apache.tajo.worker;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/InterDataRetriever.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/InterDataRetriever.java
index ae22a82..42ad875 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/InterDataRetriever.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/InterDataRetriever.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.worker;
+package org.apache.tajo.worker;
 
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
@@ -27,10 +27,10 @@ import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.jboss.netty.channel.ChannelHandlerContext;
 import org.jboss.netty.handler.codec.http.HttpRequest;
-import tajo.QueryUnitId;
-import tajo.worker.dataserver.FileAccessForbiddenException;
-import tajo.worker.dataserver.retriever.DataRetriever;
-import tajo.worker.dataserver.retriever.FileChunk;
+import org.apache.tajo.QueryUnitId;
+import org.apache.tajo.worker.dataserver.FileAccessForbiddenException;
+import org.apache.tajo.worker.dataserver.retriever.DataRetriever;
+import org.apache.tajo.worker.dataserver.retriever.FileChunk;
 
 import java.io.File;
 import java.io.FileNotFoundException;
@@ -66,7 +66,7 @@ public class InterDataRetriever implements DataRetriever {
   }
 
   /* (non-Javadoc)
-   * @see tajo.worker.dataserver.retriever.DataRetriever#handle(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.handler.codec.http.HttpRequest)
+   * @see org.apache.tajo.worker.dataserver.retriever.DataRetriever#handle(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.handler.codec.http.HttpRequest)
    */
   @Override
   public FileChunk [] handle(ChannelHandlerContext ctx, HttpRequest request)
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/PartitionRetrieverHandler.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/PartitionRetrieverHandler.java
index 052ece7..36e7353 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/PartitionRetrieverHandler.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/PartitionRetrieverHandler.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.worker;
+package org.apache.tajo.worker;
 
-import tajo.worker.dataserver.retriever.FileChunk;
-import tajo.worker.dataserver.retriever.RetrieverHandler;
+import org.apache.tajo.worker.dataserver.retriever.FileChunk;
+import org.apache.tajo.worker.dataserver.retriever.RetrieverHandler;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/RangeRetrieverHandler.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/RangeRetrieverHandler.java
index 22890d5..26991a0 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/RangeRetrieverHandler.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/RangeRetrieverHandler.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker;
+package org.apache.tajo.worker;
 
 import org.apache.commons.codec.binary.Base64;
 import org.apache.commons.logging.Log;
@@ -24,15 +24,15 @@ import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Schema;
-import tajo.conf.TajoConf;
-import tajo.storage.RowStoreUtil;
-import tajo.storage.Tuple;
-import tajo.storage.TupleComparator;
-import tajo.storage.TupleRange;
-import tajo.storage.index.bst.BSTIndex;
-import tajo.worker.dataserver.retriever.FileChunk;
-import tajo.worker.dataserver.retriever.RetrieverHandler;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.storage.RowStoreUtil;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.TupleComparator;
+import org.apache.tajo.storage.TupleRange;
+import org.apache.tajo.storage.index.bst.BSTIndex;
+import org.apache.tajo.worker.dataserver.retriever.FileChunk;
+import org.apache.tajo.worker.dataserver.retriever.RetrieverHandler;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/TajoQueryEngine.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/TajoQueryEngine.java
index 70a401c..13cd98a 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/TajoQueryEngine.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/TajoQueryEngine.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.worker;
+package org.apache.tajo.worker;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.TaskAttemptContext;
-import tajo.conf.TajoConf;
-import tajo.engine.planner.PhysicalPlanner;
-import tajo.engine.planner.PhysicalPlannerImpl;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.physical.PhysicalExec;
-import tajo.exception.InternalException;
-import tajo.storage.StorageManager;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.engine.planner.PhysicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlannerImpl;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.physical.PhysicalExec;
+import org.apache.tajo.exception.InternalException;
+import org.apache.tajo.storage.StorageManager;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task.java
index d0fae9f..c8a11c6 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker;
+package org.apache.tajo.worker;
 
 import com.google.common.collect.Lists;
 import org.apache.commons.lang.exception.ExceptionUtils;
@@ -30,29 +30,29 @@ import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.util.ReflectionUtils;
 import org.apache.hadoop.util.StringUtils;
 import org.apache.hadoop.yarn.util.ConverterUtils;
-import tajo.QueryConf;
-import tajo.QueryUnitAttemptId;
-import tajo.TajoProtos.TaskAttemptState;
-import tajo.TaskAttemptContext;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMeta;
-import tajo.catalog.statistics.TableStat;
-import tajo.engine.MasterWorkerProtos.*;
-import tajo.engine.exception.UnfinishedTaskException;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.planner.PlannerUtil;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.logical.SortNode;
-import tajo.engine.planner.logical.StoreTableNode;
-import tajo.engine.planner.physical.PhysicalExec;
-import tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService.Interface;
-import tajo.ipc.protocolrecords.QueryUnitRequest;
-import tajo.master.ExecutionBlock.PartitionType;
-import tajo.rpc.NullCallback;
-import tajo.storage.Fragment;
-import tajo.storage.StorageUtil;
-import tajo.storage.TupleComparator;
-import tajo.worker.TaskRunner.WorkerContext;
+import org.apache.tajo.QueryConf;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.TajoProtos.TaskAttemptState;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.engine.MasterWorkerProtos.*;
+import org.apache.tajo.engine.exception.UnfinishedTaskException;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.planner.PlannerUtil;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.logical.SortNode;
+import org.apache.tajo.engine.planner.logical.StoreTableNode;
+import org.apache.tajo.engine.planner.physical.PhysicalExec;
+import org.apache.tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService.Interface;
+import org.apache.tajo.ipc.protocolrecords.QueryUnitRequest;
+import org.apache.tajo.master.ExecutionBlock.PartitionType;
+import org.apache.tajo.rpc.NullCallback;
+import org.apache.tajo.storage.Fragment;
+import org.apache.tajo.storage.StorageUtil;
+import org.apache.tajo.storage.TupleComparator;
+import org.apache.tajo.worker.TaskRunner.WorkerContext;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java
index 0fd534e..77cfd21 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker;
+package org.apache.tajo.worker;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -32,20 +32,20 @@ import org.apache.hadoop.yarn.api.records.NodeId;
 import org.apache.hadoop.yarn.api.records.impl.pb.ContainerIdPBImpl;
 import org.apache.hadoop.yarn.service.AbstractService;
 import org.apache.hadoop.yarn.util.ConverterUtils;
-import tajo.QueryConf;
-import tajo.QueryUnitAttemptId;
-import tajo.SubQueryId;
-import tajo.TajoProtos.TaskAttemptState;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
-import tajo.engine.query.QueryUnitRequestImpl;
-import tajo.ipc.MasterWorkerProtocol;
-import tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService;
-import tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService.Interface;
-import tajo.rpc.CallFuture2;
-import tajo.rpc.NullCallback;
-import tajo.rpc.ProtoAsyncRpcClient;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.QueryConf;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.TajoProtos.TaskAttemptState;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;
+import org.apache.tajo.engine.query.QueryUnitRequestImpl;
+import org.apache.tajo.ipc.MasterWorkerProtocol;
+import org.apache.tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService;
+import org.apache.tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService.Interface;
+import org.apache.tajo.rpc.CallFuture2;
+import org.apache.tajo.rpc.NullCallback;
+import org.apache.tajo.rpc.ProtoAsyncRpcClient;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.net.InetSocketAddress;
 import java.net.URI;
@@ -53,7 +53,7 @@ import java.security.PrivilegedExceptionAction;
 import java.util.Map;
 import java.util.concurrent.*;
 
-import static tajo.engine.MasterWorkerProtos.TaskFatalErrorReport;
+import static org.apache.tajo.engine.MasterWorkerProtos.TaskFatalErrorReport;
 
 /**
  * The driver class for Tajo QueryUnit processing.
@@ -126,7 +126,7 @@ public class TaskRunner extends AbstractService {
       this.workerContext = new WorkerContext();
 
       // initialize DFS and LocalFileSystems
-      defaultFS = FileSystem.get(URI.create(conf.get("tajo.rootdir")),conf);
+      defaultFS = FileSystem.get(URI.create(conf.get("org.apache.tajo.rootdir")),conf);
       localFS = FileSystem.getLocal(conf);
 
       // the base dir for an output dir
@@ -347,7 +347,7 @@ public class TaskRunner extends AbstractService {
 
     LOG.info("MiniTajoYarn NM Local Dir: " + conf.get(ConfVars.TASK_LOCAL_DIR.varname));
     LOG.info("OUTPUT DIR: " + conf.getOutputPath());
-    LOG.info("Tajo Root Dir: " + conf.get("tajo.rootdir"));
+    LOG.info("Tajo Root Dir: " + conf.get("org.apache.tajo.rootdir"));
 
     UserGroupInformation.setConfiguration(conf);
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/FileAccessForbiddenException.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/FileAccessForbiddenException.java
index 5f0c772..6c93e4f 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/FileAccessForbiddenException.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/FileAccessForbiddenException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver;
+package org.apache.tajo.worker.dataserver;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServer.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServer.java
index a35922e..523d6e1 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServer.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver;
+package org.apache.tajo.worker.dataserver;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -28,7 +28,7 @@ import org.jboss.netty.channel.group.ChannelGroup;
 import org.jboss.netty.channel.group.ChannelGroupFuture;
 import org.jboss.netty.channel.group.DefaultChannelGroup;
 import org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory;
-import tajo.worker.dataserver.retriever.DataRetriever;
+import org.apache.tajo.worker.dataserver.retriever.DataRetriever;
 
 import java.net.InetSocketAddress;
 import java.util.concurrent.Executors;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServerHandler.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServerHandler.java
index 31ab6e1..6b9eea8 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServerHandler.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServerHandler.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver;
+package org.apache.tajo.worker.dataserver;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -30,8 +30,8 @@ import org.jboss.netty.handler.codec.http.HttpResponseStatus;
 import org.jboss.netty.handler.ssl.SslHandler;
 import org.jboss.netty.handler.stream.ChunkedFile;
 import org.jboss.netty.util.CharsetUtil;
-import tajo.worker.dataserver.retriever.DataRetriever;
-import tajo.worker.dataserver.retriever.FileChunk;
+import org.apache.tajo.worker.dataserver.retriever.DataRetriever;
+import org.apache.tajo.worker.dataserver.retriever.FileChunk;
 
 import java.io.*;
 import java.net.URLDecoder;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServerPipelineFactory.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServerPipelineFactory.java
index e4fd554..0a47f6b 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServerPipelineFactory.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpDataServerPipelineFactory.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver;
+package org.apache.tajo.worker.dataserver;
 
 import org.jboss.netty.channel.ChannelPipeline;
 import org.jboss.netty.channel.ChannelPipelineFactory;
 import org.jboss.netty.handler.codec.http.HttpRequestDecoder;
 import org.jboss.netty.handler.codec.http.HttpResponseEncoder;
 import org.jboss.netty.handler.stream.ChunkedWriteHandler;
-import tajo.worker.dataserver.retriever.DataRetriever;
+import org.apache.tajo.worker.dataserver.retriever.DataRetriever;
 
 import static org.jboss.netty.channel.Channels.pipeline;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpUtil.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpUtil.java
index 4c18a0f..e688c39 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpUtil.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/HttpUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver;
+package org.apache.tajo.worker.dataserver;
 
 import com.google.common.collect.Maps;
 
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/AdvancedDataRetriever.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/AdvancedDataRetriever.java
index fef717b..d602d57 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/AdvancedDataRetriever.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/AdvancedDataRetriever.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver.retriever;
+package org.apache.tajo.worker.dataserver.retriever;
 
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
@@ -25,11 +25,11 @@ import org.apache.commons.logging.LogFactory;
 import org.jboss.netty.channel.ChannelHandlerContext;
 import org.jboss.netty.handler.codec.http.HttpRequest;
 import org.jboss.netty.handler.codec.http.QueryStringDecoder;
-import tajo.QueryUnitAttemptId;
-import tajo.QueryUnitId;
-import tajo.SubQueryId;
-import tajo.util.TajoIdUtils;
-import tajo.worker.dataserver.FileAccessForbiddenException;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.QueryUnitId;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.util.TajoIdUtils;
+import org.apache.tajo.worker.dataserver.FileAccessForbiddenException;
 
 import java.io.File;
 import java.io.FileNotFoundException;
@@ -63,7 +63,7 @@ public class AdvancedDataRetriever implements DataRetriever {
   }
 
   /* (non-Javadoc)
-   * @see tajo.worker.dataserver.retriever.DataRetriever#handle(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.handler.codec.http.HttpRequest)
+   * @see org.apache.tajo.worker.dataserver.retriever.DataRetriever#handle(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.handler.codec.http.HttpRequest)
    */
   @Override
   public FileChunk [] handle(ChannelHandlerContext ctx, HttpRequest request)
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/DataRetriever.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/DataRetriever.java
index 83d0540..b26ba74 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/DataRetriever.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/DataRetriever.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver.retriever;
+package org.apache.tajo.worker.dataserver.retriever;
 
 import org.jboss.netty.channel.ChannelHandlerContext;
 import org.jboss.netty.handler.codec.http.HttpRequest;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/DirectoryRetriever.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/DirectoryRetriever.java
index bd44878..62dabbd 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/DirectoryRetriever.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/DirectoryRetriever.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver.retriever;
+package org.apache.tajo.worker.dataserver.retriever;
 
 import org.jboss.netty.channel.ChannelHandlerContext;
 import org.jboss.netty.handler.codec.http.HttpRequest;
-import tajo.worker.dataserver.FileAccessForbiddenException;
-import tajo.worker.dataserver.HttpDataServerHandler;
+import org.apache.tajo.worker.dataserver.FileAccessForbiddenException;
+import org.apache.tajo.worker.dataserver.HttpDataServerHandler;
 
 import java.io.File;
 import java.io.FileNotFoundException;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/FileChunk.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/FileChunk.java
index 9af274b..4f11168 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/FileChunk.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/FileChunk.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver.retriever;
+package org.apache.tajo.worker.dataserver.retriever;
 
 import java.io.File;
 import java.io.FileNotFoundException;
diff --git tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/RetrieverHandler.java tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/RetrieverHandler.java
index ae2d5c4..e5479cc 100644
--- tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/RetrieverHandler.java
+++ tajo-core/tajo-core-backend/src/main/java/tajo/worker/dataserver/retriever/RetrieverHandler.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver.retriever;
+package org.apache.tajo.worker.dataserver.retriever;
 
 import java.io.IOException;
 import java.util.List;
diff --git tajo-core/tajo-core-backend/src/main/proto/CatalogProtocol.proto tajo-core/tajo-core-backend/src/main/proto/CatalogProtocol.proto
index d273059..a7866ac 100644
--- tajo-core/tajo-core-backend/src/main/proto/CatalogProtocol.proto
+++ tajo-core/tajo-core-backend/src/main/proto/CatalogProtocol.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.catalog";
+option java_package = "org.apache.tajo.catalog";
 option java_outer_classname = "CatalogProtocol";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-core/tajo-core-backend/src/main/proto/CatalogProtos.proto tajo-core/tajo-core-backend/src/main/proto/CatalogProtos.proto
index dd1bf69..223384d 100644
--- tajo-core/tajo-core-backend/src/main/proto/CatalogProtos.proto
+++ tajo-core/tajo-core-backend/src/main/proto/CatalogProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.catalog.proto";
+option java_package = "org.apache.tajo.catalog.proto";
 option java_outer_classname = "CatalogProtos";
 option optimize_for = SPEED;
 option java_generic_services = false;
diff --git tajo-core/tajo-core-backend/src/main/proto/ClientProtocol.proto tajo-core/tajo-core-backend/src/main/proto/ClientProtocol.proto
index e78c87f..cbcccd3 100644
--- tajo-core/tajo-core-backend/src/main/proto/ClientProtocol.proto
+++ tajo-core/tajo-core-backend/src/main/proto/ClientProtocol.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.client";
+option java_package = "org.apache.tajo.client";
 option java_outer_classname = "ClientProtocol";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-core/tajo-core-backend/src/main/proto/MasterWorkerProtocol.proto tajo-core/tajo-core-backend/src/main/proto/MasterWorkerProtocol.proto
index c2f2aab..1ddf24a 100644
--- tajo-core/tajo-core-backend/src/main/proto/MasterWorkerProtocol.proto
+++ tajo-core/tajo-core-backend/src/main/proto/MasterWorkerProtocol.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.ipc";
+option java_package = "org.apache.tajo.ipc";
 option java_outer_classname = "MasterWorkerProtocol";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-core/tajo-core-backend/src/main/proto/MasterWorkerProtos.proto tajo-core/tajo-core-backend/src/main/proto/MasterWorkerProtos.proto
index d8863e4..9fea5be 100644
--- tajo-core/tajo-core-backend/src/main/proto/MasterWorkerProtos.proto
+++ tajo-core/tajo-core-backend/src/main/proto/MasterWorkerProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.engine";
+option java_package = "org.apache.tajo.engine";
 option java_outer_classname = "MasterWorkerProtos";
 option java_generic_services = false;
 option java_generate_equals_and_hash = true;
diff --git tajo-core/tajo-core-backend/src/main/proto/PrimitiveProtos.proto tajo-core/tajo-core-backend/src/main/proto/PrimitiveProtos.proto
index 5fa6903..e722190 100644
--- tajo-core/tajo-core-backend/src/main/proto/PrimitiveProtos.proto
+++ tajo-core/tajo-core-backend/src/main/proto/PrimitiveProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.rpc.protocolrecords";
+option java_package = "org.apache.tajo.rpc.protocolrecords";
 option java_outer_classname = "PrimitiveProtos";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-core/tajo-core-backend/src/main/proto/TajoIdProtos.proto tajo-core/tajo-core-backend/src/main/proto/TajoIdProtos.proto
index abd47c0..04c67f2 100644
--- tajo-core/tajo-core-backend/src/main/proto/TajoIdProtos.proto
+++ tajo-core/tajo-core-backend/src/main/proto/TajoIdProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo";
+option java_package = "org.apache.tajo";
 option java_outer_classname = "TajoIdProtos";
 option java_generic_services = false;
 option java_generate_equals_and_hash = true;
diff --git tajo-core/tajo-core-backend/src/main/proto/tajo_protos.proto tajo-core/tajo-core-backend/src/main/proto/tajo_protos.proto
index d4d2fee..3d22ff5 100644
--- tajo-core/tajo-core-backend/src/main/proto/tajo_protos.proto
+++ tajo-core/tajo-core-backend/src/main/proto/tajo_protos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo";
+option java_package = "org.apache.tajo";
 option java_outer_classname = "TajoProtos";
 option java_generic_services = false;
 option java_generate_equals_and_hash = true;
diff --git tajo-core/tajo-core-backend/src/main/resources/tajo-default.xml tajo-core/tajo-core-backend/src/main/resources/tajo-default.xml
index c003637..3b32893 100644
--- tajo-core/tajo-core-backend/src/main/resources/tajo-default.xml
+++ tajo-core/tajo-core-backend/src/main/resources/tajo-default.xml
@@ -21,18 +21,18 @@
 
 <configuration>
   <property>
-    <name>tajo.cluster.distributed</name>
+    <name>org.apache.tajo.cluster.distributed</name>
     <value>false</value>
   </property>
 
   <property>
-    <name>tajo.rootdir</name>
+    <name>org.apache.tajo.rootdir</name>
     <value>file:///tmp/tajo-${user.name}</value>
     <description>A base for other temporary directories.</description>
   </property>
 
   <property>
-    <name>tajo.task.localdir</name>
+    <name>org.apache.tajo.task.localdir</name>
     <value>/tmp/tajo-localdir</value>
   </property>
 </configuration>
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/BackendTestingUtil.java tajo-core/tajo-core-backend/src/test/java/tajo/BackendTestingUtil.java
index 1db61c2..78ce4b1 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/BackendTestingUtil.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/BackendTestingUtil.java
@@ -19,25 +19,25 @@
 /**
  *
  */
-package tajo;
+package org.apache.tajo;
 
 import com.google.common.collect.Lists;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.DatumFactory;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.*;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.physical.PhysicalExec;
-import tajo.engine.query.ResultSetImpl;
-import tajo.storage.*;
-import tajo.util.FileUtil;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.*;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.physical.PhysicalExec;
+import org.apache.tajo.engine.query.ResultSetImpl;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.util.FileUtil;
+import org.apache.tajo.util.TUtil;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/IntegrationTest.java tajo-core/tajo-core-backend/src/test/java/tajo/IntegrationTest.java
index 4c8a29f..755b90a 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/IntegrationTest.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/IntegrationTest.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 public interface IntegrationTest {
 }
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/LocalTajoTestingUtility.java tajo-core/tajo-core-backend/src/test/java/tajo/LocalTajoTestingUtility.java
index 9ce3383..55ed277 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/LocalTajoTestingUtility.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/LocalTajoTestingUtility.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import com.google.protobuf.ServiceException;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Options;
-import tajo.catalog.Schema;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.client.TajoClient;
-import tajo.conf.TajoConf;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.client.TajoClient;
+import org.apache.tajo.conf.TajoConf;
 
 import java.io.IOException;
 import java.sql.ResultSet;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/MiniTajoYarnCluster.java tajo-core/tajo-core-backend/src/test/java/tajo/MiniTajoYarnCluster.java
index e3e7a3f..8de0f0b 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/MiniTajoYarnCluster.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/MiniTajoYarnCluster.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -37,8 +37,8 @@ import org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor;
 import org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor;
 import org.apache.hadoop.yarn.service.AbstractService;
 import org.apache.hadoop.yarn.service.Service;
-import tajo.conf.TajoConf;
-import tajo.pullserver.PullServerAuxService;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.pullserver.PullServerAuxService;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/TajoTestingCluster.java tajo-core/tajo-core-backend/src/test/java/tajo/TajoTestingCluster.java
index 75fde3c..e255dc8 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/TajoTestingCluster.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/TajoTestingCluster.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import com.google.common.base.Charsets;
 import com.google.common.io.Closeables;
@@ -29,13 +29,13 @@ import org.apache.hadoop.fs.LocalFileSystem;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.hdfs.MiniDFSCluster;
 import org.apache.hadoop.yarn.conf.YarnConfiguration;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.client.TajoClient;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.master.TajoMaster;
-import tajo.util.NetUtils;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.client.TajoClient;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.master.TajoMaster;
+import org.apache.tajo.util.NetUtils;
 
 import java.io.*;
 import java.net.InetAddress;
@@ -200,7 +200,7 @@ public class TajoTestingCluster {
       clusterTestBuildDir = setupClusterTestBuildDir();
     }
 
-    conf.set(CatalogConstants.STORE_CLASS, "tajo.catalog.store.MemStore");
+    conf.set(CatalogConstants.STORE_CLASS, "org.apache.tajo.catalog.store.MemStore");
     conf.set(CatalogConstants.JDBC_URI, "jdbc:derby:target/test-data/tcat/db");
     LOG.info("Apache Derby repository is set to "+conf.get(CatalogConstants.JDBC_URI));
     conf.setVar(ConfVars.CATALOG_ADDRESS, "localhost:0");
@@ -231,7 +231,7 @@ public class TajoTestingCluster {
     c.setVar(ConfVars.TASKRUNNER_LISTENER_ADDRESS, "localhost:0");
     c.setVar(ConfVars.CLIENT_SERVICE_ADDRESS, "localhost:0");
     c.setVar(ConfVars.CATALOG_ADDRESS, "localhost:0");
-    c.set(CatalogConstants.STORE_CLASS, "tajo.catalog.store.MemStore");
+    c.set(CatalogConstants.STORE_CLASS, "org.apache.tajo.catalog.store.MemStore");
     c.set(CatalogConstants.JDBC_URI, "jdbc:derby:target/test-data/tcat/db");
     LOG.info("derby repository is set to "+conf.get(CatalogConstants.JDBC_URI));
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/TestQueryIdFactory.java tajo-core/tajo-core-backend/src/test/java/tajo/TestQueryIdFactory.java
index c455ec6..b4d920f 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/TestQueryIdFactory.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/TestQueryIdFactory.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import org.junit.Before;
 import org.junit.Test;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/TestQueryUnitId.java tajo-core/tajo-core-backend/src/test/java/tajo/TestQueryUnitId.java
index 867d541..837fbba 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/TestQueryUnitId.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/TestQueryUnitId.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import org.apache.hadoop.yarn.api.records.ApplicationId;
 import org.apache.hadoop.yarn.util.BuilderUtils;
 import org.junit.Test;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.util.TajoIdUtils;
 
 import static org.junit.Assert.*;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/TpchTestBase.java tajo-core/tajo-core-backend/src/test/java/tajo/TpchTestBase.java
index 809df1b..bc3b91d 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/TpchTestBase.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/TpchTestBase.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo;
+package org.apache.tajo;
 
 import com.google.common.collect.Maps;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.benchmark.TPCH;
-import tajo.catalog.Options;
-import tajo.catalog.Schema;
-import tajo.storage.CSVFile;
-import tajo.util.FileUtil;
+import org.apache.tajo.benchmark.TPCH;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.storage.CSVFile;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/benchmark/TestTPCH.java tajo-core/tajo-core-backend/src/test/java/tajo/benchmark/TestTPCH.java
index a325cae..9e6ad8d 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/benchmark/TestTPCH.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/benchmark/TestTPCH.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.benchmark;
+package org.apache.tajo.benchmark;
 
 import com.google.common.collect.Maps;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
-import tajo.IntegrationTest;
-import tajo.TpchTestBase;
+import org.apache.tajo.IntegrationTest;
+import org.apache.tajo.TpchTestBase;
 
 import java.io.IOException;
 import java.sql.ResultSet;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/client/TestTajoClient.java tajo-core/tajo-core-backend/src/test/java/tajo/client/TestTajoClient.java
index ff7a292..60e6f30 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/client/TestTajoClient.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/client/TestTajoClient.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.client;
+package org.apache.tajo.client;
 
 import com.google.common.collect.Sets;
 import com.google.protobuf.ServiceException;
@@ -26,13 +26,13 @@ import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
-import tajo.BackendTestingUtil;
-import tajo.IntegrationTest;
-import tajo.TajoTestingCluster;
-import tajo.catalog.TableDesc;
-import tajo.conf.TajoConf;
-import tajo.storage.StorageUtil;
-import tajo.util.CommonTestingUtil;
+import org.apache.tajo.BackendTestingUtil;
+import org.apache.tajo.IntegrationTest;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.storage.StorageUtil;
+import org.apache.tajo.util.CommonTestingUtil;
 
 import java.io.IOException;
 import java.util.Set;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/cluster/TestServerName.java tajo-core/tajo-core-backend/src/test/java/tajo/cluster/TestServerName.java
index 3a6f053..513187d 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/cluster/TestServerName.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/cluster/TestServerName.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.cluster;
+package org.apache.tajo.cluster;
 
 import org.junit.Test;
-import tajo.master.cluster.ServerName;
+import org.apache.tajo.master.cluster.ServerName;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/eval/TestEvalTree.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/eval/TestEvalTree.java
index 6e811b6..1814a1e 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/eval/TestEvalTree.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/eval/TestEvalTree.java
@@ -16,27 +16,27 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import org.apache.hadoop.fs.Path;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.catalog.*;
-import tajo.catalog.function.GeneralFunction;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.eval.EvalNode.Type;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.parser.QueryBlock;
-import tajo.master.TajoMaster;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.eval.EvalNode.Type;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.parser.QueryBlock;
+import org.apache.tajo.master.TajoMaster;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import static org.junit.Assert.*;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/eval/TestEvalTreeUtil.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/eval/TestEvalTreeUtil.java
index 0bb9b32..809c911 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/eval/TestEvalTreeUtil.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/eval/TestEvalTreeUtil.java
@@ -16,27 +16,27 @@
  * limitations under the License.
  */
 
-package tajo.engine.eval;
+package org.apache.tajo.engine.eval;
 
 import com.google.common.collect.Sets;
 import org.apache.hadoop.fs.Path;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.datum.DatumFactory;
-import tajo.engine.eval.EvalNode.Type;
-import tajo.engine.eval.TestEvalTree.TestSum;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.parser.QueryBlock;
-import tajo.engine.parser.QueryBlock.Target;
-import tajo.engine.planner.LogicalPlanner;
-import tajo.exception.InternalException;
-import tajo.master.TajoMaster;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.eval.EvalNode.Type;
+import org.apache.tajo.engine.eval.TestEvalTree.TestSum;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.parser.QueryBlock;
+import org.apache.tajo.engine.parser.QueryBlock.Target;
+import org.apache.tajo.engine.planner.LogicalPlanner;
+import org.apache.tajo.exception.InternalException;
+import org.apache.tajo.master.TajoMaster;
 
 import java.util.Collection;
 import java.util.List;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestAggFunction.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestAggFunction.java
index 35c8859..89f6ead 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestAggFunction.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestAggFunction.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.function;
+package org.apache.tajo.engine.function;
 
 import org.junit.Test;
-import tajo.catalog.function.FunctionContext;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.function.builtin.AvgLong;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.function.builtin.AvgLong;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import static org.junit.Assert.assertTrue;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestBuiltinFunctions.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestBuiltinFunctions.java
index abcbbed..79c21ee 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestBuiltinFunctions.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestBuiltinFunctions.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.function;
+package org.apache.tajo.engine.function;
 
 import com.google.common.collect.Maps;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
-import tajo.IntegrationTest;
-import tajo.TpchTestBase;
+import org.apache.tajo.IntegrationTest;
+import org.apache.tajo.TpchTestBase;
 
 import java.io.IOException;
 import java.sql.ResultSet;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestGeneralFunction.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestGeneralFunction.java
index 5a85eeb..222ca5a 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestGeneralFunction.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/function/TestGeneralFunction.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.function;
+package org.apache.tajo.engine.function;
 
 import org.junit.Test;
-import tajo.datum.Datum;
-import tajo.datum.LongDatum;
-import tajo.datum.StringDatum;
-import tajo.engine.function.builtin.Date;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.LongDatum;
+import org.apache.tajo.datum.StringDatum;
+import org.apache.tajo.engine.function.builtin.Date;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.util.Calendar;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/parser/TestNQLParser.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/parser/TestNQLParser.java
index ae72ee4..e3301d7 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/parser/TestNQLParser.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/parser/TestNQLParser.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 import org.antlr.runtime.ANTLRStringStream;
 import org.antlr.runtime.CommonTokenStream;
@@ -24,7 +24,7 @@ import org.antlr.runtime.RecognitionException;
 import org.antlr.runtime.tree.CommonTree;
 import org.antlr.runtime.tree.Tree;
 import org.junit.Test;
-import tajo.engine.query.exception.TQLSyntaxError;
+import org.apache.tajo.engine.query.exception.TQLSyntaxError;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNull;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/parser/TestQueryAnalyzer.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/parser/TestQueryAnalyzer.java
index dbfe71b..0095a21 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/parser/TestQueryAnalyzer.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/parser/TestQueryAnalyzer.java
@@ -16,29 +16,29 @@
  * limitations under the License.
  */
 
-package tajo.engine.parser;
+package org.apache.tajo.engine.parser;
 
 import org.apache.hadoop.fs.Path;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.benchmark.TPCH;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.catalog.proto.CatalogProtos.IndexMethod;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.datum.DatumFactory;
-import tajo.engine.eval.ConstEval;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.eval.EvalNode.Type;
-import tajo.engine.eval.TestEvalTree.TestSum;
-import tajo.engine.parser.QueryBlock.GroupElement;
-import tajo.engine.parser.QueryBlock.GroupType;
-import tajo.engine.parser.QueryBlock.JoinClause;
-import tajo.engine.planner.JoinType;
-import tajo.engine.query.exception.InvalidQueryException;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.benchmark.TPCH;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexMethod;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.eval.ConstEval;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.eval.EvalNode.Type;
+import org.apache.tajo.engine.eval.TestEvalTree.TestSum;
+import org.apache.tajo.engine.parser.QueryBlock.GroupElement;
+import org.apache.tajo.engine.parser.QueryBlock.GroupType;
+import org.apache.tajo.engine.parser.QueryBlock.JoinClause;
+import org.apache.tajo.engine.planner.JoinType;
+import org.apache.tajo.engine.query.exception.InvalidQueryException;
 
 import java.util.Iterator;
 import java.util.List;
@@ -50,7 +50,7 @@ import static org.junit.Assert.*;
  * an abstract syntax tree built from Antlr and generates a QueryBlock instance.
  * 
  * @see QueryAnalyzer
- * @see tajo.engine.parser.QueryBlock
+ * @see org.apache.tajo.engine.parser.QueryBlock
  */
 public class TestQueryAnalyzer {
   private static TajoTestingCluster util;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/plan/global/TestGlobalQueryPlanner.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/plan/global/TestGlobalQueryPlanner.java
index be8a7f1..c389aaf 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/plan/global/TestGlobalQueryPlanner.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/plan/global/TestGlobalQueryPlanner.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.plan.global;
+package org.apache.tajo.engine.plan.global;
 
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
@@ -28,29 +28,29 @@ import org.jboss.netty.handler.codec.http.QueryStringDecoder;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.QueryId;
-import tajo.QueryIdFactory;
-import tajo.TajoTestingCluster;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.eval.TestEvalTree.TestSum;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.parser.QueryBlock;
-import tajo.engine.planner.LogicalOptimizer;
-import tajo.engine.planner.LogicalPlanner;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.global.MasterPlan;
-import tajo.engine.planner.logical.*;
-import tajo.master.ExecutionBlock;
-import tajo.master.ExecutionBlock.PartitionType;
-import tajo.master.GlobalPlanner;
-import tajo.master.TajoMaster;
-import tajo.storage.*;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.eval.TestEvalTree.TestSum;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.parser.QueryBlock;
+import org.apache.tajo.engine.planner.LogicalOptimizer;
+import org.apache.tajo.engine.planner.LogicalPlanner;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.global.MasterPlan;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.master.ExecutionBlock;
+import org.apache.tajo.master.ExecutionBlock.PartitionType;
+import org.apache.tajo.master.GlobalPlanner;
+import org.apache.tajo.master.TajoMaster;
+import org.apache.tajo.storage.*;
 
 import java.io.IOException;
 import java.net.URI;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalNode.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalNode.java
index 8149e4d..344bbfe 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalNode.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalNode.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
-import tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
 
 import static org.junit.Assert.assertEquals;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalOptimizer.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalOptimizer.java
index 1b5fd19..8dd170c 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalOptimizer.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalOptimizer.java
@@ -16,21 +16,21 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 import org.apache.hadoop.fs.Path;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.engine.function.builtin.SumInt;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.logical.*;
-import tajo.master.TajoMaster;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.engine.function.builtin.SumInt;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.master.TajoMaster;
 
 import static org.junit.Assert.*;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalPlanner.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalPlanner.java
index 0c8ec4f..098b896 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalPlanner.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestLogicalPlanner.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
@@ -25,20 +25,20 @@ import org.apache.hadoop.fs.Path;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.benchmark.TPCH;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.catalog.proto.CatalogProtos.IndexMethod;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.function.builtin.SumInt;
-import tajo.engine.json.GsonCreator;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.logical.*;
-import tajo.master.TajoMaster;
-import tajo.util.FileUtil;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.benchmark.TPCH;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.catalog.proto.CatalogProtos.IndexMethod;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.function.builtin.SumInt;
+import org.apache.tajo.engine.json.GsonCreator;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.master.TajoMaster;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestPlannerUtil.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestPlannerUtil.java
index 1b311ab..4a9b6ca 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestPlannerUtil.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestPlannerUtil.java
@@ -16,28 +16,28 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 import org.apache.hadoop.fs.Path;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.datum.DatumFactory;
-import tajo.engine.eval.BinaryEval;
-import tajo.engine.eval.ConstEval;
-import tajo.engine.eval.EvalNode;
-import tajo.engine.eval.FieldEval;
-import tajo.engine.function.builtin.SumInt;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.logical.*;
-import tajo.storage.Tuple;
-import tajo.storage.TupleComparator;
-import tajo.storage.VTuple;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.eval.BinaryEval;
+import org.apache.tajo.engine.eval.ConstEval;
+import org.apache.tajo.engine.eval.EvalNode;
+import org.apache.tajo.engine.eval.FieldEval;
+import org.apache.tajo.engine.function.builtin.SumInt;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.TupleComparator;
+import org.apache.tajo.storage.VTuple;
 
 import java.util.List;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestUniformRangePartition.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestUniformRangePartition.java
index e436c7b..1a9648c 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestUniformRangePartition.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/TestUniformRangePartition.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner;
+package org.apache.tajo.engine.planner;
 
 import org.junit.Test;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.DatumFactory;
-import tajo.engine.utils.TupleUtil;
-import tajo.storage.Tuple;
-import tajo.storage.TupleRange;
-import tajo.storage.VTuple;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.utils.TupleUtil;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.TupleRange;
+import org.apache.tajo.storage.VTuple;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/global/TestGlobalQueryOptimizer.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/global/TestGlobalQueryOptimizer.java
index c0d0dd2..117e466 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/global/TestGlobalQueryOptimizer.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/global/TestGlobalQueryOptimizer.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.engine.planner.global;
+package org.apache.tajo.engine.planner.global;
 
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
@@ -27,25 +27,25 @@ import org.apache.hadoop.yarn.event.AsyncDispatcher;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.QueryId;
-import tajo.QueryIdFactory;
-import tajo.TajoTestingCluster;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.FunctionType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.eval.TestEvalTree.TestSum;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.LogicalOptimizer;
-import tajo.engine.planner.LogicalPlanner;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.logical.*;
-import tajo.master.ExecutionBlock;
-import tajo.master.GlobalPlanner;
-import tajo.storage.*;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.FunctionType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.eval.TestEvalTree.TestSum;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.LogicalOptimizer;
+import org.apache.tajo.engine.planner.LogicalPlanner;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.logical.*;
+import org.apache.tajo.master.ExecutionBlock;
+import org.apache.tajo.master.GlobalPlanner;
+import org.apache.tajo.storage.*;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/logical/extended/TestReceiveNode.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/logical/extended/TestReceiveNode.java
index 7557bc9..848b0cd 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/logical/extended/TestReceiveNode.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/logical/extended/TestReceiveNode.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical.extended;
+package org.apache.tajo.engine.planner.logical.extended;
 
 import com.google.common.collect.Lists;
 import org.junit.Test;
-import tajo.engine.planner.logical.ExprType;
+import org.apache.tajo.engine.planner.logical.ExprType;
 
 import java.net.URI;
 import java.util.List;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/logical/extended/TestSendNode.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/logical/extended/TestSendNode.java
index d154896..faa4289 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/logical/extended/TestSendNode.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/logical/extended/TestSendNode.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.logical.extended;
+package org.apache.tajo.engine.planner.logical.extended;
 
 import org.junit.Test;
-import tajo.engine.planner.logical.ExprType;
+import org.apache.tajo.engine.planner.logical.ExprType;
 
 import java.net.URI;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestBNLJoinExec.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestBNLJoinExec.java
index ea74a8c..0537108 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestBNLJoinExec.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestBNLJoinExec.java
@@ -16,30 +16,30 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.TaskAttemptContext;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.LogicalPlanner;
-import tajo.engine.planner.PhysicalPlanner;
-import tajo.engine.planner.PhysicalPlannerImpl;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.logical.JoinNode;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.storage.*;
-import tajo.util.CommonTestingUtil;
-import tajo.util.TUtil;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.LogicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlannerImpl;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.logical.JoinNode;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.util.TUtil;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestBSTIndexExec.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestBSTIndexExec.java
index cff7f7f..a94b838 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestBSTIndexExec.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestBSTIndexExec.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import com.google.common.base.Preconditions;
 import org.apache.hadoop.fs.FileSystem;
@@ -24,25 +24,25 @@ import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.TaskAttemptContext;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.LogicalOptimizer;
-import tajo.engine.planner.LogicalPlanner;
-import tajo.engine.planner.PhysicalPlannerImpl;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.logical.ScanNode;
-import tajo.storage.*;
-import tajo.storage.index.bst.BSTIndex;
-import tajo.util.CommonTestingUtil;
-import tajo.util.TUtil;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.LogicalOptimizer;
+import org.apache.tajo.engine.planner.LogicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlannerImpl;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.logical.ScanNode;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.storage.index.bst.BSTIndex;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.util.TUtil;
 
 import java.io.IOException;
 import java.util.HashMap;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestExternalSortExec.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestExternalSortExec.java
index b43c80a..d19fb8e 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestExternalSortExec.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestExternalSortExec.java
@@ -16,29 +16,29 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.TaskAttemptContext;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.LogicalPlanner;
-import tajo.engine.planner.PhysicalPlanner;
-import tajo.engine.planner.PhysicalPlannerImpl;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.storage.*;
-import tajo.util.CommonTestingUtil;
-import tajo.util.TUtil;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.LogicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlannerImpl;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.util.TUtil;
 
 import java.io.IOException;
 import java.util.Random;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestHashJoinExec.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestHashJoinExec.java
index 47f743c..63a715f 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestHashJoinExec.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestHashJoinExec.java
@@ -16,29 +16,29 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.TaskAttemptContext;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.LogicalPlanner;
-import tajo.engine.planner.PhysicalPlanner;
-import tajo.engine.planner.PhysicalPlannerImpl;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.storage.*;
-import tajo.util.CommonTestingUtil;
-import tajo.util.TUtil;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.LogicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlannerImpl;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.util.TUtil;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestHashPartitioner.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestHashPartitioner.java
index dd2f53b..c22161c 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestHashPartitioner.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestHashPartitioner.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import static org.junit.Assert.assertEquals;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestMergeJoinExec.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestMergeJoinExec.java
index 46d264b..b175878 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestMergeJoinExec.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestMergeJoinExec.java
@@ -16,31 +16,31 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.TaskAttemptContext;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.LogicalPlanner;
-import tajo.engine.planner.PhysicalPlanner;
-import tajo.engine.planner.PhysicalPlannerImpl;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.logical.SortNode;
-import tajo.storage.*;
-import tajo.util.CommonTestingUtil;
-import tajo.util.TUtil;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.LogicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlannerImpl;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.logical.SortNode;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.util.TUtil;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestNLJoinExec.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestNLJoinExec.java
index f8b8877..d5f28e6 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestNLJoinExec.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestNLJoinExec.java
@@ -16,29 +16,29 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.TaskAttemptContext;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.LogicalPlanner;
-import tajo.engine.planner.PhysicalPlanner;
-import tajo.engine.planner.PhysicalPlannerImpl;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.storage.*;
-import tajo.util.CommonTestingUtil;
-import tajo.util.TUtil;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.LogicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlanner;
+import org.apache.tajo.engine.planner.PhysicalPlannerImpl;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.util.TUtil;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestPhysicalPlanner.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestPhysicalPlanner.java
index 8b5dee5..0f0ac3d 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestPhysicalPlanner.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestPhysicalPlanner.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
@@ -29,31 +29,31 @@ import org.apache.hadoop.fs.PathFilter;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.QueryIdFactory;
-import tajo.QueryUnitAttemptId;
-import tajo.TajoTestingCluster;
-import tajo.TaskAttemptContext;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.NullDatum;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.*;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.logical.LogicalRootNode;
-import tajo.engine.planner.logical.StoreTableNode;
-import tajo.engine.planner.logical.UnionNode;
-import tajo.master.ExecutionBlock.PartitionType;
-import tajo.master.TajoMaster;
-import tajo.storage.*;
-import tajo.storage.index.bst.BSTIndex;
-import tajo.util.CommonTestingUtil;
-import tajo.util.TUtil;
-import tajo.worker.RangeRetrieverHandler;
-import tajo.worker.dataserver.retriever.FileChunk;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.NullDatum;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.*;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.logical.LogicalRootNode;
+import org.apache.tajo.engine.planner.logical.StoreTableNode;
+import org.apache.tajo.engine.planner.logical.UnionNode;
+import org.apache.tajo.master.ExecutionBlock.PartitionType;
+import org.apache.tajo.master.TajoMaster;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.storage.index.bst.BSTIndex;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.util.TUtil;
+import org.apache.tajo.worker.RangeRetrieverHandler;
+import org.apache.tajo.worker.dataserver.retriever.FileChunk;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestSortExec.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestSortExec.java
index 694875f..d760e73 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestSortExec.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/planner/physical/TestSortExec.java
@@ -16,26 +16,26 @@
  * limitations under the License.
  */
 
-package tajo.engine.planner.physical;
+package org.apache.tajo.engine.planner.physical;
 
 import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.TaskAttemptContext;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.*;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.storage.*;
-import tajo.util.CommonTestingUtil;
-import tajo.util.TUtil;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.*;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.util.TUtil;
 
 import java.io.IOException;
 import java.util.Random;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestGroupByQuery.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestGroupByQuery.java
index f1655bc..61a9afe 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestGroupByQuery.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestGroupByQuery.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.engine.query;
+package org.apache.tajo.engine.query;
 
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
-import tajo.IntegrationTest;
-import tajo.TpchTestBase;
+import org.apache.tajo.IntegrationTest;
+import org.apache.tajo.TpchTestBase;
 
 import java.io.IOException;
 import java.sql.ResultSet;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestJoinQuery.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestJoinQuery.java
index 64c4ccb..8838302 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestJoinQuery.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestJoinQuery.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.query;
+package org.apache.tajo.engine.query;
 
 import com.google.common.collect.Maps;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
-import tajo.IntegrationTest;
-import tajo.TpchTestBase;
-import tajo.util.FileUtil;
+import org.apache.tajo.IntegrationTest;
+import org.apache.tajo.TpchTestBase;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestNullValues.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestNullValues.java
index 167b15e..c353fc7 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestNullValues.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestNullValues.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.engine.query;
+package org.apache.tajo.engine.query;
 
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
-import tajo.IntegrationTest;
-import tajo.TajoTestingCluster;
-import tajo.catalog.Options;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.storage.CSVFile;
+import org.apache.tajo.IntegrationTest;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.storage.CSVFile;
 
 import java.sql.ResultSet;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestResultSetImpl.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestResultSetImpl.java
index f1f09ef..e4eee75 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestResultSetImpl.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestResultSetImpl.java
@@ -19,27 +19,27 @@
 /**
  * 
  */
-package tajo.engine.query;
+package org.apache.tajo.engine.query;
 
 import org.apache.hadoop.fs.Path;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
-import tajo.IntegrationTest;
-import tajo.TajoTestingCluster;
-import tajo.catalog.Schema;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.statistics.TableStat;
-import tajo.conf.TajoConf;
-import tajo.datum.DatumFactory;
-import tajo.storage.Appender;
-import tajo.storage.StorageManager;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.IntegrationTest;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.Appender;
+import org.apache.tajo.storage.StorageManager;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 import java.sql.ResultSetMetaData;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestSelectQuery.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestSelectQuery.java
index fb60751..3685b1f 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestSelectQuery.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestSelectQuery.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.engine.query;
+package org.apache.tajo.engine.query;
 
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
-import tajo.IntegrationTest;
-import tajo.TpchTestBase;
+import org.apache.tajo.IntegrationTest;
+import org.apache.tajo.TpchTestBase;
 
 import java.io.IOException;
 import java.sql.ResultSet;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestSortQuery.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestSortQuery.java
index 81a9fe7..bbae9fd 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestSortQuery.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/query/TestSortQuery.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.engine.query;
+package org.apache.tajo.engine.query;
 
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.experimental.categories.Category;
-import tajo.IntegrationTest;
-import tajo.TpchTestBase;
+import org.apache.tajo.IntegrationTest;
+import org.apache.tajo.TpchTestBase;
 
 import java.io.IOException;
 import java.sql.ResultSet;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/engine/util/TestTupleUtil.java tajo-core/tajo-core-backend/src/test/java/tajo/engine/util/TestTupleUtil.java
index 9a23083..67c6db7 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/engine/util/TestTupleUtil.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/engine/util/TestTupleUtil.java
@@ -16,19 +16,19 @@
  * limitations under the License.
  */
 
-package tajo.engine.util;
+package org.apache.tajo.engine.util;
 
 import org.junit.Test;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.planner.PlannerUtil;
-import tajo.engine.planner.RangePartitionAlgorithm;
-import tajo.engine.planner.UniformRangePartition;
-import tajo.engine.utils.TupleUtil;
-import tajo.storage.*;
-import tajo.worker.dataserver.HttpUtil;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.planner.PlannerUtil;
+import org.apache.tajo.engine.planner.RangePartitionAlgorithm;
+import org.apache.tajo.engine.planner.UniformRangePartition;
+import org.apache.tajo.engine.utils.TupleUtil;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.worker.dataserver.HttpUtil;
 
 import java.io.UnsupportedEncodingException;
 import java.util.Map;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/master/TestExecutionBlockCursor.java tajo-core/tajo-core-backend/src/test/java/tajo/master/TestExecutionBlockCursor.java
index c6a5d43..c1b1bea 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/master/TestExecutionBlockCursor.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/master/TestExecutionBlockCursor.java
@@ -12,28 +12,28 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.yarn.event.AsyncDispatcher;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.QueryIdFactory;
-import tajo.TajoTestingCluster;
-import tajo.benchmark.TPCH;
-import tajo.catalog.CatalogService;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableDesc;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.conf.TajoConf;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.LogicalPlanner;
-import tajo.engine.planner.PlanningContext;
-import tajo.engine.planner.global.MasterPlan;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.logical.LogicalRootNode;
-import tajo.storage.StorageManager;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.benchmark.TPCH;
+import org.apache.tajo.catalog.CatalogService;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.LogicalPlanner;
+import org.apache.tajo.engine.planner.PlanningContext;
+import org.apache.tajo.engine.planner.global.MasterPlan;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.logical.LogicalRootNode;
+import org.apache.tajo.storage.StorageManager;
 
 import static org.junit.Assert.assertEquals;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/master/TestRepartitioner.java tajo-core/tajo-core-backend/src/test/java/tajo/master/TestRepartitioner.java
index 2de54b3..2851ce3 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/master/TestRepartitioner.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/master/TestRepartitioner.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.master;
+package org.apache.tajo.master;
 
 import org.jboss.netty.handler.codec.http.QueryStringDecoder;
 import org.junit.Test;
-import tajo.QueryId;
-import tajo.SubQueryId;
-import tajo.TestQueryUnitId;
-import tajo.master.ExecutionBlock.PartitionType;
-import tajo.util.TUtil;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.TestQueryUnitId;
+import org.apache.tajo.master.ExecutionBlock.PartitionType;
+import org.apache.tajo.util.TUtil;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.net.URI;
 import java.util.*;
@@ -36,7 +36,7 @@ public class TestRepartitioner {
   @Test
   public void testCreateHashFetchURL() throws Exception {
     QueryId q1 = TestQueryUnitId.createQueryId(1315890136000l, 2, 1);
-    String hostName = "tajo1";
+    String hostName = "org.apache.tajo1";
     int port = 1234;
     SubQueryId sid = TajoIdUtils.createSubQueryId(q1, 2);
     int partitionId = 2;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestFragment.java tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestFragment.java
index 87a45ed..82274f2 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestFragment.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestFragment.java
@@ -16,19 +16,19 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import com.google.common.collect.Sets;
 import com.google.gson.Gson;
 import org.apache.hadoop.fs.Path;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.catalog.Schema;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.engine.json.GsonCreator;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.engine.json.GsonCreator;
 
 import java.util.Arrays;
 import java.util.SortedSet;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestHCFile.java tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestHCFile.java
index aa4e9f0..c56d20f 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestHCFile.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestHCFile.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import com.google.common.collect.Lists;
 import org.apache.hadoop.fs.FileStatus;
@@ -25,23 +25,23 @@ import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.catalog.Schema;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.CompressType;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.exception.UnknownCodecException;
-import tajo.storage.exception.UnknownDataTypeException;
-import tajo.storage.hcfile.ColumnMeta;
-import tajo.storage.hcfile.HCFile.Appender;
-import tajo.storage.hcfile.HCFile.Scanner;
-import tajo.storage.hcfile.HCTupleAppender;
-import tajo.storage.hcfile.HColumnMetaWritable;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.CompressType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.exception.UnknownCodecException;
+import org.apache.tajo.storage.exception.UnknownDataTypeException;
+import org.apache.tajo.storage.hcfile.ColumnMeta;
+import org.apache.tajo.storage.hcfile.HCFile.Appender;
+import org.apache.tajo.storage.hcfile.HCFile.Scanner;
+import org.apache.tajo.storage.hcfile.HCTupleAppender;
+import org.apache.tajo.storage.hcfile.HColumnMetaWritable;
 
 import java.io.IOException;
 import java.util.Arrays;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestHColumnReader.java tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestHColumnReader.java
index df72f39..40a791f 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestHColumnReader.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestHColumnReader.java
@@ -16,25 +16,25 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.hcfile.HCTupleAppender;
-import tajo.storage.hcfile.HColumnReader;
-import tajo.util.FileUtil;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.hcfile.HCTupleAppender;
+import org.apache.tajo.storage.hcfile.HColumnReader;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestRowFile.java tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestRowFile.java
index cd3058f..dfe271c 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestRowFile.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/storage/TestRowFile.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import com.google.common.collect.Sets;
 import org.apache.hadoop.conf.Configuration;
@@ -26,19 +26,19 @@ import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.TajoTestingCluster;
-import tajo.catalog.Schema;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.TableMetaImpl;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.proto.CatalogProtos.TableProto;
-import tajo.catalog.statistics.TableStat;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.util.FileUtil;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.TableMetaImpl;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableProto;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.IOException;
 import java.util.Set;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/webapp/TestHttpServer.java tajo-core/tajo-core-backend/src/test/java/tajo/webapp/TestHttpServer.java
index 2ec589b..2b48fd8 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/webapp/TestHttpServer.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/webapp/TestHttpServer.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.webapp;
+package org.apache.tajo.webapp;
 
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.mortbay.jetty.webapp.WebAppContext;
-import tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf;
 
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServlet;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/worker/SlowFunc.java tajo-core/tajo-core-backend/src/test/java/tajo/worker/SlowFunc.java
index a6f2a3a..353d949 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/worker/SlowFunc.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/worker/SlowFunc.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.worker;
+package org.apache.tajo.worker;
 
 import org.mortbay.log.Log;
-import tajo.catalog.Column;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.FunctionContext;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.FunctionContext;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.Tuple;
 
 public class SlowFunc extends AggFunction {
   private Datum param;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/worker/TaskRunnerTest.java tajo-core/tajo-core-backend/src/test/java/tajo/worker/TaskRunnerTest.java
index 7d082bd..2119ccc 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/worker/TaskRunnerTest.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/worker/TaskRunnerTest.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker;
+package org.apache.tajo.worker;
 
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.security.UserGroupInformation;
@@ -25,13 +25,13 @@ import org.apache.hadoop.yarn.api.records.ContainerId;
 import org.apache.hadoop.yarn.api.records.NodeId;
 import org.apache.hadoop.yarn.factory.providers.RecordFactoryProvider;
 import org.apache.hadoop.yarn.util.BuilderUtils;
-import tajo.QueryConf;
-import tajo.QueryId;
-import tajo.SubQueryId;
-import tajo.TestQueryUnitId;
-import tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService;
-import tajo.rpc.ProtoAsyncRpcClient;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.QueryConf;
+import org.apache.tajo.QueryId;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.TestQueryUnitId;
+import org.apache.tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService;
+import org.apache.tajo.rpc.ProtoAsyncRpcClient;
+import org.apache.tajo.util.TajoIdUtils;
 
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.when;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/worker/TestFetcher.java tajo-core/tajo-core-backend/src/test/java/tajo/worker/TestFetcher.java
index 9037e10..0181889 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/worker/TestFetcher.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/worker/TestFetcher.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker;
+package org.apache.tajo.worker;
 
 import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.fs.FileSystem;
@@ -24,11 +24,11 @@ import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.net.NetUtils;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.conf.TajoConf;
-import tajo.util.CommonTestingUtil;
-import tajo.worker.dataserver.HttpDataServer;
-import tajo.worker.dataserver.retriever.DataRetriever;
-import tajo.worker.dataserver.retriever.DirectoryRetriever;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.worker.dataserver.HttpDataServer;
+import org.apache.tajo.worker.dataserver.retriever.DataRetriever;
+import org.apache.tajo.worker.dataserver.retriever.DirectoryRetriever;
 
 import java.io.File;
 import java.io.FileWriter;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/worker/TestRangeRetrieverHandler.java tajo-core/tajo-core-backend/src/test/java/tajo/worker/TestRangeRetrieverHandler.java
index f32f756..5f730b0 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/worker/TestRangeRetrieverHandler.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/worker/TestRangeRetrieverHandler.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker;
+package org.apache.tajo.worker;
 
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
@@ -26,27 +26,27 @@ import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.QueryIdFactory;
-import tajo.TajoTestingCluster;
-import tajo.TaskAttemptContext;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.engine.parser.QueryAnalyzer;
-import tajo.engine.planner.*;
-import tajo.engine.planner.logical.LogicalNode;
-import tajo.engine.planner.physical.ExternalSortExec;
-import tajo.engine.planner.physical.IndexedStoreExec;
-import tajo.engine.planner.physical.PhysicalExec;
-import tajo.engine.planner.physical.ProjectionExec;
-import tajo.storage.*;
-import tajo.storage.index.bst.BSTIndex;
-import tajo.util.CommonTestingUtil;
-import tajo.util.TUtil;
-import tajo.worker.dataserver.retriever.FileChunk;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.TajoTestingCluster;
+import org.apache.tajo.TaskAttemptContext;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.engine.parser.QueryAnalyzer;
+import org.apache.tajo.engine.planner.*;
+import org.apache.tajo.engine.planner.logical.LogicalNode;
+import org.apache.tajo.engine.planner.physical.ExternalSortExec;
+import org.apache.tajo.engine.planner.physical.IndexedStoreExec;
+import org.apache.tajo.engine.planner.physical.PhysicalExec;
+import org.apache.tajo.engine.planner.physical.ProjectionExec;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.storage.index.bst.BSTIndex;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.util.TUtil;
+import org.apache.tajo.worker.dataserver.retriever.FileChunk;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/worker/dataserver/TestHttpDataServer.java tajo-core/tajo-core-backend/src/test/java/tajo/worker/dataserver/TestHttpDataServer.java
index 7261534..6e6fdae 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/worker/dataserver/TestHttpDataServer.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/worker/dataserver/TestHttpDataServer.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver;
+package org.apache.tajo.worker.dataserver;
 
 import org.apache.hadoop.net.NetUtils;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.QueryIdFactory;
-import tajo.QueryUnitId;
-import tajo.SubQueryId;
-import tajo.util.CommonTestingUtil;
-import tajo.worker.InterDataRetriever;
-import tajo.worker.dataserver.retriever.DataRetriever;
-import tajo.worker.dataserver.retriever.DirectoryRetriever;
+import org.apache.tajo.QueryIdFactory;
+import org.apache.tajo.QueryUnitId;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.worker.InterDataRetriever;
+import org.apache.tajo.worker.dataserver.retriever.DataRetriever;
+import org.apache.tajo.worker.dataserver.retriever.DirectoryRetriever;
 
 import java.io.*;
 import java.net.InetSocketAddress;
diff --git tajo-core/tajo-core-backend/src/test/java/tajo/worker/dataserver/TestHttpUtil.java tajo-core/tajo-core-backend/src/test/java/tajo/worker/dataserver/TestHttpUtil.java
index e32630c..bb2eb82 100644
--- tajo-core/tajo-core-backend/src/test/java/tajo/worker/dataserver/TestHttpUtil.java
+++ tajo-core/tajo-core-backend/src/test/java/tajo/worker/dataserver/TestHttpUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.worker.dataserver;
+package org.apache.tajo.worker.dataserver;
 
 import com.google.common.collect.Maps;
 import org.junit.Test;
diff --git tajo-core/tajo-core-backend/src/test/resources/tajo-default.xml tajo-core/tajo-core-backend/src/test/resources/tajo-default.xml
index c003637..3b32893 100644
--- tajo-core/tajo-core-backend/src/test/resources/tajo-default.xml
+++ tajo-core/tajo-core-backend/src/test/resources/tajo-default.xml
@@ -21,18 +21,18 @@
 
 <configuration>
   <property>
-    <name>tajo.cluster.distributed</name>
+    <name>org.apache.tajo.cluster.distributed</name>
     <value>false</value>
   </property>
 
   <property>
-    <name>tajo.rootdir</name>
+    <name>org.apache.tajo.rootdir</name>
     <value>file:///tmp/tajo-${user.name}</value>
     <description>A base for other temporary directories.</description>
   </property>
 
   <property>
-    <name>tajo.task.localdir</name>
+    <name>org.apache.tajo.task.localdir</name>
     <value>/tmp/tajo-localdir</value>
   </property>
 </configuration>
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FadvisedChunkedFile.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FadvisedChunkedFile.java
index d98172c..932d62e 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FadvisedChunkedFile.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FadvisedChunkedFile.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.pullserver;
+package org.apache.tajo.pullserver;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FadvisedFileRegion.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FadvisedFileRegion.java
index 6c25115..39c2938 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FadvisedFileRegion.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FadvisedFileRegion.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.pullserver;
+package org.apache.tajo.pullserver;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FileAccessForbiddenException.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FileAccessForbiddenException.java
index 4410214..c703f6f 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FileAccessForbiddenException.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/FileAccessForbiddenException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.pullserver;
+package org.apache.tajo.pullserver;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpDataServerHandler.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpDataServerHandler.java
index 4a6af87..1aae489 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpDataServerHandler.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpDataServerHandler.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.pullserver;
+package org.apache.tajo.pullserver;
 
 import com.google.common.collect.Lists;
 import org.apache.commons.logging.Log;
@@ -29,9 +29,9 @@ import org.jboss.netty.handler.codec.http.*;
 import org.jboss.netty.handler.ssl.SslHandler;
 import org.jboss.netty.handler.stream.ChunkedFile;
 import org.jboss.netty.util.CharsetUtil;
-import tajo.SubQueryId;
-import tajo.pullserver.retriever.DataRetriever;
-import tajo.pullserver.retriever.FileChunk;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.pullserver.retriever.DataRetriever;
+import org.apache.tajo.pullserver.retriever.FileChunk;
 
 import java.io.*;
 import java.net.URLDecoder;
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpDataServerPipelineFactory.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpDataServerPipelineFactory.java
index 6527fe5..4c8bd8b 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpDataServerPipelineFactory.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpDataServerPipelineFactory.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.pullserver;
+package org.apache.tajo.pullserver;
 
 import org.jboss.netty.channel.ChannelPipeline;
 import org.jboss.netty.channel.ChannelPipelineFactory;
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpUtil.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpUtil.java
index 677e37d..2cbb101 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpUtil.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/HttpUtil.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.pullserver;
+package org.apache.tajo.pullserver;
 
 import com.google.common.collect.Maps;
 
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/PullServerAuxService.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/PullServerAuxService.java
index c98e70c..7170e11 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/PullServerAuxService.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/PullServerAuxService.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.pullserver;
+package org.apache.tajo.pullserver;
 
 import com.google.common.collect.Lists;
 import com.google.common.util.concurrent.ThreadFactoryBuilder;
@@ -54,15 +54,15 @@ import org.jboss.netty.handler.codec.http.*;
 import org.jboss.netty.handler.ssl.SslHandler;
 import org.jboss.netty.handler.stream.ChunkedWriteHandler;
 import org.jboss.netty.util.CharsetUtil;
-import tajo.catalog.Schema;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.pullserver.retriever.FileChunk;
-import tajo.storage.RowStoreUtil;
-import tajo.storage.Tuple;
-import tajo.storage.TupleComparator;
-import tajo.storage.TupleRange;
-import tajo.storage.index.bst.BSTIndex;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.pullserver.retriever.FileChunk;
+import org.apache.tajo.storage.RowStoreUtil;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.TupleComparator;
+import org.apache.tajo.storage.TupleRange;
+import org.apache.tajo.storage.index.bst.BSTIndex;
 
 import java.io.File;
 import java.io.FileNotFoundException;
@@ -92,10 +92,10 @@ public class PullServerAuxService extends AbstractService
 
   private static final Log LOG = LogFactory.getLog(PullServerAuxService.class);
   
-  public static final String SHUFFLE_MANAGE_OS_CACHE = "tajo.pullserver.manage.os.cache";
+  public static final String SHUFFLE_MANAGE_OS_CACHE = "org.apache.tajo.pullserver.manage.os.cache";
   public static final boolean DEFAULT_SHUFFLE_MANAGE_OS_CACHE = true;
 
-  public static final String SHUFFLE_READAHEAD_BYTES = "tajo.pullserver.readahead.bytes";
+  public static final String SHUFFLE_READAHEAD_BYTES = "org.apache.tajo.pullserver.readahead.bytes";
   public static final int DEFAULT_SHUFFLE_READAHEAD_BYTES = 4 * 1024 * 1024;
 
   private int port;
@@ -116,18 +116,18 @@ public class PullServerAuxService extends AbstractService
   private ReadaheadPool readaheadPool = ReadaheadPool.getInstance();
    
 
-  public static final String PULLSERVER_SERVICEID = "tajo.pullserver";
+  public static final String PULLSERVER_SERVICEID = "org.apache.tajo.pullserver";
 
   private static final Map<String,String> userRsrc =
     new ConcurrentHashMap<String,String>();
   private static String userName;
 
   public static final String SUFFLE_SSL_FILE_BUFFER_SIZE_KEY =
-    "tajo.pullserver.ssl.file.buffer.size";
+    "org.apache.tajo.pullserver.ssl.file.buffer.size";
 
   public static final int DEFAULT_SUFFLE_SSL_FILE_BUFFER_SIZE = 60 * 1024;
 
-  @Metrics(name="PullServerShuffleMetrics", about="PullServer output metrics", context="tajo")
+  @Metrics(name="PullServerShuffleMetrics", about="PullServer output metrics", context="org.apache.tajo")
   static class ShuffleMetrics implements ChannelFutureListener {
     @Metric({"OutputBytes","PullServer output in bytes"})
     MutableCounterLong shuffleOutputBytes;
@@ -384,7 +384,7 @@ public class PullServerAuxService extends AbstractService
       String partitionId = partitionIds.get(0);
       List<String> taskIds = splitMaps(taskIdList);
 
-      // the working dir of tajo worker for each query
+      // the working dir of org.apache.tajo worker for each query
       String queryBaseDir = appId + "/output" + "/";
 
       // if a subquery requires a range partitioning
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/AdvancedDataRetriever.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/AdvancedDataRetriever.java
index 409ce79..1fe5a0f 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/AdvancedDataRetriever.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/AdvancedDataRetriever.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.pullserver.retriever;
+package org.apache.tajo.pullserver.retriever;
 
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
@@ -25,11 +25,11 @@ import org.apache.commons.logging.LogFactory;
 import org.jboss.netty.channel.ChannelHandlerContext;
 import org.jboss.netty.handler.codec.http.HttpRequest;
 import org.jboss.netty.handler.codec.http.QueryStringDecoder;
-import tajo.QueryUnitAttemptId;
-import tajo.QueryUnitId;
-import tajo.SubQueryId;
-import tajo.pullserver.FileAccessForbiddenException;
-import tajo.util.TajoIdUtils;
+import org.apache.tajo.QueryUnitAttemptId;
+import org.apache.tajo.QueryUnitId;
+import org.apache.tajo.SubQueryId;
+import org.apache.tajo.pullserver.FileAccessForbiddenException;
+import org.apache.tajo.util.TajoIdUtils;
 
 import java.io.File;
 import java.io.FileNotFoundException;
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/DataRetriever.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/DataRetriever.java
index 0f6e705..8f55f7b 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/DataRetriever.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/DataRetriever.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.pullserver.retriever;
+package org.apache.tajo.pullserver.retriever;
 
 import org.jboss.netty.channel.ChannelHandlerContext;
 import org.jboss.netty.handler.codec.http.HttpRequest;
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/DirectoryRetriever.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/DirectoryRetriever.java
index 6ca0b0b..dc63929 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/DirectoryRetriever.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/DirectoryRetriever.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.pullserver.retriever;
+package org.apache.tajo.pullserver.retriever;
 
 import org.jboss.netty.channel.ChannelHandlerContext;
 import org.jboss.netty.handler.codec.http.HttpRequest;
-import tajo.pullserver.FileAccessForbiddenException;
-import tajo.pullserver.HttpDataServerHandler;
+import org.apache.tajo.pullserver.FileAccessForbiddenException;
+import org.apache.tajo.pullserver.HttpDataServerHandler;
 
 import java.io.File;
 import java.io.FileNotFoundException;
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/FileChunk.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/FileChunk.java
index c52c8d1..a8b424e 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/FileChunk.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/FileChunk.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.pullserver.retriever;
+package org.apache.tajo.pullserver.retriever;
 
 import java.io.File;
 import java.io.FileNotFoundException;
diff --git tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/RetrieverHandler.java tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/RetrieverHandler.java
index bfef270..5567c0d 100644
--- tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/RetrieverHandler.java
+++ tajo-core/tajo-core-pullserver/src/main/java/tajo/pullserver/retriever/RetrieverHandler.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.pullserver.retriever;
+package org.apache.tajo.pullserver.retriever;
 
 import java.io.IOException;
 import java.util.List;
diff --git tajo-core/tajo-core-pullserver/src/main/resources/tajo-default.xml tajo-core/tajo-core-pullserver/src/main/resources/tajo-default.xml
index c003637..3b32893 100644
--- tajo-core/tajo-core-pullserver/src/main/resources/tajo-default.xml
+++ tajo-core/tajo-core-pullserver/src/main/resources/tajo-default.xml
@@ -21,18 +21,18 @@
 
 <configuration>
   <property>
-    <name>tajo.cluster.distributed</name>
+    <name>org.apache.tajo.cluster.distributed</name>
     <value>false</value>
   </property>
 
   <property>
-    <name>tajo.rootdir</name>
+    <name>org.apache.tajo.rootdir</name>
     <value>file:///tmp/tajo-${user.name}</value>
     <description>A base for other temporary directories.</description>
   </property>
 
   <property>
-    <name>tajo.task.localdir</name>
+    <name>org.apache.tajo.task.localdir</name>
     <value>/tmp/tajo-localdir</value>
   </property>
 </configuration>
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/Appender.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/Appender.java
index e701e3f..6720614 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/Appender.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/Appender.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
-import tajo.catalog.statistics.TableStat;
+import org.apache.tajo.catalog.statistics.TableStat;
 
 import java.io.Closeable;
 import java.io.IOException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/CSVFile.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/CSVFile.java
index 1311f7f..b45972a 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/CSVFile.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/CSVFile.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.commons.codec.binary.Base64;
 import org.apache.commons.logging.Log;
@@ -26,16 +26,16 @@ import org.apache.hadoop.fs.FSDataInputStream;
 import org.apache.hadoop.fs.FSDataOutputStream;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMeta;
-import tajo.catalog.statistics.TableStat;
-import tajo.datum.ArrayDatum;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.DatumType;
-import tajo.storage.exception.AlreadyExistsStorageException;
-import tajo.storage.json.GsonCreator;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.datum.ArrayDatum;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.DatumType;
+import org.apache.tajo.storage.exception.AlreadyExistsStorageException;
+import org.apache.tajo.storage.json.GsonCreator;
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/FileAppender.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/FileAppender.java
index 9c2a84c..ca7c898 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/FileAppender.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/FileAppender.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMeta;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/FileScanner.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/FileScanner.java
index 5a27889..4b8acc7 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/FileScanner.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/FileScanner.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.hadoop.conf.Configuration;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMeta;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/Fragment.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/Fragment.java
index 1122b7b..47c962d 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/Fragment.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/Fragment.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import com.google.common.base.Objects;
 import com.google.gson.Gson;
 import com.google.gson.annotations.Expose;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.SchemaProto;
-import tajo.catalog.proto.CatalogProtos.TabletProto;
-import tajo.catalog.proto.CatalogProtos.TabletProtoOrBuilder;
-import tajo.storage.json.GsonCreator;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.SchemaProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.TabletProto;
+import org.apache.tajo.catalog.proto.CatalogProtos.TabletProtoOrBuilder;
+import org.apache.tajo.storage.json.GsonCreator;
+import org.apache.tajo.util.TUtil;
 
 public class Fragment implements TableDesc, Comparable<Fragment>, SchemaObject {
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/FrameTuple.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/FrameTuple.java
index 946a799..3d94598 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/FrameTuple.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/FrameTuple.java
@@ -19,12 +19,12 @@
 /**
  * 
  */
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import com.google.common.base.Preconditions;
-import tajo.datum.*;
-import tajo.exception.UnimplementedException;
-import tajo.exception.UnsupportedException;
+import org.apache.tajo.datum.*;
+import org.apache.tajo.exception.UnimplementedException;
+import org.apache.tajo.exception.UnsupportedException;
 
 import java.net.InetAddress;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/MergeScanner.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/MergeScanner.java
index c8cd7d3..1afd9d5 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/MergeScanner.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/MergeScanner.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.hadoop.conf.Configuration;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMeta;
 
 import java.io.IOException;
 import java.util.ArrayList;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/NumericPathComparator.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/NumericPathComparator.java
index 34f70a2..94d13ee 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/NumericPathComparator.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/NumericPathComparator.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.hadoop.fs.Path;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/RawFile.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/RawFile.java
index 74994b5..4a96187 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/RawFile.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/RawFile.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.statistics.TableStat;
-import tajo.datum.ArrayDatum;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.json.GsonCreator;
-import tajo.util.BitArray;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.datum.ArrayDatum;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.json.GsonCreator;
+import org.apache.tajo.util.BitArray;
 
 import java.io.File;
 import java.io.IOException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/RowFile.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/RowFile.java
index 119fcf4..5bce969 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/RowFile.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/RowFile.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -25,16 +25,16 @@ import org.apache.hadoop.fs.FSDataInputStream;
 import org.apache.hadoop.fs.FSDataOutputStream;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Column;
-import tajo.catalog.TableMeta;
-import tajo.catalog.statistics.TableStat;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.datum.ArrayDatum;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.datum.json.GsonCreator;
-import tajo.storage.exception.AlreadyExistsStorageException;
-import tajo.util.BitArray;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.datum.ArrayDatum;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.datum.json.GsonCreator;
+import org.apache.tajo.storage.exception.AlreadyExistsStorageException;
+import org.apache.tajo.util.BitArray;
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/RowStoreUtil.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/RowStoreUtil.java
index 88766a7..fedae8c 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/RowStoreUtil.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/RowStoreUtil.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.datum.DatumFactory;
-import tajo.util.Bytes;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.util.Bytes;
 
 import java.nio.ByteBuffer;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/Scanner.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/Scanner.java
index 42b9798..4f5e7b1 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/Scanner.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/Scanner.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
-import tajo.catalog.Column;
-import tajo.catalog.SchemaObject;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.SchemaObject;
 
 import java.io.Closeable;
 import java.io.IOException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/SeekableScanner.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/SeekableScanner.java
index d0e95a2..894e7ee 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/SeekableScanner.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/SeekableScanner.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/Storage.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/Storage.java
index fb005d6..6adf2d1 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/Storage.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/Storage.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMeta;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java
index 712cfad..88c5205 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java
@@ -16,19 +16,19 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.*;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMeta;
-import tajo.catalog.TableMetaImpl;
-import tajo.catalog.proto.CatalogProtos.TableProto;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.util.FileUtil;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.TableMetaImpl;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableProto;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
@@ -132,7 +132,7 @@ public class StorageManager {
     scannerClass = SCANNER_HANDLER_CACHE.get(handlerName);
     if (scannerClass == null) {
         scannerClass = conf.getClass(
-        String.format("tajo.storage.scanner-handler.%s.class",
+        String.format("org.apache.tajo.storage.scanner-handler.%s.class",
             meta.getStoreType().name().toLowerCase()), null,
         FileScanner.class);
       SCANNER_HANDLER_CACHE.put(handlerName, scannerClass);
@@ -160,7 +160,7 @@ public class StorageManager {
     appenderClass = APPENDER_HANDLER_CACHE.get(handlerName);
     if (appenderClass == null) {
       appenderClass = conf.getClass(
-          String.format("tajo.storage.appender-handler.%s.class",
+          String.format("org.apache.tajo.storage.appender-handler.%s.class",
               meta.getStoreType().name().toLowerCase()), null,
           FileAppender.class);
       APPENDER_HANDLER_CACHE.put(handlerName, appenderClass);
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageUtil.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageUtil.java
index 293148e..424740e 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageUtil.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageUtil.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FSDataOutputStream;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMeta;
-import tajo.util.FileUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/TableStatistics.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/TableStatistics.java
index 5d93af1..ba1965d 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/TableStatistics.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/TableStatistics.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.storage;
-
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos;
-import tajo.catalog.statistics.ColumnStat;
-import tajo.catalog.statistics.TableStat;
-import tajo.datum.Datum;
-import tajo.datum.DatumType;
+package org.apache.tajo.storage;
+
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos;
+import org.apache.tajo.catalog.statistics.ColumnStat;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumType;
 
 /**
  * This class is not thread-safe.
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/Tuple.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/Tuple.java
index e96c524..ef3deaf 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/Tuple.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/Tuple.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
-import tajo.datum.*;
+import org.apache.tajo.datum.*;
 
 import java.net.InetAddress;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/TupleComparator.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/TupleComparator.java
index bbd0cc6..c49b50e 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/TupleComparator.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/TupleComparator.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import com.google.common.base.Preconditions;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
-import tajo.catalog.proto.CatalogProtos.SortSpecProto;
-import tajo.common.ProtoObject;
-import tajo.datum.Datum;
-import tajo.datum.DatumType;
-import tajo.storage.index.IndexProtos.TupleComparatorProto;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto;
+import org.apache.tajo.common.ProtoObject;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumType;
+import org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto;
 
 import java.util.Comparator;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/TupleRange.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/TupleRange.java
index ce4acea..7d0f674 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/TupleRange.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/TupleRange.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import com.google.common.base.Objects;
 import com.google.common.base.Preconditions;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
 
 import java.util.Comparator;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/VTuple.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/VTuple.java
index 89f1230..715721e 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/VTuple.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/VTuple.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import com.google.gson.annotations.Expose;
-import tajo.datum.*;
-import tajo.datum.exception.InvalidCastException;
+import org.apache.tajo.datum.*;
+import org.apache.tajo.datum.exception.InvalidCastException;
 
 import java.net.InetAddress;
 import java.util.Arrays;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/AlreadyExistsStorageException.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/AlreadyExistsStorageException.java
index c375f7b..bb035a8 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/AlreadyExistsStorageException.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/AlreadyExistsStorageException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.storage.exception;
+package org.apache.tajo.storage.exception;
 
 import org.apache.hadoop.fs.Path;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnknownCodecException.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnknownCodecException.java
index b17aa34..a67d1f7 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnknownCodecException.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnknownCodecException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.exception;
+package org.apache.tajo.storage.exception;
 
 public class UnknownCodecException extends Exception {
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnknownDataTypeException.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnknownDataTypeException.java
index 67a63d7..d18b5a0 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnknownDataTypeException.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnknownDataTypeException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.exception;
+package org.apache.tajo.storage.exception;
 
 public class UnknownDataTypeException extends Exception {
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnsupportedFileTypeException.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnsupportedFileTypeException.java
index 3ea0731..8b197d6 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnsupportedFileTypeException.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/exception/UnsupportedFileTypeException.java
@@ -19,7 +19,7 @@
 /**
  * 
  */
-package tajo.storage.exception;
+package org.apache.tajo.storage.exception;
 
 public class UnsupportedFileTypeException extends RuntimeException {
 	private static final long serialVersionUID = -8160289695849000342L;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BasicBlock.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BasicBlock.java
index 56b376a..6671cb1 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BasicBlock.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BasicBlock.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import com.google.common.collect.Lists;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 import java.util.List;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Block.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Block.java
index a4180e0..c67e017 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Block.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Block.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockMeta.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockMeta.java
index fa7c718..92b4fcd 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockMeta.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockMeta.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
 
 public interface BlockMeta {
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockReader.java
index 762c7dc..402cd0b 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockReader.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.storage.exception.UnknownDataTypeException;
-import tajo.storage.hcfile.reader.Reader;
-import tajo.storage.hcfile.reader.TypeReader;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.exception.UnknownDataTypeException;
+import org.apache.tajo.storage.hcfile.reader.Reader;
+import org.apache.tajo.storage.hcfile.reader.TypeReader;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockWriter.java
index a4e9691..c039f25 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/BlockWriter.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.storage.exception.UnknownDataTypeException;
-import tajo.storage.hcfile.writer.TypeWriter;
-import tajo.storage.hcfile.writer.Writer;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.exception.UnknownDataTypeException;
+import org.apache.tajo.storage.hcfile.writer.TypeWriter;
+import org.apache.tajo.storage.hcfile.writer.Writer;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnAppender.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnAppender.java
index f6b9488..cb8e66c 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnAppender.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnAppender.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.Closeable;
 import java.io.IOException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnFileAppender.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnFileAppender.java
index 1799b25..3d0fc79 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnFileAppender.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnFileAppender.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnFileScanner.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnFileScanner.java
index 5aedab1..5c521f4 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnFileScanner.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnFileScanner.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnMeta.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnMeta.java
index 8cdc07c..8ba2614 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnMeta.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnMeta.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.catalog.proto.CatalogProtos.CompressType;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.proto.CatalogProtos.CompressType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
 
 public interface ColumnMeta {
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnReader.java
index fbe8757..fd2d43a 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnReader.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.Closeable;
 import java.io.IOException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnScanner.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnScanner.java
index 1c70422..8ef5925 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnScanner.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnScanner.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.Closeable;
 import java.io.IOException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnStoreUtil.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnStoreUtil.java
index d40c49e..d2af5a0 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnStoreUtil.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/ColumnStoreUtil.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 public class ColumnStoreUtil {
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlock.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlock.java
index 73f7998..8ad7777 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlock.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlock.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.storage.hcfile.compress.Codec;
+import org.apache.tajo.storage.hcfile.compress.Codec;
 
 public abstract class CompressedBlock extends UpdatableBlock {
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlockReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlockReader.java
index c128ce6..ad29432 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlockReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlockReader.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.catalog.proto.CatalogProtos.CompressType;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.storage.exception.UnknownCodecException;
-import tajo.storage.hcfile.compress.Codec;
-import tajo.storage.hcfile.reader.Reader;
+import org.apache.tajo.catalog.proto.CatalogProtos.CompressType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.storage.exception.UnknownCodecException;
+import org.apache.tajo.storage.hcfile.compress.Codec;
+import org.apache.tajo.storage.hcfile.reader.Reader;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlockWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlockWriter.java
index 22a8c91..f766c11 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlockWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/CompressedBlockWriter.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.catalog.proto.CatalogProtos.CompressType;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.storage.exception.UnknownCodecException;
-import tajo.storage.hcfile.compress.Codec;
-import tajo.storage.hcfile.writer.Writer;
+import org.apache.tajo.catalog.proto.CatalogProtos.CompressType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.storage.exception.UnknownCodecException;
+import org.apache.tajo.storage.hcfile.compress.Codec;
+import org.apache.tajo.storage.hcfile.writer.Writer;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HBlockMetaImpl.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HBlockMetaImpl.java
index 584d2ce..a59d5a0 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HBlockMetaImpl.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HBlockMetaImpl.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
 
 /**
  * Meta information for blocks.
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCFile.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCFile.java
index 83df49e..5422879 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCFile.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCFile.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.*;
-import tajo.catalog.proto.CatalogProtos.CompressType;
-import tajo.datum.Datum;
-import tajo.storage.exception.UnknownCodecException;
-import tajo.storage.exception.UnknownDataTypeException;
-import tajo.storage.hcfile.reader.Reader;
-import tajo.storage.hcfile.writer.Writer;
+import org.apache.tajo.catalog.proto.CatalogProtos.CompressType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.exception.UnknownCodecException;
+import org.apache.tajo.storage.exception.UnknownDataTypeException;
+import org.apache.tajo.storage.hcfile.reader.Reader;
+import org.apache.tajo.storage.hcfile.writer.Writer;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCFileMetaImpl.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCFileMetaImpl.java
index e06e944..6ae4223 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCFileMetaImpl.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCFileMetaImpl.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.catalog.proto.CatalogProtos.*;
-import tajo.catalog.proto.CatalogProtos.ColumnMetaProto.Builder;
-import tajo.common.ProtoObject;
+import org.apache.tajo.catalog.proto.CatalogProtos.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.ColumnMetaProto.Builder;
+import org.apache.tajo.common.ProtoObject;
 
 public class HCFileMetaImpl implements ColumnMeta, ProtoObject<ColumnMetaProto> {
   private ColumnMetaProto proto = ColumnMetaProto.getDefaultInstance();
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCTupleAppender.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCTupleAppender.java
index 5de66a5..1f499e4 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCTupleAppender.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HCTupleAppender.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import com.google.common.collect.Maps;
 import org.apache.commons.logging.Log;
@@ -25,15 +25,15 @@ import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FSDataOutputStream;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.CompressType;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.storage.Tuple;
-import tajo.storage.exception.UnknownCodecException;
-import tajo.storage.exception.UnknownDataTypeException;
-import tajo.storage.hcfile.HCFile.Appender;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.CompressType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.exception.UnknownCodecException;
+import org.apache.tajo.storage.exception.UnknownDataTypeException;
+import org.apache.tajo.storage.hcfile.HCFile.Appender;
 
 import java.io.IOException;
 import java.util.Map;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HColumnMetaWritable.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HColumnMetaWritable.java
index 4a49f9e..a834b57 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HColumnMetaWritable.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HColumnMetaWritable.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import org.apache.hadoop.io.Writable;
-import tajo.catalog.proto.CatalogProtos.CompressType;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.proto.CatalogProtos.CompressType;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
 
 import java.io.DataInput;
 import java.io.DataOutput;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HColumnReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HColumnReader.java
index 9994c68..e9bf098 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HColumnReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/HColumnReader.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import com.google.common.collect.Lists;
 import org.apache.commons.logging.Log;
@@ -26,16 +26,16 @@ import org.apache.hadoop.fs.FSDataInputStream;
 import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Column;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMeta;
-import tajo.catalog.TableMetaImpl;
-import tajo.catalog.proto.CatalogProtos.TableProto;
-import tajo.datum.Datum;
-import tajo.storage.exception.UnknownCodecException;
-import tajo.storage.exception.UnknownDataTypeException;
-import tajo.storage.hcfile.HCFile.Scanner;
-import tajo.util.FileUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.TableMetaImpl;
+import org.apache.tajo.catalog.proto.CatalogProtos.TableProto;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.exception.UnknownCodecException;
+import org.apache.tajo.storage.exception.UnknownDataTypeException;
+import org.apache.tajo.storage.hcfile.HCFile.Scanner;
+import org.apache.tajo.util.FileUtil;
 
 import java.io.IOException;
 import java.util.Arrays;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Index.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Index.java
index 7e6dbf8..c290c4c 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Index.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Index.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import com.google.common.collect.Lists;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/IndexItem.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/IndexItem.java
index 8ce62c3..5702ade 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/IndexItem.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/IndexItem.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 public class IndexItem<T> implements Comparable<IndexItem> {
   private long rid;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Seekable.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Seekable.java
index 1a82270..d0efb97 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Seekable.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Seekable.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/TupleAppender.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/TupleAppender.java
index bf19a50..e570477 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/TupleAppender.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/TupleAppender.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.storage.Tuple;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.Closeable;
 import java.io.IOException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Updatable.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Updatable.java
index 5952d3d..923190a 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Updatable.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/Updatable.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/UpdatableBlock.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/UpdatableBlock.java
index 8321075..f6a0c97 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/UpdatableBlock.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/UpdatableBlock.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 public abstract class UpdatableBlock implements Updatable, Block {
 }
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/UpdatableSeekableBlock.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/UpdatableSeekableBlock.java
index b2d6ea6..aeda9f8 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/UpdatableSeekableBlock.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/UpdatableSeekableBlock.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 public abstract class UpdatableSeekableBlock extends UpdatableBlock implements Seekable {
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/BitVector.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/BitVector.java
index 15944dd..4d96739 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/BitVector.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/BitVector.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.compress;
+package org.apache.tajo.storage.hcfile.compress;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Codec.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Codec.java
index 2fe019b..2504eb2 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Codec.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Codec.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.compress;
+package org.apache.tajo.storage.hcfile.compress;
 
-import tajo.catalog.proto.CatalogProtos.CompressType;
-import tajo.storage.exception.UnknownCodecException;
+import org.apache.tajo.catalog.proto.CatalogProtos.CompressType;
+import org.apache.tajo.storage.exception.UnknownCodecException;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Dictionary.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Dictionary.java
index 681b855..fa01435 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Dictionary.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Dictionary.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.compress;
+package org.apache.tajo.storage.hcfile.compress;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/LZ.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/LZ.java
index ad1f9c8..456d55f 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/LZ.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/LZ.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.compress;
+package org.apache.tajo.storage.hcfile.compress;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/NullSuppress.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/NullSuppress.java
index 18dc09f..7aa880e 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/NullSuppress.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/NullSuppress.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.compress;
+package org.apache.tajo.storage.hcfile.compress;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/RunLength.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/RunLength.java
index 9402181..0c17a7d 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/RunLength.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/RunLength.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.compress;
+package org.apache.tajo.storage.hcfile.compress;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Snappy.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Snappy.java
index 33cd64b..5cb5526 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Snappy.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/compress/Snappy.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.compress;
+package org.apache.tajo.storage.hcfile.compress;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ArrayReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ArrayReader.java
index a7215b0..6bdf5ac 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ArrayReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ArrayReader.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.ArrayDatum;
-import tajo.datum.Datum;
-import tajo.datum.json.GsonCreator;
+import org.apache.tajo.datum.ArrayDatum;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.json.GsonCreator;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ByteReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ByteReader.java
index 3a37fd7..2cf0abd 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ByteReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ByteReader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/BytesReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/BytesReader.java
index 6a22904..ee0fc31 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/BytesReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/BytesReader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/CharReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/CharReader.java
index 19dd59c..cdf57a5 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/CharReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/CharReader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/DoubleReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/DoubleReader.java
index 021a42d..dec56a7 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/DoubleReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/DoubleReader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/FloatReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/FloatReader.java
index e5f0e03..68df5ed 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/FloatReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/FloatReader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/IPv4Reader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/IPv4Reader.java
index d9094c7..ad25274 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/IPv4Reader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/IPv4Reader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/IntReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/IntReader.java
index fa6ad62..0faaed3 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/IntReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/IntReader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/LongReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/LongReader.java
index 3c4b96e..3ab4362 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/LongReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/LongReader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/Reader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/Reader.java
index a9ab3aa..33e416b 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/Reader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/Reader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.storage.hcfile.BlockMeta;
-import tajo.storage.hcfile.UpdatableBlock;
+import org.apache.tajo.storage.hcfile.BlockMeta;
+import org.apache.tajo.storage.hcfile.UpdatableBlock;
 
 import java.io.Closeable;
 import java.io.IOException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ShortReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ShortReader.java
index 7c1bf98..e7a7f8c 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ShortReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/ShortReader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/String2Reader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/String2Reader.java
index 7407d49..d924d48 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/String2Reader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/String2Reader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/StringReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/StringReader.java
index 5043018..f67bb6d 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/StringReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/StringReader.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/TypeReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/TypeReader.java
index e9cf356..e4b85fa 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/TypeReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/reader/TypeReader.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.reader;
+package org.apache.tajo.storage.hcfile.reader;
 
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.storage.exception.UnknownDataTypeException;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.exception.UnknownDataTypeException;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ArrayWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ArrayWriter.java
index 526f746..ea88ee1 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ArrayWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ArrayWriter.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.writer;
+package org.apache.tajo.storage.hcfile.writer;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.datum.ArrayDatum;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.ArrayDatum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ByteWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ByteWriter.java
index e7b84e4..c970267 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ByteWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ByteWriter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.writer;
+package org.apache.tajo.storage.hcfile.writer;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/BytesWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/BytesWriter.java
index 3835a3f..146227f 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/BytesWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/BytesWriter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.writer;
+package org.apache.tajo.storage.hcfile.writer;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/CharWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/CharWriter.java
index b1b365c..8fe095b 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/CharWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/CharWriter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.writer;
+package org.apache.tajo.storage.hcfile.writer;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/DoubleWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/DoubleWriter.java
index 13c4dff..62c0105 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/DoubleWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/DoubleWriter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.writer;
+package org.apache.tajo.storage.hcfile.writer;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/FloatWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/FloatWriter.java
index 72fc77f..a7e731c 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/FloatWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/FloatWriter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.writer;
+package org.apache.tajo.storage.hcfile.writer;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/IntWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/IntWriter.java
index 676e815..f6374c5 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/IntWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/IntWriter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.writer;
+package org.apache.tajo.storage.hcfile.writer;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/LongWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/LongWriter.java
index 2e1c3f2..db4f65a 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/LongWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/LongWriter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.writer;
+package org.apache.tajo.storage.hcfile.writer;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ShortWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ShortWriter.java
index 5868456..20b6aca 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ShortWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/ShortWriter.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.writer;
+package org.apache.tajo.storage.hcfile.writer;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.datum.Datum;
+import org.apache.tajo.datum.Datum;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/TypeWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/TypeWriter.java
index 4f1f20a..22b904d 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/TypeWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/TypeWriter.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.writer;
+package org.apache.tajo.storage.hcfile.writer;
 
 import org.apache.hadoop.fs.FSDataOutputStream;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.storage.exception.UnknownDataTypeException;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.storage.exception.UnknownDataTypeException;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/Writer.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/Writer.java
index ed0bb3e..45d8abe 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/Writer.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/hcfile/writer/Writer.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile.writer;
+package org.apache.tajo.storage.hcfile.writer;
 
-import tajo.storage.hcfile.Block;
+import org.apache.tajo.storage.hcfile.Block;
 
 import java.io.Closeable;
 import java.io.IOException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexMethod.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexMethod.java
index b24e72e..74be7ff 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexMethod.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexMethod.java
@@ -16,11 +16,11 @@
  * limitations under the License.
  */
 
-package tajo.storage.index;
+package org.apache.tajo.storage.index;
 
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Schema;
-import tajo.storage.TupleComparator;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.storage.TupleComparator;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexProtos.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexProtos.java
index 5f9152f..254dfad 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexProtos.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexProtos.java
@@ -19,7 +19,7 @@
 // Generated by the protocol buffer compiler.  DO NOT EDIT!
 // source: IndexProtos.proto
 
-package tajo.storage.index;
+package org.apache.tajo.storage.index;
 
 public final class IndexProtos {
   private IndexProtos() {}
@@ -30,13 +30,13 @@ public final class IndexProtos {
       extends com.google.protobuf.MessageOrBuilder {
     
     // repeated .SortSpecProto sortSpecs = 1;
-    java.util.List<tajo.catalog.proto.CatalogProtos.SortSpecProto> 
+    java.util.List<org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto> 
         getSortSpecsList();
-    tajo.catalog.proto.CatalogProtos.SortSpecProto getSortSpecs(int index);
+    org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto getSortSpecs(int index);
     int getSortSpecsCount();
-    java.util.List<? extends tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder> 
+    java.util.List<? extends org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder> 
         getSortSpecsOrBuilderList();
-    tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder getSortSpecsOrBuilder(
+    org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder getSortSpecsOrBuilder(
         int index);
   }
   public static final class TupleComparatorProto extends
@@ -59,31 +59,31 @@ public final class IndexProtos {
     
     public static final com.google.protobuf.Descriptors.Descriptor
         getDescriptor() {
-      return tajo.storage.index.IndexProtos.internal_static_TupleComparatorProto_descriptor;
+      return org.apache.tajo.storage.index.IndexProtos.internal_static_TupleComparatorProto_descriptor;
     }
     
     protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
         internalGetFieldAccessorTable() {
-      return tajo.storage.index.IndexProtos.internal_static_TupleComparatorProto_fieldAccessorTable;
+      return org.apache.tajo.storage.index.IndexProtos.internal_static_TupleComparatorProto_fieldAccessorTable;
     }
     
     // repeated .SortSpecProto sortSpecs = 1;
     public static final int SORTSPECS_FIELD_NUMBER = 1;
-    private java.util.List<tajo.catalog.proto.CatalogProtos.SortSpecProto> sortSpecs_;
-    public java.util.List<tajo.catalog.proto.CatalogProtos.SortSpecProto> getSortSpecsList() {
+    private java.util.List<org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto> sortSpecs_;
+    public java.util.List<org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto> getSortSpecsList() {
       return sortSpecs_;
     }
-    public java.util.List<? extends tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder> 
+    public java.util.List<? extends org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder> 
         getSortSpecsOrBuilderList() {
       return sortSpecs_;
     }
     public int getSortSpecsCount() {
       return sortSpecs_.size();
     }
-    public tajo.catalog.proto.CatalogProtos.SortSpecProto getSortSpecs(int index) {
+    public org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto getSortSpecs(int index) {
       return sortSpecs_.get(index);
     }
-    public tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder getSortSpecsOrBuilder(
+    public org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder getSortSpecsOrBuilder(
         int index) {
       return sortSpecs_.get(index);
     }
@@ -142,10 +142,10 @@ public final class IndexProtos {
       if (obj == this) {
        return true;
       }
-      if (!(obj instanceof tajo.storage.index.IndexProtos.TupleComparatorProto)) {
+      if (!(obj instanceof org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto)) {
         return super.equals(obj);
       }
-      tajo.storage.index.IndexProtos.TupleComparatorProto other = (tajo.storage.index.IndexProtos.TupleComparatorProto) obj;
+      org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto other = (org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto) obj;
       
       boolean result = true;
       result = result && getSortSpecsList()
@@ -167,41 +167,41 @@ public final class IndexProtos {
       return hash;
     }
     
-    public static tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
+    public static org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
         com.google.protobuf.ByteString data)
         throws com.google.protobuf.InvalidProtocolBufferException {
       return newBuilder().mergeFrom(data).buildParsed();
     }
-    public static tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
+    public static org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
         com.google.protobuf.ByteString data,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
     }
-    public static tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(byte[] data)
+    public static org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(byte[] data)
         throws com.google.protobuf.InvalidProtocolBufferException {
       return newBuilder().mergeFrom(data).buildParsed();
     }
-    public static tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
+    public static org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
         byte[] data,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       return newBuilder().mergeFrom(data, extensionRegistry)
                .buildParsed();
     }
-    public static tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(java.io.InputStream input)
+    public static org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(java.io.InputStream input)
         throws java.io.IOException {
       return newBuilder().mergeFrom(input).buildParsed();
     }
-    public static tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
+    public static org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
         java.io.InputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws java.io.IOException {
       return newBuilder().mergeFrom(input, extensionRegistry)
                .buildParsed();
     }
-    public static tajo.storage.index.IndexProtos.TupleComparatorProto parseDelimitedFrom(java.io.InputStream input)
+    public static org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto parseDelimitedFrom(java.io.InputStream input)
         throws java.io.IOException {
       Builder builder = newBuilder();
       if (builder.mergeDelimitedFrom(input)) {
@@ -210,7 +210,7 @@ public final class IndexProtos {
         return null;
       }
     }
-    public static tajo.storage.index.IndexProtos.TupleComparatorProto parseDelimitedFrom(
+    public static org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto parseDelimitedFrom(
         java.io.InputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws java.io.IOException {
@@ -221,12 +221,12 @@ public final class IndexProtos {
         return null;
       }
     }
-    public static tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
+    public static org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
         com.google.protobuf.CodedInputStream input)
         throws java.io.IOException {
       return newBuilder().mergeFrom(input).buildParsed();
     }
-    public static tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
+    public static org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto parseFrom(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws java.io.IOException {
@@ -236,7 +236,7 @@ public final class IndexProtos {
     
     public static Builder newBuilder() { return Builder.create(); }
     public Builder newBuilderForType() { return newBuilder(); }
-    public static Builder newBuilder(tajo.storage.index.IndexProtos.TupleComparatorProto prototype) {
+    public static Builder newBuilder(org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto prototype) {
       return newBuilder().mergeFrom(prototype);
     }
     public Builder toBuilder() { return newBuilder(this); }
@@ -249,18 +249,18 @@ public final class IndexProtos {
     }
     public static final class Builder extends
         com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements tajo.storage.index.IndexProtos.TupleComparatorProtoOrBuilder {
+       implements org.apache.tajo.storage.index.IndexProtos.TupleComparatorProtoOrBuilder {
       public static final com.google.protobuf.Descriptors.Descriptor
           getDescriptor() {
-        return tajo.storage.index.IndexProtos.internal_static_TupleComparatorProto_descriptor;
+        return org.apache.tajo.storage.index.IndexProtos.internal_static_TupleComparatorProto_descriptor;
       }
       
       protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
           internalGetFieldAccessorTable() {
-        return tajo.storage.index.IndexProtos.internal_static_TupleComparatorProto_fieldAccessorTable;
+        return org.apache.tajo.storage.index.IndexProtos.internal_static_TupleComparatorProto_fieldAccessorTable;
       }
       
-      // Construct using tajo.index.IndexProtos.TupleComparatorProto.newBuilder()
+      // Construct using org.apache.tajo.index.IndexProtos.TupleComparatorProto.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
@@ -295,24 +295,24 @@ public final class IndexProtos {
       
       public com.google.protobuf.Descriptors.Descriptor
           getDescriptorForType() {
-        return tajo.storage.index.IndexProtos.TupleComparatorProto.getDescriptor();
+        return org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto.getDescriptor();
       }
       
-      public tajo.storage.index.IndexProtos.TupleComparatorProto getDefaultInstanceForType() {
-        return tajo.storage.index.IndexProtos.TupleComparatorProto.getDefaultInstance();
+      public org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto getDefaultInstanceForType() {
+        return org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto.getDefaultInstance();
       }
       
-      public tajo.storage.index.IndexProtos.TupleComparatorProto build() {
-        tajo.storage.index.IndexProtos.TupleComparatorProto result = buildPartial();
+      public org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto build() {
+        org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto result = buildPartial();
         if (!result.isInitialized()) {
           throw newUninitializedMessageException(result);
         }
         return result;
       }
       
-      private tajo.storage.index.IndexProtos.TupleComparatorProto buildParsed()
+      private org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto buildParsed()
           throws com.google.protobuf.InvalidProtocolBufferException {
-        tajo.storage.index.IndexProtos.TupleComparatorProto result = buildPartial();
+        org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto result = buildPartial();
         if (!result.isInitialized()) {
           throw newUninitializedMessageException(
             result).asInvalidProtocolBufferException();
@@ -320,8 +320,8 @@ public final class IndexProtos {
         return result;
       }
       
-      public tajo.storage.index.IndexProtos.TupleComparatorProto buildPartial() {
-        tajo.storage.index.IndexProtos.TupleComparatorProto result = new tajo.storage.index.IndexProtos.TupleComparatorProto(this);
+      public org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto buildPartial() {
+        org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto result = new org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto(this);
         int from_bitField0_ = bitField0_;
         if (sortSpecsBuilder_ == null) {
           if (((bitField0_ & 0x00000001) == 0x00000001)) {
@@ -337,16 +337,16 @@ public final class IndexProtos {
       }
       
       public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof tajo.storage.index.IndexProtos.TupleComparatorProto) {
-          return mergeFrom((tajo.storage.index.IndexProtos.TupleComparatorProto)other);
+        if (other instanceof org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto) {
+          return mergeFrom((org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto)other);
         } else {
           super.mergeFrom(other);
           return this;
         }
       }
       
-      public Builder mergeFrom(tajo.storage.index.IndexProtos.TupleComparatorProto other) {
-        if (other == tajo.storage.index.IndexProtos.TupleComparatorProto.getDefaultInstance()) return this;
+      public Builder mergeFrom(org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto other) {
+        if (other == org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto.getDefaultInstance()) return this;
         if (sortSpecsBuilder_ == null) {
           if (!other.sortSpecs_.isEmpty()) {
             if (sortSpecs_.isEmpty()) {
@@ -411,7 +411,7 @@ public final class IndexProtos {
               break;
             }
             case 10: {
-              tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder subBuilder = tajo.catalog.proto.CatalogProtos.SortSpecProto.newBuilder();
+              org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder subBuilder = org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.newBuilder();
               input.readMessage(subBuilder, extensionRegistry);
               addSortSpecs(subBuilder.buildPartial());
               break;
@@ -423,19 +423,19 @@ public final class IndexProtos {
       private int bitField0_;
       
       // repeated .SortSpecProto sortSpecs = 1;
-      private java.util.List<tajo.catalog.proto.CatalogProtos.SortSpecProto> sortSpecs_ =
+      private java.util.List<org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto> sortSpecs_ =
         java.util.Collections.emptyList();
       private void ensureSortSpecsIsMutable() {
         if (!((bitField0_ & 0x00000001) == 0x00000001)) {
-          sortSpecs_ = new java.util.ArrayList<tajo.catalog.proto.CatalogProtos.SortSpecProto>(sortSpecs_);
+          sortSpecs_ = new java.util.ArrayList<org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto>(sortSpecs_);
           bitField0_ |= 0x00000001;
          }
       }
       
       private com.google.protobuf.RepeatedFieldBuilder<
-          tajo.catalog.proto.CatalogProtos.SortSpecProto, tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder, tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder> sortSpecsBuilder_;
+          org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto, org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder, org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder> sortSpecsBuilder_;
       
-      public java.util.List<tajo.catalog.proto.CatalogProtos.SortSpecProto> getSortSpecsList() {
+      public java.util.List<org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto> getSortSpecsList() {
         if (sortSpecsBuilder_ == null) {
           return java.util.Collections.unmodifiableList(sortSpecs_);
         } else {
@@ -449,7 +449,7 @@ public final class IndexProtos {
           return sortSpecsBuilder_.getCount();
         }
       }
-      public tajo.catalog.proto.CatalogProtos.SortSpecProto getSortSpecs(int index) {
+      public org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto getSortSpecs(int index) {
         if (sortSpecsBuilder_ == null) {
           return sortSpecs_.get(index);
         } else {
@@ -457,7 +457,7 @@ public final class IndexProtos {
         }
       }
       public Builder setSortSpecs(
-          int index, tajo.catalog.proto.CatalogProtos.SortSpecProto value) {
+          int index, org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto value) {
         if (sortSpecsBuilder_ == null) {
           if (value == null) {
             throw new NullPointerException();
@@ -471,7 +471,7 @@ public final class IndexProtos {
         return this;
       }
       public Builder setSortSpecs(
-          int index, tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder builderForValue) {
+          int index, org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder builderForValue) {
         if (sortSpecsBuilder_ == null) {
           ensureSortSpecsIsMutable();
           sortSpecs_.set(index, builderForValue.build());
@@ -481,7 +481,7 @@ public final class IndexProtos {
         }
         return this;
       }
-      public Builder addSortSpecs(tajo.catalog.proto.CatalogProtos.SortSpecProto value) {
+      public Builder addSortSpecs(org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto value) {
         if (sortSpecsBuilder_ == null) {
           if (value == null) {
             throw new NullPointerException();
@@ -495,7 +495,7 @@ public final class IndexProtos {
         return this;
       }
       public Builder addSortSpecs(
-          int index, tajo.catalog.proto.CatalogProtos.SortSpecProto value) {
+          int index, org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto value) {
         if (sortSpecsBuilder_ == null) {
           if (value == null) {
             throw new NullPointerException();
@@ -509,7 +509,7 @@ public final class IndexProtos {
         return this;
       }
       public Builder addSortSpecs(
-          tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder builderForValue) {
+          org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder builderForValue) {
         if (sortSpecsBuilder_ == null) {
           ensureSortSpecsIsMutable();
           sortSpecs_.add(builderForValue.build());
@@ -520,7 +520,7 @@ public final class IndexProtos {
         return this;
       }
       public Builder addSortSpecs(
-          int index, tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder builderForValue) {
+          int index, org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder builderForValue) {
         if (sortSpecsBuilder_ == null) {
           ensureSortSpecsIsMutable();
           sortSpecs_.add(index, builderForValue.build());
@@ -531,7 +531,7 @@ public final class IndexProtos {
         return this;
       }
       public Builder addAllSortSpecs(
-          java.lang.Iterable<? extends tajo.catalog.proto.CatalogProtos.SortSpecProto> values) {
+          java.lang.Iterable<? extends org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto> values) {
         if (sortSpecsBuilder_ == null) {
           ensureSortSpecsIsMutable();
           super.addAll(values, sortSpecs_);
@@ -561,18 +561,18 @@ public final class IndexProtos {
         }
         return this;
       }
-      public tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder getSortSpecsBuilder(
+      public org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder getSortSpecsBuilder(
           int index) {
         return getSortSpecsFieldBuilder().getBuilder(index);
       }
-      public tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder getSortSpecsOrBuilder(
+      public org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder getSortSpecsOrBuilder(
           int index) {
         if (sortSpecsBuilder_ == null) {
           return sortSpecs_.get(index);  } else {
           return sortSpecsBuilder_.getMessageOrBuilder(index);
         }
       }
-      public java.util.List<? extends tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder> 
+      public java.util.List<? extends org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder> 
            getSortSpecsOrBuilderList() {
         if (sortSpecsBuilder_ != null) {
           return sortSpecsBuilder_.getMessageOrBuilderList();
@@ -580,25 +580,25 @@ public final class IndexProtos {
           return java.util.Collections.unmodifiableList(sortSpecs_);
         }
       }
-      public tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder addSortSpecsBuilder() {
+      public org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder addSortSpecsBuilder() {
         return getSortSpecsFieldBuilder().addBuilder(
-            tajo.catalog.proto.CatalogProtos.SortSpecProto.getDefaultInstance());
+            org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.getDefaultInstance());
       }
-      public tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder addSortSpecsBuilder(
+      public org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder addSortSpecsBuilder(
           int index) {
         return getSortSpecsFieldBuilder().addBuilder(
-            index, tajo.catalog.proto.CatalogProtos.SortSpecProto.getDefaultInstance());
+            index, org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.getDefaultInstance());
       }
-      public java.util.List<tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder> 
+      public java.util.List<org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder> 
            getSortSpecsBuilderList() {
         return getSortSpecsFieldBuilder().getBuilderList();
       }
       private com.google.protobuf.RepeatedFieldBuilder<
-          tajo.catalog.proto.CatalogProtos.SortSpecProto, tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder, tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder> 
+          org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto, org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder, org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder> 
           getSortSpecsFieldBuilder() {
         if (sortSpecsBuilder_ == null) {
           sortSpecsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
-              tajo.catalog.proto.CatalogProtos.SortSpecProto, tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder, tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder>(
+              org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto, org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProto.Builder, org.apache.tajo.catalog.proto.CatalogProtos.SortSpecProtoOrBuilder>(
                   sortSpecs_,
                   ((bitField0_ & 0x00000001) == 0x00000001),
                   getParentForChildren(),
@@ -635,7 +635,7 @@ public final class IndexProtos {
     java.lang.String[] descriptorData = {
       "\n\021IndexProtos.proto\032\023CatalogProtos.proto" +
       "\"9\n\024TupleComparatorProto\022!\n\tsortSpecs\030\001 " +
-      "\003(\0132\016.SortSpecProtoB!\n\ntajo.indexB\013Index" +
+      "\003(\0132\016.SortSpecProtoB!\n\norg.apache.tajo.indexB\013Index" +
       "ProtosH\001\210\001\000\240\001\001"
     };
     com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
@@ -649,15 +649,15 @@ public final class IndexProtos {
             com.google.protobuf.GeneratedMessage.FieldAccessorTable(
               internal_static_TupleComparatorProto_descriptor,
               new java.lang.String[] { "SortSpecs", },
-              tajo.storage.index.IndexProtos.TupleComparatorProto.class,
-              tajo.storage.index.IndexProtos.TupleComparatorProto.Builder.class);
+              org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto.class,
+              org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto.Builder.class);
           return null;
         }
       };
     com.google.protobuf.Descriptors.FileDescriptor
       .internalBuildGeneratedFileFrom(descriptorData,
         new com.google.protobuf.Descriptors.FileDescriptor[] {
-          tajo.catalog.proto.CatalogProtos.getDescriptor(),
+          org.apache.tajo.catalog.proto.CatalogProtos.getDescriptor(),
         }, assigner);
   }
   
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexReader.java
index 3c4fcad..7baf7aa 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexReader.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.storage.index;
+package org.apache.tajo.storage.index;
 
-import tajo.storage.Tuple;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexWriter.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexWriter.java
index df8ae1a..04738f8 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexWriter.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/IndexWriter.java
@@ -19,9 +19,9 @@
 /**
  * 
  */
-package tajo.storage.index;
+package org.apache.tajo.storage.index;
 
-import tajo.storage.Tuple;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/OrderIndexReader.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/OrderIndexReader.java
index 38b4a4b..688bbc7 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/OrderIndexReader.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/OrderIndexReader.java
@@ -19,9 +19,9 @@
 /**
  * 
  */
-package tajo.storage.index;
+package org.apache.tajo.storage.index;
 
-import tajo.storage.Tuple;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/bst/BSTIndex.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/bst/BSTIndex.java
index 2d6ae32..593787e 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/bst/BSTIndex.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/index/bst/BSTIndex.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.index.bst;
+package org.apache.tajo.storage.index.bst;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -25,15 +25,15 @@ import org.apache.hadoop.fs.FSDataInputStream;
 import org.apache.hadoop.fs.FSDataOutputStream;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Schema;
-import tajo.catalog.proto.CatalogProtos.SchemaProto;
-import tajo.storage.RowStoreUtil;
-import tajo.storage.Tuple;
-import tajo.storage.TupleComparator;
-import tajo.storage.index.IndexMethod;
-import tajo.storage.index.IndexProtos.TupleComparatorProto;
-import tajo.storage.index.IndexWriter;
-import tajo.storage.index.OrderIndexReader;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.proto.CatalogProtos.SchemaProto;
+import org.apache.tajo.storage.RowStoreUtil;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.TupleComparator;
+import org.apache.tajo.storage.index.IndexMethod;
+import org.apache.tajo.storage.index.IndexProtos.TupleComparatorProto;
+import org.apache.tajo.storage.index.IndexWriter;
+import org.apache.tajo.storage.index.OrderIndexReader;
 
 import java.io.Closeable;
 import java.io.FileNotFoundException;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/json/FragmentDeserializer.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/json/FragmentDeserializer.java
index d889500..35bf016 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/json/FragmentDeserializer.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/json/FragmentDeserializer.java
@@ -19,15 +19,15 @@
 /**
  * 
  */
-package tajo.storage.json;
+package org.apache.tajo.storage.json;
 
 import com.google.gson.*;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.Options;
-import tajo.catalog.Schema;
-import tajo.catalog.TableMetaImpl;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.storage.Fragment;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TableMetaImpl;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.storage.Fragment;
 
 import java.lang.reflect.Type;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/json/GsonCreator.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/json/GsonCreator.java
index db8b111..6f51332 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/json/GsonCreator.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/json/GsonCreator.java
@@ -19,23 +19,23 @@
 /**
  * 
  */
-package tajo.storage.json;
+package org.apache.tajo.storage.json;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import org.apache.hadoop.fs.Path;
-import tajo.catalog.TableDesc;
-import tajo.catalog.TableMeta;
-import tajo.catalog.function.AggFunction;
-import tajo.catalog.function.Function;
-import tajo.catalog.function.GeneralFunction;
-import tajo.catalog.json.FunctionAdapter;
-import tajo.catalog.json.TableDescAdapter;
-import tajo.catalog.json.TableMetaAdapter;
-import tajo.datum.Datum;
-import tajo.datum.json.DatumAdapter;
-import tajo.gson.*;
-import tajo.storage.Fragment;
+import org.apache.tajo.catalog.TableDesc;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.function.AggFunction;
+import org.apache.tajo.catalog.function.Function;
+import org.apache.tajo.catalog.function.GeneralFunction;
+import org.apache.tajo.catalog.json.FunctionAdapter;
+import org.apache.tajo.catalog.json.TableDescAdapter;
+import org.apache.tajo.catalog.json.TableMetaAdapter;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.json.DatumAdapter;
+import org.apache.tajo.gson.*;
+import org.apache.tajo.storage.Fragment;
 
 public class GsonCreator {
 	private static GsonBuilder builder;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/BytesRefArrayWritable.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/BytesRefArrayWritable.java
index 5ec8d73..512b074 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/BytesRefArrayWritable.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/BytesRefArrayWritable.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import org.apache.hadoop.io.Writable;
 import org.apache.hadoop.io.WritableFactories;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/BytesRefWritable.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/BytesRefWritable.java
index 02fcbfb..1ffe6ad 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/BytesRefWritable.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/BytesRefWritable.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import org.apache.hadoop.io.Writable;
 import org.apache.hadoop.io.WritableComparator;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/CodecPool.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/CodecPool.java
index cac62c4..e8f9b5c 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/CodecPool.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/CodecPool.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/ColumnProjectionUtils.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/ColumnProjectionUtils.java
index 8dbd25a..352776f 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/ColumnProjectionUtils.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/ColumnProjectionUtils.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.util.StringUtils;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/LazyDecompressionCallback.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/LazyDecompressionCallback.java
index 05c2e26..707d55a 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/LazyDecompressionCallback.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/LazyDecompressionCallback.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncByteArrayInputStream.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncByteArrayInputStream.java
index 8520bd6..2b51eb1 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncByteArrayInputStream.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncByteArrayInputStream.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import java.io.ByteArrayInputStream;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncByteArrayOutputStream.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncByteArrayOutputStream.java
index 87744f1..704389c 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncByteArrayOutputStream.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncByteArrayOutputStream.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import java.io.ByteArrayOutputStream;
 import java.io.DataInput;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncDataInputBuffer.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncDataInputBuffer.java
index 2726b2c..d9a942b 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncDataInputBuffer.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncDataInputBuffer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import java.io.*;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncDataOutputBuffer.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncDataOutputBuffer.java
index d7e69fa..1a0f906 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncDataOutputBuffer.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/NonSyncDataOutputBuffer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import java.io.DataInput;
 import java.io.DataOutputStream;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/RCFile.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/RCFile.java
index d93c35b..7920dfa 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/RCFile.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/RCFile.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -28,7 +28,7 @@ import org.apache.hadoop.io.SequenceFile.Metadata;
 import org.apache.hadoop.io.compress.*;
 import org.apache.hadoop.util.Progressable;
 import org.apache.hadoop.util.ReflectionUtils;
-import tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf;
 
 import java.io.*;
 import java.rmi.server.UID;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/RCFileWrapper.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/RCFileWrapper.java
index e04cd52..52d1adb 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/RCFileWrapper.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/RCFileWrapper.java
@@ -16,22 +16,22 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.io.LongWritable;
 import org.apache.hadoop.io.compress.DefaultCodec;
-import tajo.catalog.Column;
-import tajo.catalog.TableMeta;
-import tajo.catalog.statistics.TableStat;
-import tajo.datum.ArrayDatum;
-import tajo.datum.DatumFactory;
-import tajo.storage.*;
-import tajo.storage.exception.AlreadyExistsStorageException;
-import tajo.util.Bytes;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.datum.ArrayDatum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.storage.exception.AlreadyExistsStorageException;
+import org.apache.tajo.util.Bytes;
+import org.apache.tajo.util.TUtil;
 
 import java.io.IOException;
 import java.util.ArrayList;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/SchemaAwareCompressionInputStream.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/SchemaAwareCompressionInputStream.java
index b1afca5..60f1b06 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/SchemaAwareCompressionInputStream.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/SchemaAwareCompressionInputStream.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import org.apache.hadoop.io.compress.CompressionInputStream;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/SchemaAwareCompressionOutputStream.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/SchemaAwareCompressionOutputStream.java
index 3d1b174..c0ce8b3 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/SchemaAwareCompressionOutputStream.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/rcfile/SchemaAwareCompressionOutputStream.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import org.apache.hadoop.io.compress.CompressionOutputStream;
 
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/trevni/TrevniAppender.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/trevni/TrevniAppender.java
index e7b30df..f5199e8 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/trevni/TrevniAppender.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/trevni/TrevniAppender.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.trevni;
+package org.apache.tajo.storage.trevni;
 
 import org.apache.commons.io.IOUtils;
 import org.apache.hadoop.conf.Configuration;
@@ -27,17 +27,17 @@ import org.apache.trevni.ColumnFileMetaData;
 import org.apache.trevni.ColumnFileWriter;
 import org.apache.trevni.ColumnMetaData;
 import org.apache.trevni.ValueType;
-import tajo.catalog.Column;
-import tajo.catalog.TableMeta;
-import tajo.catalog.statistics.TableStat;
-import tajo.storage.FileAppender;
-import tajo.storage.TableStatistics;
-import tajo.storage.Tuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.storage.FileAppender;
+import org.apache.tajo.storage.TableStatistics;
+import org.apache.tajo.storage.Tuple;
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
 
-import static tajo.catalog.proto.CatalogProtos.DataType;
+import static org.apache.tajo.catalog.proto.CatalogProtos.DataType;
 
 public class TrevniAppender extends FileAppender {
   private FileSystem fs;
diff --git tajo-core/tajo-core-storage/src/main/java/tajo/storage/trevni/TrevniScanner.java tajo-core/tajo-core-storage/src/main/java/tajo/storage/trevni/TrevniScanner.java
index 6fb05bd..9dee363 100644
--- tajo-core/tajo-core-storage/src/main/java/tajo/storage/trevni/TrevniScanner.java
+++ tajo-core/tajo-core-storage/src/main/java/tajo/storage/trevni/TrevniScanner.java
@@ -16,20 +16,20 @@
  * limitations under the License.
  */
 
-package tajo.storage.trevni;
+package org.apache.tajo.storage.trevni;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.trevni.ColumnFileReader;
 import org.apache.trevni.ColumnValues;
 import org.apache.trevni.avro.HadoopInput;
-import tajo.catalog.Column;
-import tajo.catalog.TableMeta;
-import tajo.datum.BytesDatum;
-import tajo.datum.DatumFactory;
-import tajo.storage.FileScanner;
-import tajo.storage.Fragment;
-import tajo.storage.Tuple;
-import tajo.storage.VTuple;
+import org.apache.tajo.catalog.Column;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.datum.BytesDatum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.FileScanner;
+import org.apache.tajo.storage.Fragment;
+import org.apache.tajo.storage.Tuple;
+import org.apache.tajo.storage.VTuple;
 
 import java.io.IOException;
 import java.nio.ByteBuffer;
diff --git tajo-core/tajo-core-storage/src/main/proto/CatalogProtos.proto tajo-core/tajo-core-storage/src/main/proto/CatalogProtos.proto
index 3910520..41bf9c8 100644
--- tajo-core/tajo-core-storage/src/main/proto/CatalogProtos.proto
+++ tajo-core/tajo-core-storage/src/main/proto/CatalogProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.catalog.proto";
+option java_package = "org.apache.tajo.catalog.proto";
 option java_outer_classname = "CatalogProtos";
 option optimize_for = SPEED;
 option java_generic_services = false;
diff --git tajo-core/tajo-core-storage/src/main/proto/IndexProtos.proto tajo-core/tajo-core-storage/src/main/proto/IndexProtos.proto
index c0be4bd..e89677d 100644
--- tajo-core/tajo-core-storage/src/main/proto/IndexProtos.proto
+++ tajo-core/tajo-core-storage/src/main/proto/IndexProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.index";
+option java_package = "org.apache.tajo.index";
 option java_outer_classname = "IndexProtos";
 option optimize_for = SPEED;
 option java_generic_services = false;
diff --git tajo-core/tajo-core-storage/src/main/proto/PrimitiveProtos.proto tajo-core/tajo-core-storage/src/main/proto/PrimitiveProtos.proto
index 5fa6903..e722190 100644
--- tajo-core/tajo-core-storage/src/main/proto/PrimitiveProtos.proto
+++ tajo-core/tajo-core-storage/src/main/proto/PrimitiveProtos.proto
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.rpc.protocolrecords";
+option java_package = "org.apache.tajo.rpc.protocolrecords";
 option java_outer_classname = "PrimitiveProtos";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestFrameTuple.java tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestFrameTuple.java
index 7287c6f..c5ed54f 100644
--- tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestFrameTuple.java
+++ tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestFrameTuple.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
diff --git tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestMergeScanner.java tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestMergeScanner.java
index 7688a1d..53d8f6a 100644
--- tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestMergeScanner.java
+++ tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestMergeScanner.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.fs.FileSystem;
@@ -26,18 +26,18 @@ import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.Parameterized;
 import org.junit.runners.Parameterized.Parameters;
-import tajo.catalog.Options;
-import tajo.catalog.Schema;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.statistics.TableStat;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.datum.DatumFactory;
-import tajo.util.CommonTestingUtil;
-import tajo.util.TUtil;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.util.CommonTestingUtil;
+import org.apache.tajo.util.TUtil;
 
 import java.io.IOException;
 import java.util.Arrays;
diff --git tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestStorageManager.java tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestStorageManager.java
index 00215a0..a3d090f 100644
--- tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestStorageManager.java
+++ tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestStorageManager.java
@@ -16,22 +16,22 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.catalog.Schema;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.util.CommonTestingUtil;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.util.CommonTestingUtil;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestStorages.java tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestStorages.java
index d351edf..b071c5b 100644
--- tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestStorages.java
+++ tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestStorages.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.fs.FileSystem;
@@ -24,18 +24,18 @@ import org.apache.hadoop.fs.Path;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.Parameterized;
-import tajo.catalog.Options;
-import tajo.catalog.Schema;
-import tajo.catalog.TCatUtil;
-import tajo.catalog.TableMeta;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.catalog.statistics.TableStat;
-import tajo.conf.TajoConf;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
-import tajo.storage.rcfile.RCFile;
-import tajo.util.CommonTestingUtil;
+import org.apache.tajo.catalog.Options;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.TCatUtil;
+import org.apache.tajo.catalog.TableMeta;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.catalog.statistics.TableStat;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.rcfile.RCFile;
+import org.apache.tajo.util.CommonTestingUtil;
 
 import java.io.IOException;
 import java.util.Arrays;
diff --git tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestTupleComparator.java tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestTupleComparator.java
index e37b3e5..3c376c7 100644
--- tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestTupleComparator.java
+++ tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestTupleComparator.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.catalog.Schema;
-import tajo.catalog.SortSpec;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.datum.Datum;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.catalog.Schema;
+import org.apache.tajo.catalog.SortSpec;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.datum.Datum;
+import org.apache.tajo.datum.DatumFactory;
 
 import static org.junit.Assert.assertEquals;
 
diff --git tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestVTuple.java tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestVTuple.java
index cebbae7..90ec773 100644
--- tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestVTuple.java
+++ tajo-core/tajo-core-storage/src/test/java/tajo/storage/TestVTuple.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.storage;
+package org.apache.tajo.storage;
 
 
 import org.junit.Before;
 import org.junit.Test;
-import tajo.datum.DatumFactory;
+import org.apache.tajo.datum.DatumFactory;
 
 import static org.junit.Assert.*;
 
diff --git tajo-core/tajo-core-storage/src/test/java/tajo/storage/hcfile/IndexTest.java tajo-core/tajo-core-storage/src/test/java/tajo/storage/hcfile/IndexTest.java
index 0299a0e..fc47d6d 100644
--- tajo-core/tajo-core-storage/src/test/java/tajo/storage/hcfile/IndexTest.java
+++ tajo-core/tajo-core-storage/src/test/java/tajo/storage/hcfile/IndexTest.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.hcfile;
+package org.apache.tajo.storage.hcfile;
 
 import org.junit.Test;
 
diff --git tajo-core/tajo-core-storage/src/test/java/tajo/storage/index/TestBSTIndex.java tajo-core/tajo-core-storage/src/test/java/tajo/storage/index/TestBSTIndex.java
index 85c7beb..547f23c 100644
--- tajo-core/tajo-core-storage/src/test/java/tajo/storage/index/TestBSTIndex.java
+++ tajo-core/tajo-core-storage/src/test/java/tajo/storage/index/TestBSTIndex.java
@@ -16,23 +16,23 @@
  * limitations under the License.
  */
 
-package tajo.storage.index;
+package org.apache.tajo.storage.index;
 
 import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.datum.DatumFactory;
-import tajo.storage.*;
-import tajo.storage.index.bst.BSTIndex;
-import tajo.storage.index.bst.BSTIndex.BSTIndexReader;
-import tajo.storage.index.bst.BSTIndex.BSTIndexWriter;
-import tajo.util.CommonTestingUtil;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.storage.index.bst.BSTIndex;
+import org.apache.tajo.storage.index.bst.BSTIndex.BSTIndexReader;
+import org.apache.tajo.storage.index.bst.BSTIndex.BSTIndexWriter;
+import org.apache.tajo.util.CommonTestingUtil;
 
 import java.io.IOException;
 
diff --git tajo-core/tajo-core-storage/src/test/java/tajo/storage/index/TestSingleCSVFileBSTIndex.java tajo-core/tajo-core-storage/src/test/java/tajo/storage/index/TestSingleCSVFileBSTIndex.java
index e0ae7b3..4a3d2da 100644
--- tajo-core/tajo-core-storage/src/test/java/tajo/storage/index/TestSingleCSVFileBSTIndex.java
+++ tajo-core/tajo-core-storage/src/test/java/tajo/storage/index/TestSingleCSVFileBSTIndex.java
@@ -16,30 +16,30 @@
  * limitations under the License.
  */
 
-package tajo.storage.index;
+package org.apache.tajo.storage.index;
 
 import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.catalog.*;
-import tajo.catalog.proto.CatalogProtos.DataType;
-import tajo.catalog.proto.CatalogProtos.StoreType;
-import tajo.conf.TajoConf;
-import tajo.conf.TajoConf.ConfVars;
-import tajo.datum.DatumFactory;
-import tajo.storage.*;
-import tajo.storage.index.bst.BSTIndex;
-import tajo.storage.index.bst.BSTIndex.BSTIndexReader;
-import tajo.storage.index.bst.BSTIndex.BSTIndexWriter;
-import tajo.util.CommonTestingUtil;
+import org.apache.tajo.catalog.*;
+import org.apache.tajo.catalog.proto.CatalogProtos.DataType;
+import org.apache.tajo.catalog.proto.CatalogProtos.StoreType;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.conf.TajoConf.ConfVars;
+import org.apache.tajo.datum.DatumFactory;
+import org.apache.tajo.storage.*;
+import org.apache.tajo.storage.index.bst.BSTIndex;
+import org.apache.tajo.storage.index.bst.BSTIndex.BSTIndexReader;
+import org.apache.tajo.storage.index.bst.BSTIndex.BSTIndexWriter;
+import org.apache.tajo.util.CommonTestingUtil;
 
 import java.io.IOException;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
-import static tajo.storage.CSVFile.CSVScanner;
+import static org.apache.tajo.storage.CSVFile.CSVScanner;
 
 public class TestSingleCSVFileBSTIndex {
   
diff --git tajo-core/tajo-core-storage/src/test/java/tajo/storage/rcfile/TestRCFile.java tajo-core/tajo-core-storage/src/test/java/tajo/storage/rcfile/TestRCFile.java
index 315b0ed..9bf9ffc 100644
--- tajo-core/tajo-core-storage/src/test/java/tajo/storage/rcfile/TestRCFile.java
+++ tajo-core/tajo-core-storage/src/test/java/tajo/storage/rcfile/TestRCFile.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.storage.rcfile;
+package org.apache.tajo.storage.rcfile;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -28,8 +28,8 @@ import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.io.*;
 import org.apache.hadoop.io.compress.DefaultCodec;
 import org.junit.Test;
-import tajo.conf.TajoConf;
-import tajo.datum.*;
+import org.apache.tajo.conf.TajoConf;
+import org.apache.tajo.datum.*;
 
 import java.io.DataInputStream;
 import java.io.IOException;
@@ -131,7 +131,7 @@ public class TestRCFile {
     r1[idx++] = DatumFactory.createLong(456);
     r1[idx++] = DatumFactory.createFloat(7.89f);
     r1[idx++] = DatumFactory.createDouble(10.11d);
-    r1[idx] = DatumFactory.createString("tajo and hadoop");
+    r1[idx] = DatumFactory.createString("org.apache.tajo and hadoop");
 
 //    byte[][] record_1 = {
 //        "123".getBytes("UTF-8"), "456".getBytes("UTF-8"),
diff --git tajo-frontend/tajo-frontend-sql/src/main/antlr3/tajo/frontend/sql/SQLLexer.g tajo-frontend/tajo-frontend-sql/src/main/antlr3/tajo/frontend/sql/SQLLexer.g
index 1023778..40a0a4d 100644
--- tajo-frontend/tajo-frontend-sql/src/main/antlr3/tajo/frontend/sql/SQLLexer.g
+++ tajo-frontend/tajo-frontend-sql/src/main/antlr3/tajo/frontend/sql/SQLLexer.g
@@ -62,9 +62,9 @@ options{
 }
 
 @header {
-package tajo.frontend.sql;
+package org.apache.tajo.frontend.sql;
 
-import tajo.frontend.sql.SQLParseError;
+import org.apache.tajo.frontend.sql.SQLParseError;
 }
 
 @members {
diff --git tajo-frontend/tajo-frontend-sql/src/main/antlr3/tajo/frontend/sql/SQLParser.g tajo-frontend/tajo-frontend-sql/src/main/antlr3/tajo/frontend/sql/SQLParser.g
index 4264f0b..19b078b 100644
--- tajo-frontend/tajo-frontend-sql/src/main/antlr3/tajo/frontend/sql/SQLParser.g
+++ tajo-frontend/tajo-frontend-sql/src/main/antlr3/tajo/frontend/sql/SQLParser.g
@@ -101,11 +101,11 @@ tokens {
 }
 
 @header {
-package tajo.frontend.sql;
+package org.apache.tajo.frontend.sql;
 
 import java.util.List;
 import java.util.ArrayList;
-import tajo.frontend.sql.SQLParseError;
+import org.apache.tajo.frontend.sql.SQLParseError;
 }
 
 @members {
diff --git tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/QueryBlock.java tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/QueryBlock.java
index 7566c20..0f2042d 100644
--- tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/QueryBlock.java
+++ tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/QueryBlock.java
@@ -16,9 +16,9 @@
  * limitations under the License.
  */
 
-package tajo.frontend.sql;
+package org.apache.tajo.frontend.sql;
 
-import tajo.algebra.*;
+import org.apache.tajo.algebra.*;
 
 public class QueryBlock {
   private String relName;
diff --git tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLAnalyzer.java tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLAnalyzer.java
index e962b93..9157d44 100644
--- tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLAnalyzer.java
+++ tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLAnalyzer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.frontend.sql;
+package org.apache.tajo.frontend.sql;
 
 import com.google.common.base.Preconditions;
 import org.antlr.runtime.ANTLRStringStream;
@@ -24,18 +24,18 @@ import org.antlr.runtime.CommonTokenStream;
 import org.antlr.runtime.RecognitionException;
 import org.antlr.runtime.tree.CommonTree;
 import org.antlr.runtime.tree.Tree;
-import tajo.algebra.*;
-import tajo.algebra.Aggregation.GroupElement;
-import tajo.algebra.Aggregation.GroupType;
-import tajo.algebra.LiteralExpr.LiteralType;
-import tajo.algebra.Sort.SortSpec;
+import org.apache.tajo.algebra.*;
+import org.apache.tajo.algebra.Aggregation.GroupElement;
+import org.apache.tajo.algebra.Aggregation.GroupType;
+import org.apache.tajo.algebra.LiteralExpr.LiteralType;
+import org.apache.tajo.algebra.Sort.SortSpec;
 
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
-import static tajo.algebra.CreateTable.ColumnDefinition;
+import static org.apache.tajo.algebra.CreateTable.ColumnDefinition;
 
 public class SQLAnalyzer {
 
diff --git tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLParseError.java tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLParseError.java
index 3e6a78c..d3d6d91 100644
--- tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLParseError.java
+++ tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLParseError.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.frontend.sql;
+package org.apache.tajo.frontend.sql;
 
 
 @SuppressWarnings("UnusedDeclaration")
diff --git tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLSyntaxError.java tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLSyntaxError.java
index eaff8ce..0aa1276 100644
--- tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLSyntaxError.java
+++ tajo-frontend/tajo-frontend-sql/src/main/java/tajo/frontend/sql/SQLSyntaxError.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.frontend.sql;
+package org.apache.tajo.frontend.sql;
 
 
 public class SQLSyntaxError extends Exception {
diff --git tajo-frontend/tajo-frontend-sql/src/test/java/tajo/frontend/sql/TestSQLAnalyzer.java tajo-frontend/tajo-frontend-sql/src/test/java/tajo/frontend/sql/TestSQLAnalyzer.java
index 93e12b8..7f3755c 100644
--- tajo-frontend/tajo-frontend-sql/src/test/java/tajo/frontend/sql/TestSQLAnalyzer.java
+++ tajo-frontend/tajo-frontend-sql/src/test/java/tajo/frontend/sql/TestSQLAnalyzer.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.frontend.sql;
+package org.apache.tajo.frontend.sql;
 
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.algebra.*;
-import tajo.algebra.Aggregation.GroupElement;
+import org.apache.tajo.algebra.*;
+import org.apache.tajo.algebra.Aggregation.GroupElement;
 
 import static junit.framework.Assert.*;
-import static tajo.algebra.Aggregation.GroupType;
+import static org.apache.tajo.algebra.Aggregation.GroupType;
 
 public class TestSQLAnalyzer {
   private static SQLAnalyzer analyzer = null;
diff --git tajo-frontend/tajo-frontend-sql/src/test/java/tajo/frontend/sql/TestSQLParser.java tajo-frontend/tajo-frontend-sql/src/test/java/tajo/frontend/sql/TestSQLParser.java
index e038187..da99795 100644
--- tajo-frontend/tajo-frontend-sql/src/test/java/tajo/frontend/sql/TestSQLParser.java
+++ tajo-frontend/tajo-frontend-sql/src/test/java/tajo/frontend/sql/TestSQLParser.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.frontend.sql;
+package org.apache.tajo.frontend.sql;
 
 import org.antlr.runtime.ANTLRStringStream;
 import org.antlr.runtime.CommonTokenStream;
diff --git tajo-project/src/site/apt/configuration.apt tajo-project/src/site/apt/configuration.apt
index 925a4af..ea2e4f8 100644
--- tajo-project/src/site/apt/configuration.apt
+++ tajo-project/src/site/apt/configuration.apt
@@ -52,15 +52,15 @@ Setting up catalog-site.xml
     If you want to launch a catalog server separately, specify this address.
     This config has a form of <hostname:port>. Its default value is <localhost:9002>.
 
-  * <<tajo.catalog.store.class>>
+  * <<org.apache.tajo.catalog.store.class>>
 
      If you want to change the persistent storage of the catalog server, specify the class name.
      Its default value is <tajo.catalog.store.DBStore>. In the current version, Tajo provides
      two persistent storage classes as follows:
 
-     * tajo.catalog.store.DBStore - this storage class uses Apache Derby.
+     * org.apache.tajo.catalog.store.DBStore - this storage class uses Apache Derby.
 
-     * tajo.catalog.store.MemStore - this is the in-memory storage. It is only used in unit tests
+     * org.apache.tajo.catalog.store.MemStore - this is the in-memory storage. It is only used in unit tests
      to shorten the duration of unit tests.
 
 Setting up tajo-site.xml
@@ -71,22 +71,22 @@ Setting up tajo-site.xml
 
 ---------------------------------------------------------------------
   <property>
-    <name>tajo.rootdir</name>
+    <name>org.apache.tajo.rootdir</name>
     <value>hdfs://hostname:port/tajo</value>
   </property>
 
   <property>
-    <name>tajo.cluster.distributed</name>
+    <name>org.apache.tajo.cluster.distributed</name>
     <value>true</value>
   </property>
 ---------------------------------------------------------------------
 
-  * <<tajo.rootdir>>
+  * <<org.apache.tajo.rootdir>>
 
    Specify the root directory of tajo. This parameter should be a url form
    (e.g., <hdfs://namenode_hostname:port/path>). You can also use <file://> scheme.
 
-  * <<tajo.cluster.distributed>>
+  * <<org.apache.tajo.cluster.distributed>>
 
    It is a flag used internally. It must be true.
 
@@ -95,20 +95,20 @@ Setting up tajo-site.xml
   The followings are other parameters. DO NOT modify the following configs unless you are an expert
   of Tajo.
 
-  * <<tajo.task.localdir>>
+  * <<org.apache.tajo.task.localdir>>
 
-  * <<tajo.join.task-volume.mb>>
+  * <<org.apache.tajo.join.task-volume.mb>>
 
-  * <<tajo.sort.task-volume.mb>>
+  * <<org.apache.tajo.sort.task-volume.mb>>
 
-  * <<tajo.task-aggregation.volume.mb>>
+  * <<org.apache.tajo.task-aggregation.volume.mb>>
 
-  * <<tajo.join.part-volume.mb>>
+  * <<org.apache.tajo.join.part-volume.mb>>
 
-  * <<tajo.sort.part-volume.mb>>
+  * <<org.apache.tajo.sort.part-volume.mb>>
 
-  * <<tajo.aggregation.part-volume.mb>>
+  * <<org.apache.tajo.aggregation.part-volume.mb>>
 
   []
 
-  <(still working)>
\ No newline at end of file
+  <(still working)>
diff --git tajo-project/src/site/apt/getting_started.apt tajo-project/src/site/apt/getting_started.apt
index bceb046..2611a3a 100644
--- tajo-project/src/site/apt/getting_started.apt
+++ tajo-project/src/site/apt/getting_started.apt
@@ -101,12 +101,12 @@ $ cp $TAJO_HOME/tajo-core-storage-x.y.z.jar $HADOOP_HOME/share/yarn/lib
 
 ---------------------------------------------------------------------
   <property>
-    <name>tajo.rootdir</name>
+    <name>org.apache.tajo.rootdir</name>
     <value>hdfs://hostname:port/tajo</value>
   </property>
 
   <property>
-    <name>tajo.cluster.distributed</name>
+    <name>org.apache.tajo.cluster.distributed</name>
     <value>true</value>
   </property>
 ---------------------------------------------------------------------
diff --git tajo-rpc/src/main/java/tajo/rpc/CallFuture.java tajo-rpc/src/main/java/tajo/rpc/CallFuture.java
index 74bc01b..4a000ad 100644
--- tajo-rpc/src/main/java/tajo/rpc/CallFuture.java
+++ tajo-rpc/src/main/java/tajo/rpc/CallFuture.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import java.util.concurrent.*;
 
diff --git tajo-rpc/src/main/java/tajo/rpc/CallFuture2.java tajo-rpc/src/main/java/tajo/rpc/CallFuture2.java
index 526f511..ddff447 100644
--- tajo-rpc/src/main/java/tajo/rpc/CallFuture2.java
+++ tajo-rpc/src/main/java/tajo/rpc/CallFuture2.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.RpcCallback;
 
diff --git tajo-rpc/src/main/java/tajo/rpc/Callback.java tajo-rpc/src/main/java/tajo/rpc/Callback.java
index 6f0432a..1a5c54d 100644
--- tajo-rpc/src/main/java/tajo/rpc/Callback.java
+++ tajo-rpc/src/main/java/tajo/rpc/Callback.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import java.util.concurrent.*;
 
diff --git tajo-rpc/src/main/java/tajo/rpc/NettyAsyncRpcProxy.java tajo-rpc/src/main/java/tajo/rpc/NettyAsyncRpcProxy.java
index 2906056..c8ea055 100644
--- tajo-rpc/src/main/java/tajo/rpc/NettyAsyncRpcProxy.java
+++ tajo-rpc/src/main/java/tajo/rpc/NettyAsyncRpcProxy.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.ByteString;
 import com.google.protobuf.Message;
@@ -24,8 +24,8 @@ import com.google.protobuf.RpcCallback;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.jboss.netty.channel.*;
-import tajo.rpc.ProtoParamRpcProtos.Invocation;
-import tajo.rpc.ProtoParamRpcProtos.Response;
+import org.apache.tajo.rpc.ProtoParamRpcProtos.Invocation;
+import org.apache.tajo.rpc.ProtoParamRpcProtos.Response;
 
 import java.lang.reflect.InvocationHandler;
 import java.lang.reflect.Method;
diff --git tajo-rpc/src/main/java/tajo/rpc/NettyBlockingRpcProxy.java tajo-rpc/src/main/java/tajo/rpc/NettyBlockingRpcProxy.java
index ceb6fb6..8954048 100644
--- tajo-rpc/src/main/java/tajo/rpc/NettyBlockingRpcProxy.java
+++ tajo-rpc/src/main/java/tajo/rpc/NettyBlockingRpcProxy.java
@@ -16,15 +16,15 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.ByteString;
 import com.google.protobuf.Message;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.jboss.netty.channel.*;
-import tajo.rpc.ProtoParamRpcProtos.Invocation;
-import tajo.rpc.ProtoParamRpcProtos.Response;
+import org.apache.tajo.rpc.ProtoParamRpcProtos.Invocation;
+import org.apache.tajo.rpc.ProtoParamRpcProtos.Response;
 
 import java.lang.reflect.InvocationHandler;
 import java.lang.reflect.Method;
diff --git tajo-rpc/src/main/java/tajo/rpc/NettyClientBase.java tajo-rpc/src/main/java/tajo/rpc/NettyClientBase.java
index e139b1d..d220e13 100644
--- tajo-rpc/src/main/java/tajo/rpc/NettyClientBase.java
+++ tajo-rpc/src/main/java/tajo/rpc/NettyClientBase.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
diff --git tajo-rpc/src/main/java/tajo/rpc/NettyRpc.java tajo-rpc/src/main/java/tajo/rpc/NettyRpc.java
index 54285b2..a0fd9a2 100644
--- tajo-rpc/src/main/java/tajo/rpc/NettyRpc.java
+++ tajo-rpc/src/main/java/tajo/rpc/NettyRpc.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import java.net.InetSocketAddress;
 
diff --git tajo-rpc/src/main/java/tajo/rpc/NettyRpcController.java tajo-rpc/src/main/java/tajo/rpc/NettyRpcController.java
index 1d04a0f..b7f4537 100644
--- tajo-rpc/src/main/java/tajo/rpc/NettyRpcController.java
+++ tajo-rpc/src/main/java/tajo/rpc/NettyRpcController.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.RpcCallback;
 import com.google.protobuf.RpcController;
diff --git tajo-rpc/src/main/java/tajo/rpc/NettyRpcServer.java tajo-rpc/src/main/java/tajo/rpc/NettyRpcServer.java
index a276d7e..26541a4 100644
--- tajo-rpc/src/main/java/tajo/rpc/NettyRpcServer.java
+++ tajo-rpc/src/main/java/tajo/rpc/NettyRpcServer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.ByteString;
 import com.google.protobuf.Message;
@@ -25,8 +25,8 @@ import org.apache.commons.lang.exception.ExceptionUtils;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.jboss.netty.channel.*;
-import tajo.rpc.ProtoParamRpcProtos.Invocation;
-import tajo.rpc.ProtoParamRpcProtos.Response;
+import org.apache.tajo.rpc.ProtoParamRpcProtos.Invocation;
+import org.apache.tajo.rpc.ProtoParamRpcProtos.Response;
 
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
diff --git tajo-rpc/src/main/java/tajo/rpc/NettyServerBase.java tajo-rpc/src/main/java/tajo/rpc/NettyServerBase.java
index 19ffd60..9843762 100644
--- tajo-rpc/src/main/java/tajo/rpc/NettyServerBase.java
+++ tajo-rpc/src/main/java/tajo/rpc/NettyServerBase.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -122,7 +122,7 @@ public class NettyServerBase {
 
   public void shutdown() {
     channel.close().awaitUninterruptibly();
-    LOG.info("RpcServer (" + tajo.util.NetUtils.getIpPortString(bindAddress)
+    LOG.info("RpcServer (" + org.apache.tajo.util.NetUtils.getIpPortString(bindAddress)
         + ") shutdown");
   }
 
diff --git tajo-rpc/src/main/java/tajo/rpc/NullCallback.java tajo-rpc/src/main/java/tajo/rpc/NullCallback.java
index 859f748..70135a6 100644
--- tajo-rpc/src/main/java/tajo/rpc/NullCallback.java
+++ tajo-rpc/src/main/java/tajo/rpc/NullCallback.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.RpcCallback;
 
diff --git tajo-rpc/src/main/java/tajo/rpc/ProtoAsyncRpcClient.java tajo-rpc/src/main/java/tajo/rpc/ProtoAsyncRpcClient.java
index 22ce0aa..6afbdf5 100644
--- tajo-rpc/src/main/java/tajo/rpc/ProtoAsyncRpcClient.java
+++ tajo-rpc/src/main/java/tajo/rpc/ProtoAsyncRpcClient.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.Descriptors.MethodDescriptor;
 import com.google.protobuf.*;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.jboss.netty.channel.*;
-import tajo.rpc.RpcProtos.RpcRequest;
-import tajo.rpc.RpcProtos.RpcResponse;
-import tajo.util.NetUtils;
+import org.apache.tajo.rpc.RpcProtos.RpcRequest;
+import org.apache.tajo.rpc.RpcProtos.RpcResponse;
+import org.apache.tajo.util.NetUtils;
 
 import java.lang.reflect.Method;
 import java.net.InetSocketAddress;
diff --git tajo-rpc/src/main/java/tajo/rpc/ProtoAsyncRpcServer.java tajo-rpc/src/main/java/tajo/rpc/ProtoAsyncRpcServer.java
index a2ac5cc..46ad761 100644
--- tajo-rpc/src/main/java/tajo/rpc/ProtoAsyncRpcServer.java
+++ tajo-rpc/src/main/java/tajo/rpc/ProtoAsyncRpcServer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.Descriptors.MethodDescriptor;
 import com.google.protobuf.Message;
@@ -26,8 +26,8 @@ import com.google.protobuf.Service;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.jboss.netty.channel.*;
-import tajo.rpc.RpcProtos.RpcRequest;
-import tajo.rpc.RpcProtos.RpcResponse;
+import org.apache.tajo.rpc.RpcProtos.RpcRequest;
+import org.apache.tajo.rpc.RpcProtos.RpcResponse;
 
 import java.lang.reflect.Method;
 import java.net.InetSocketAddress;
diff --git tajo-rpc/src/main/java/tajo/rpc/ProtoBlockingRpcClient.java tajo-rpc/src/main/java/tajo/rpc/ProtoBlockingRpcClient.java
index 5c4b8e3..8b61ce4 100644
--- tajo-rpc/src/main/java/tajo/rpc/ProtoBlockingRpcClient.java
+++ tajo-rpc/src/main/java/tajo/rpc/ProtoBlockingRpcClient.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.BlockingRpcChannel;
 import com.google.protobuf.Descriptors.MethodDescriptor;
@@ -26,9 +26,9 @@ import com.google.protobuf.ServiceException;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.jboss.netty.channel.*;
-import tajo.rpc.RpcProtos.RpcRequest;
-import tajo.rpc.RpcProtos.RpcResponse;
-import tajo.util.NetUtils;
+import org.apache.tajo.rpc.RpcProtos.RpcRequest;
+import org.apache.tajo.rpc.RpcProtos.RpcResponse;
+import org.apache.tajo.util.NetUtils;
 
 import java.lang.reflect.Method;
 import java.net.InetSocketAddress;
diff --git tajo-rpc/src/main/java/tajo/rpc/ProtoBlockingRpcServer.java tajo-rpc/src/main/java/tajo/rpc/ProtoBlockingRpcServer.java
index e622bf9..ca70536 100644
--- tajo-rpc/src/main/java/tajo/rpc/ProtoBlockingRpcServer.java
+++ tajo-rpc/src/main/java/tajo/rpc/ProtoBlockingRpcServer.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.BlockingService;
 import com.google.protobuf.Descriptors.MethodDescriptor;
@@ -25,8 +25,8 @@ import com.google.protobuf.RpcController;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.jboss.netty.channel.*;
-import tajo.rpc.RpcProtos.RpcRequest;
-import tajo.rpc.RpcProtos.RpcResponse;
+import org.apache.tajo.rpc.RpcProtos.RpcRequest;
+import org.apache.tajo.rpc.RpcProtos.RpcResponse;
 
 import java.lang.reflect.Method;
 import java.net.InetSocketAddress;
diff --git tajo-rpc/src/main/java/tajo/rpc/ProtoPipelineFactory.java tajo-rpc/src/main/java/tajo/rpc/ProtoPipelineFactory.java
index ea61d86..b2a2004 100644
--- tajo-rpc/src/main/java/tajo/rpc/ProtoPipelineFactory.java
+++ tajo-rpc/src/main/java/tajo/rpc/ProtoPipelineFactory.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.MessageLite;
 import org.jboss.netty.channel.ChannelPipeline;
diff --git tajo-rpc/src/main/java/tajo/rpc/RemoteCallException.java tajo-rpc/src/main/java/tajo/rpc/RemoteCallException.java
index b319726..6504e69 100644
--- tajo-rpc/src/main/java/tajo/rpc/RemoteCallException.java
+++ tajo-rpc/src/main/java/tajo/rpc/RemoteCallException.java
@@ -16,10 +16,10 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.Descriptors.MethodDescriptor;
-import tajo.rpc.RpcProtos.RpcResponse;
+import org.apache.tajo.rpc.RpcProtos.RpcResponse;
 
 import java.io.PrintWriter;
 import java.io.StringWriter;
diff --git tajo-rpc/src/main/java/tajo/rpc/RemoteException.java tajo-rpc/src/main/java/tajo/rpc/RemoteException.java
index 7c8c84d..30c110d 100644
--- tajo-rpc/src/main/java/tajo/rpc/RemoteException.java
+++ tajo-rpc/src/main/java/tajo/rpc/RemoteException.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 public class RemoteException extends RuntimeException {
   public RemoteException() {
diff --git tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkAsyncRPC.java tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkAsyncRPC.java
index 043449c..d61d242 100644
--- tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkAsyncRPC.java
+++ tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkAsyncRPC.java
@@ -16,13 +16,13 @@
  * limitations under the License.
  */
 
-package tajo.rpc.benchmark;
+package org.apache.tajo.rpc.benchmark;
 
-import tajo.rpc.Callback;
-import tajo.rpc.NettyRpc;
-import tajo.rpc.NettyRpcServer;
-import tajo.rpc.RemoteException;
-import tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
+import org.apache.tajo.rpc.Callback;
+import org.apache.tajo.rpc.NettyRpc;
+import org.apache.tajo.rpc.NettyRpcServer;
+import org.apache.tajo.rpc.RemoteException;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
 
 import java.net.InetSocketAddress;
 
diff --git tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkBlockingRPC.java tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkBlockingRPC.java
index 110c668..5ca9bd0 100644
--- tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkBlockingRPC.java
+++ tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkBlockingRPC.java
@@ -16,12 +16,12 @@
  * limitations under the License.
  */
 
-package tajo.rpc.benchmark;
+package org.apache.tajo.rpc.benchmark;
 
-import tajo.rpc.NettyRpc;
-import tajo.rpc.NettyRpcServer;
-import tajo.rpc.RemoteException;
-import tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
+import org.apache.tajo.rpc.NettyRpc;
+import org.apache.tajo.rpc.NettyRpcServer;
+import org.apache.tajo.rpc.RemoteException;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.StringProto;
 
 import java.net.InetSocketAddress;
 
diff --git tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkHadoopRPC.java tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkHadoopRPC.java
index 222411e..6487fde 100644
--- tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkHadoopRPC.java
+++ tajo-rpc/src/main/java/tajo/rpc/benchmark/BenchmarkHadoopRPC.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc.benchmark;
+package org.apache.tajo.rpc.benchmark;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.ipc.ProtocolSignature;
diff --git tajo-rpc/src/main/java/tajo/util/NetUtils.java tajo-rpc/src/main/java/tajo/util/NetUtils.java
index 5800496..1c2b13c 100644
--- tajo-rpc/src/main/java/tajo/util/NetUtils.java
+++ tajo-rpc/src/main/java/tajo/util/NetUtils.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.util;
+package org.apache.tajo.util;
 
 import java.net.InetSocketAddress;
 
diff --git tajo-rpc/src/main/proto/DummyProtos.proto tajo-rpc/src/main/proto/DummyProtos.proto
index 1de1789..f53f0d6 100644
--- tajo-rpc/src/main/proto/DummyProtos.proto
+++ tajo-rpc/src/main/proto/DummyProtos.proto
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.rpc.test";
+option java_package = "org.apache.tajo.rpc.test";
 option java_outer_classname = "DummyProtos";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-rpc/src/main/proto/PrimitiveProtos.proto tajo-rpc/src/main/proto/PrimitiveProtos.proto
index 64893cb..01c39f7 100644
--- tajo-rpc/src/main/proto/PrimitiveProtos.proto
+++ tajo-rpc/src/main/proto/PrimitiveProtos.proto
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.rpc.protocolrecords";
+option java_package = "org.apache.tajo.rpc.protocolrecords";
 option java_outer_classname = "PrimitiveProtos";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-rpc/src/main/proto/ProtoParamRpcProtocol.proto tajo-rpc/src/main/proto/ProtoParamRpcProtocol.proto
index 3c13340..f8cac2a 100644
--- tajo-rpc/src/main/proto/ProtoParamRpcProtocol.proto
+++ tajo-rpc/src/main/proto/ProtoParamRpcProtocol.proto
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.rpc";
+option java_package = "org.apache.tajo.rpc";
 option java_outer_classname = "ProtoParamRpcProtocol";
 option java_generic_services = true;
 
diff --git tajo-rpc/src/main/proto/ProtoParamRpcProtos.proto tajo-rpc/src/main/proto/ProtoParamRpcProtos.proto
index feb2c2b..5cde52f 100644
--- tajo-rpc/src/main/proto/ProtoParamRpcProtos.proto
+++ tajo-rpc/src/main/proto/ProtoParamRpcProtos.proto
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.rpc";
+option java_package = "org.apache.tajo.rpc";
 option java_outer_classname = "ProtoParamRpcProtos";
 
 message Invocation {
diff --git tajo-rpc/src/main/proto/RpcProtos.proto tajo-rpc/src/main/proto/RpcProtos.proto
index 8e0166a..2dac58d 100644
--- tajo-rpc/src/main/proto/RpcProtos.proto
+++ tajo-rpc/src/main/proto/RpcProtos.proto
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.rpc";
+option java_package = "org.apache.tajo.rpc";
 option java_outer_classname = "RpcProtos";
 
 message RpcRequest {
diff --git tajo-rpc/src/main/proto/TestProtocol.proto tajo-rpc/src/main/proto/TestProtocol.proto
index 37c5647..b524781 100644
--- tajo-rpc/src/main/proto/TestProtocol.proto
+++ tajo-rpc/src/main/proto/TestProtocol.proto
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.rpc.test";
+option java_package = "org.apache.tajo.rpc.test";
 option java_outer_classname = "DummyProtocol";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-rpc/src/main/proto/TestProtos.proto tajo-rpc/src/main/proto/TestProtos.proto
index ac2c8b1..5001c0e 100644
--- tajo-rpc/src/main/proto/TestProtos.proto
+++ tajo-rpc/src/main/proto/TestProtos.proto
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-option java_package = "tajo.rpc.test";
+option java_package = "org.apache.tajo.rpc.test";
 option java_outer_classname = "TestProtos";
 option java_generic_services = true;
 option java_generate_equals_and_hash = true;
diff --git tajo-rpc/src/test/java/tajo/rpc/TestNettyAsyncRpc.java tajo-rpc/src/test/java/tajo/rpc/TestNettyAsyncRpc.java
index 50ff8fa..d05eef6 100644
--- tajo-rpc/src/test/java/tajo/rpc/TestNettyAsyncRpc.java
+++ tajo-rpc/src/test/java/tajo/rpc/TestNettyAsyncRpc.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.rpc.protocolrecords.PrimitiveProtos.NullProto;
-import tajo.rpc.test.DummyProtos.MulRequest1;
-import tajo.rpc.test.DummyProtos.MulResponse;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto;
+import org.apache.tajo.rpc.test.DummyProtos.MulRequest1;
+import org.apache.tajo.rpc.test.DummyProtos.MulResponse;
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
diff --git tajo-rpc/src/test/java/tajo/rpc/TestNettyBlockingRpc.java tajo-rpc/src/test/java/tajo/rpc/TestNettyBlockingRpc.java
index 58b9bdb..5967dfa 100644
--- tajo-rpc/src/test/java/tajo/rpc/TestNettyBlockingRpc.java
+++ tajo-rpc/src/test/java/tajo/rpc/TestNettyBlockingRpc.java
@@ -16,14 +16,14 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.rpc.protocolrecords.PrimitiveProtos.NullProto;
-import tajo.rpc.test.DummyProtos.MulRequest1;
-import tajo.rpc.test.DummyProtos.MulResponse;
+import org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.NullProto;
+import org.apache.tajo.rpc.test.DummyProtos.MulRequest1;
+import org.apache.tajo.rpc.test.DummyProtos.MulResponse;
 
 import java.io.IOException;
 import java.net.InetSocketAddress;
diff --git tajo-rpc/src/test/java/tajo/rpc/TestProtoAsyncRpc.java tajo-rpc/src/test/java/tajo/rpc/TestProtoAsyncRpc.java
index 91303e3..cc371c4 100644
--- tajo-rpc/src/test/java/tajo/rpc/TestProtoAsyncRpc.java
+++ tajo-rpc/src/test/java/tajo/rpc/TestProtoAsyncRpc.java
@@ -16,7 +16,7 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.RpcCallback;
 import com.google.protobuf.RpcController;
@@ -25,12 +25,12 @@ import org.apache.commons.logging.LogFactory;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
-import tajo.rpc.test.DummyProtocol;
-import tajo.rpc.test.DummyProtocol.DummyProtocolService.Interface;
-import tajo.rpc.test.TestProtos.EchoMessage;
-import tajo.rpc.test.TestProtos.SumRequest;
-import tajo.rpc.test.TestProtos.SumResponse;
-import tajo.rpc.test.impl.DummyProtocolAsyncImpl;
+import org.apache.tajo.rpc.test.DummyProtocol;
+import org.apache.tajo.rpc.test.DummyProtocol.DummyProtocolService.Interface;
+import org.apache.tajo.rpc.test.TestProtos.EchoMessage;
+import org.apache.tajo.rpc.test.TestProtos.SumRequest;
+import org.apache.tajo.rpc.test.TestProtos.SumResponse;
+import org.apache.tajo.rpc.test.impl.DummyProtocolAsyncImpl;
 
 import java.net.InetSocketAddress;
 import java.util.concurrent.CountDownLatch;
diff --git tajo-rpc/src/test/java/tajo/rpc/TestProtoBlockingRpc.java tajo-rpc/src/test/java/tajo/rpc/TestProtoBlockingRpc.java
index 39c4f88..711904b 100644
--- tajo-rpc/src/test/java/tajo/rpc/TestProtoBlockingRpc.java
+++ tajo-rpc/src/test/java/tajo/rpc/TestProtoBlockingRpc.java
@@ -16,18 +16,18 @@
  * limitations under the License.
  */
 
-package tajo.rpc;
+package org.apache.tajo.rpc;
 
 import com.google.protobuf.RpcController;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
-import tajo.rpc.test.DummyProtocol;
-import tajo.rpc.test.DummyProtocol.DummyProtocolService.BlockingInterface;
-import tajo.rpc.test.TestProtos.EchoMessage;
-import tajo.rpc.test.TestProtos.SumRequest;
-import tajo.rpc.test.TestProtos.SumResponse;
-import tajo.rpc.test.impl.DummyProtocolBlockingImpl;
+import org.apache.tajo.rpc.test.DummyProtocol;
+import org.apache.tajo.rpc.test.DummyProtocol.DummyProtocolService.BlockingInterface;
+import org.apache.tajo.rpc.test.TestProtos.EchoMessage;
+import org.apache.tajo.rpc.test.TestProtos.SumRequest;
+import org.apache.tajo.rpc.test.TestProtos.SumResponse;
+import org.apache.tajo.rpc.test.impl.DummyProtocolBlockingImpl;
 
 import java.net.InetSocketAddress;
 
diff --git tajo-rpc/src/test/java/tajo/rpc/test/impl/DummyProtocolAsyncImpl.java tajo-rpc/src/test/java/tajo/rpc/test/impl/DummyProtocolAsyncImpl.java
index 7908367..7716e07 100644
--- tajo-rpc/src/test/java/tajo/rpc/test/impl/DummyProtocolAsyncImpl.java
+++ tajo-rpc/src/test/java/tajo/rpc/test/impl/DummyProtocolAsyncImpl.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.rpc.test.impl;
+package org.apache.tajo.rpc.test.impl;
 
 import com.google.protobuf.RpcCallback;
 import com.google.protobuf.RpcController;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.rpc.test.DummyProtocol.DummyProtocolService.Interface;
-import tajo.rpc.test.TestProtos.EchoMessage;
-import tajo.rpc.test.TestProtos.SumRequest;
-import tajo.rpc.test.TestProtos.SumResponse;
+import org.apache.tajo.rpc.test.DummyProtocol.DummyProtocolService.Interface;
+import org.apache.tajo.rpc.test.TestProtos.EchoMessage;
+import org.apache.tajo.rpc.test.TestProtos.SumRequest;
+import org.apache.tajo.rpc.test.TestProtos.SumResponse;
 
 @SuppressWarnings("UnusedDeclaration")
 public class DummyProtocolAsyncImpl implements Interface {
diff --git tajo-rpc/src/test/java/tajo/rpc/test/impl/DummyProtocolBlockingImpl.java tajo-rpc/src/test/java/tajo/rpc/test/impl/DummyProtocolBlockingImpl.java
index de8e46a..6155727 100644
--- tajo-rpc/src/test/java/tajo/rpc/test/impl/DummyProtocolBlockingImpl.java
+++ tajo-rpc/src/test/java/tajo/rpc/test/impl/DummyProtocolBlockingImpl.java
@@ -16,16 +16,16 @@
  * limitations under the License.
  */
 
-package tajo.rpc.test.impl;
+package org.apache.tajo.rpc.test.impl;
 
 import com.google.protobuf.RpcController;
 import com.google.protobuf.ServiceException;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
-import tajo.rpc.test.DummyProtocol.DummyProtocolService.BlockingInterface;
-import tajo.rpc.test.TestProtos.EchoMessage;
-import tajo.rpc.test.TestProtos.SumRequest;
-import tajo.rpc.test.TestProtos.SumResponse;
+import org.apache.tajo.rpc.test.DummyProtocol.DummyProtocolService.BlockingInterface;
+import org.apache.tajo.rpc.test.TestProtos.EchoMessage;
+import org.apache.tajo.rpc.test.TestProtos.SumRequest;
+import org.apache.tajo.rpc.test.TestProtos.SumResponse;
 
 public class DummyProtocolBlockingImpl implements BlockingInterface {
   private static final Log LOG =
